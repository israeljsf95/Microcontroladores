;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/03/2020 09:09:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040610  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0610	0x20838F  	MOV	#2104, W15
0x0612	0x20FFF0  	MOV	#4095, W0
0x0614	0xB7A020  	MOV	WREG, SPLIM
0x0616	0x200000  	MOV	#0, W0
0x0618	0xB7A034  	MOV	WREG, PSVPAG
0x061A	0x200040  	MOV	#4, W0
0x061C	0xB72044  	IOR	CORCON
0x061E	0x0000000206BC  	CALL	1724
0x0622	0x0000000206C6  	CALL	1734
;q4.c,101 :: 		void main()
;q4.c,104 :: 		ADPCFG = 0xFFFF;
0x0626	0x2FFFF0  	MOV	#65535, W0
0x0628	0xB7A2A8  	MOV	WREG, ADPCFG
;q4.c,105 :: 		ADPCFGbits.PCFG2 = 0;
0x062A	0xA942A8  	BCLR.B	ADPCFGbits, #2
;q4.c,106 :: 		ADPCFGbits.PCFG5 = 0;
0x062C	0xA9A2A8  	BCLR.B	ADPCFGbits, #5
;q4.c,107 :: 		ADPCFGbits.PCFG7 = 0;
0x062E	0xA9E2A8  	BCLR.B	ADPCFGbits, #7
;q4.c,109 :: 		TRISEbits.TRISE8 = 1;
0x0630	0xA802D9  	BSET	TRISEbits, #8
;q4.c,110 :: 		IEC0bits.INT0IE = 1; //Talvez as coisas nao usem
0x0632	0xA8008C  	BSET.B	IEC0bits, #0
;q4.c,111 :: 		IFS0 = 0;
0x0634	0xEF2084  	CLR	IFS0
;q4.c,113 :: 		TRISDbits.TRISD1 = 1;
0x0636	0xA822D2  	BSET.B	TRISDbits, #1
;q4.c,114 :: 		IEC1bits.INT2IE = 1;
0x0638	0xA8E08E  	BSET.B	IEC1bits, #7
;q4.c,115 :: 		IFS1 = 0;
0x063A	0xEF2086  	CLR	IFS1
;q4.c,117 :: 		TRISBbits.TRISB0 = 0;
0x063C	0xA902C6  	BCLR.B	TRISBbits, #0
;q4.c,118 :: 		TRISBbits.TRISB1 = 0;
0x063E	0xA922C6  	BCLR.B	TRISBbits, #1
;q4.c,120 :: 		ADCON1 = 0;
0x0640	0xEF22A0  	CLR	ADCON1
;q4.c,121 :: 		ADCON1bits.SSRC = 0b010; // Sincando o tempo de conversao com o timer 3
0x0642	0xB3C400  	MOV.B	#64, W0
0x0644	0x784080  	MOV.B	W0, W1
0x0646	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x0648	0x68C090  	XOR.B	W1, [W0], W1
0x064A	0xB3CE00  	MOV.B	#224, W0
0x064C	0x60C080  	AND.B	W1, W0, W1
0x064E	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x0650	0x68C090  	XOR.B	W1, [W0], W1
0x0652	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x0654	0x784801  	MOV.B	W1, [W0]
;q4.c,124 :: 		TMR3 = 0x0000;
0x0656	0xEF210A  	CLR	TMR3
;q4.c,125 :: 		PR3 = 2000;
0x0658	0x207D00  	MOV	#2000, W0
0x065A	0xB7A10E  	MOV	WREG, PR3
;q4.c,126 :: 		T3CON = 0x8000;
0x065C	0x280000  	MOV	#32768, W0
0x065E	0xB7A112  	MOV	WREG, T3CON
;q4.c,129 :: 		ADCHSbits.CH0SA = 0b0010; // Connect RB2/AN2 as CH0 input ..
0x0660	0xB3C020  	MOV.B	#2, W0
0x0662	0x784080  	MOV.B	W0, W1
0x0664	0x202A60  	MOV	#lo_addr(ADCHSbits), W0
0x0666	0x68C090  	XOR.B	W1, [W0], W1
0x0668	0x60C0EF  	AND.B	W1, #15, W1
0x066A	0x202A60  	MOV	#lo_addr(ADCHSbits), W0
0x066C	0x68C090  	XOR.B	W1, [W0], W1
0x066E	0x202A60  	MOV	#lo_addr(ADCHSbits), W0
0x0670	0x784801  	MOV.B	W1, [W0]
;q4.c,130 :: 		ADCSSL = 0;
0x0672	0xEF22AA  	CLR	ADCSSL
;q4.c,131 :: 		ADCON3 = 0x0008;
0x0674	0x200080  	MOV	#8, W0
0x0676	0xB7A2A4  	MOV	WREG, ADCON3
;q4.c,132 :: 		ADCON2 = 0;
0x0678	0xEF22A2  	CLR	ADCON2
;q4.c,133 :: 		ADCON2bits.SMPI = 0b1111;
0x067A	0x202A20  	MOV	#lo_addr(ADCON2bits), W0
0x067C	0x784090  	MOV.B	[W0], W1
0x067E	0xB3C3C0  	MOV.B	#60, W0
0x0680	0x70C080  	IOR.B	W1, W0, W1
0x0682	0x202A20  	MOV	#lo_addr(ADCON2bits), W0
0x0684	0x784801  	MOV.B	W1, [W0]
;q4.c,134 :: 		ADCON1.ADON = 1;
0x0686	0xA8E2A1  	BSET	ADCON1, #15
;q4.c,136 :: 		IEC0bits.T1IE = 1;
0x0688	0xA8608C  	BSET.B	IEC0bits, #3
;q4.c,139 :: 		TMR1 = 0x0000;
0x068A	0xEF2100  	CLR	TMR1
;q4.c,140 :: 		PR1 = 31250;
0x068C	0x27A120  	MOV	#31250, W0
0x068E	0xB7A102  	MOV	WREG, PR1
;q4.c,141 :: 		T1CON = 0x8030;
0x0690	0x280300  	MOV	#32816, W0
0x0692	0xB7A104  	MOV	WREG, T1CON
;q4.c,143 :: 		T1CONbits.TCKPS = 0b11;
0x0694	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x0696	0x784090  	MOV.B	[W0], W1
0x0698	0xB3C300  	MOV.B	#48, W0
0x069A	0x70C080  	IOR.B	W1, W0, W1
0x069C	0x201040  	MOV	#lo_addr(T1CONbits), W0
0x069E	0x784801  	MOV.B	W1, [W0]
;q4.c,144 :: 		IEC0bits.T1IE = 1;
0x06A0	0xA8608C  	BSET.B	IEC0bits, #3
;q4.c,145 :: 		IFS0bits.T1IF = 0;
0x06A2	0xA96084  	BCLR.B	IFS0bits, #3
;q4.c,146 :: 		while (1)
L_main21:
;q4.c,148 :: 		converter();
0x06A4	0x07FF46  	RCALL	_converter
;q4.c,160 :: 		}
0x06A6	0x37FFFE  	BRA	L_main21
;q4.c,161 :: 		}
L_end_main:
L__main_end_loop:
0x06A8	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_converter:
;q4.c,71 :: 		void converter()
;q4.c,73 :: 		for (i = 0; i < 3; i++)
0x0532	0x781F8A  	PUSH	W10
0x0534	0x781F8B  	PUSH	W11
0x0536	0x781F8C  	PUSH	W12
0x0538	0x781F8D  	PUSH	W13
0x053A	0xEF2000  	CLR	W0
0x053C	0x8840B0  	MOV	W0, _i
L_converter13:
0x053E	0x8040B0  	MOV	_i, W0
0x0540	0xE10063  	CP	W0, #3
0x0542	0x3D0033  	BRA GE	L_converter14
L__converter36:
;q4.c,75 :: 		ADCHSbits.CH0SA = canais[i];
0x0544	0x8040B0  	MOV	_i, W0
0x0546	0xDD00C1  	SL	W0, #1, W1
0x0548	0x208080  	MOV	#lo_addr(_canais), W0
0x054A	0x400001  	ADD	W0, W1, W0
0x054C	0x784010  	MOV.B	[W0], W0
0x054E	0x784080  	MOV.B	W0, W1
0x0550	0x202A60  	MOV	#lo_addr(ADCHSbits), W0
0x0552	0x68C090  	XOR.B	W1, [W0], W1
0x0554	0x60C0EF  	AND.B	W1, #15, W1
0x0556	0x202A60  	MOV	#lo_addr(ADCHSbits), W0
0x0558	0x68C090  	XOR.B	W1, [W0], W1
0x055A	0x202A60  	MOV	#lo_addr(ADCHSbits), W0
0x055C	0x784801  	MOV.B	W1, [W0]
;q4.c,76 :: 		soma = 0;
0x055E	0xEF2000  	CLR	W0
0x0560	0x8840C0  	MOV	W0, _soma
;q4.c,77 :: 		ADC16Ptr = &ADCBUF0;
0x0562	0x202800  	MOV	#lo_addr(ADCBUF0), W0
0x0564	0x8840A0  	MOV	W0, _ADC16Ptr
;q4.c,78 :: 		IFS0bits.ADIF = 0;
0x0566	0xA96085  	BCLR	IFS0bits, #11
;q4.c,79 :: 		ADCON1bits.ASAM = 1;
0x0568	0xA842A0  	BSET.B	ADCON1bits, #2
;q4.c,80 :: 		while (!IFS0bits.ADIF)
L_converter16:
0x056A	0xAF6085  	BTSC	IFS0bits, #11
0x056C	0x370001  	BRA	L_converter17
;q4.c,81 :: 		;
0x056E	0x37FFFD  	BRA	L_converter16
L_converter17:
;q4.c,82 :: 		ADCON1bits.ASAM = 0;
0x0570	0xA942A0  	BCLR.B	ADCON1bits, #2
;q4.c,83 :: 		for (j = 0; j < 16; j++)
0x0572	0xEF2000  	CLR	W0
0x0574	0x884090  	MOV	W0, _j
L_converter18:
0x0576	0x804090  	MOV	_j, W0
0x0578	0xE10070  	CP	W0, #16
0x057A	0x3D000D  	BRA GE	L_converter19
L__converter37:
;q4.c,85 :: 		soma = soma + *ADC16Ptr++;
0x057C	0x8040A1  	MOV	_ADC16Ptr, W1
0x057E	0x8040C0  	MOV	_soma, W0
0x0580	0x400111  	ADD	W0, [W1], W2
0x0582	0x8840C2  	MOV	W2, _soma
0x0584	0x200021  	MOV	#2, W1
0x0586	0x208140  	MOV	#lo_addr(_ADC16Ptr), W0
0x0588	0x408810  	ADD	W1, [W0], [W0]
;q4.c,86 :: 		soma = soma >> 1;
0x058A	0xDE9041  	ASR	W2, #1, W0
0x058C	0x8840C0  	MOV	W0, _soma
;q4.c,83 :: 		for (j = 0; j < 16; j++)
0x058E	0x200011  	MOV	#1, W1
0x0590	0x208120  	MOV	#lo_addr(_j), W0
0x0592	0x408810  	ADD	W1, [W0], [W0]
;q4.c,87 :: 		}
0x0594	0x37FFF0  	BRA	L_converter18
L_converter19:
;q4.c,88 :: 		media[i] = soma;
0x0596	0x8040B0  	MOV	_i, W0
0x0598	0xDD00C1  	SL	W0, #1, W1
0x059A	0x208320  	MOV	#lo_addr(_media), W0
0x059C	0x400081  	ADD	W0, W1, W1
0x059E	0x8040C0  	MOV	_soma, W0
0x05A0	0x780880  	MOV	W0, [W1]
;q4.c,73 :: 		for (i = 0; i < 3; i++)
0x05A2	0x200011  	MOV	#1, W1
0x05A4	0x208160  	MOV	#lo_addr(_i), W0
0x05A6	0x408810  	ADD	W1, [W0], [W0]
;q4.c,89 :: 		}
0x05A8	0x37FFCA  	BRA	L_converter13
L_converter14:
;q4.c,90 :: 		temp = media[1] * 0.488758;
0x05AA	0x8041A0  	MOV	_media+2, W0
0x05AC	0xDE80CF  	ASR	W0, #15, W1
0x05AE	0xEB8100  	SETM	W2
0x05B0	0x07FEBF  	RCALL	__Long2Float
0x05B2	0x23E7D2  	MOV	#15997, W2
0x05B4	0x23EFA3  	MOV	#16122, W3
0x05B6	0x07FDDA  	RCALL	__Mul_FP
0x05B8	0x884070  	MOV	W0, _temp
0x05BA	0x884081  	MOV	W1, _temp+2
;q4.c,91 :: 		ldr = media[2] * 5 / 1023;
0x05BC	0x8041B1  	MOV	_media+4, W1
0x05BE	0x200050  	MOV	#5, W0
0x05C0	0xB98800  	MUL.SS	W1, W0, W0
0x05C2	0x203FF2  	MOV	#1023, W2
0x05C4	0x090011  	REPEAT	#17
0x05C6	0xD80002  	DIV.S	W0, W2
0x05C8	0xDE80CF  	ASR	W0, #15, W1
0x05CA	0xEB8100  	SETM	W2
0x05CC	0x07FEB1  	RCALL	__Long2Float
0x05CE	0x884020  	MOV	W0, _ldr
0x05D0	0x884031  	MOV	W1, _ldr+2
;q4.c,92 :: 		pot = media[0] * 5 / 1023;
0x05D2	0x804191  	MOV	_media, W1
0x05D4	0x200050  	MOV	#5, W0
0x05D6	0xB98800  	MUL.SS	W1, W0, W0
0x05D8	0x203FF2  	MOV	#1023, W2
0x05DA	0x090011  	REPEAT	#17
0x05DC	0xD80002  	DIV.S	W0, W2
0x05DE	0xDE80CF  	ASR	W0, #15, W1
0x05E0	0xEB8100  	SETM	W2
0x05E2	0x07FEA6  	RCALL	__Long2Float
0x05E4	0x884000  	MOV	W0, _pot
0x05E6	0x884011  	MOV	W1, _pot+2
;q4.c,93 :: 		nFloatToStr(temp, 2, txt_temp);
0x05E8	0x2082AD  	MOV	#lo_addr(_txt_temp), W13
0x05EA	0xB3C02C  	MOV.B	#2, W12
0x05EC	0x80407A  	MOV	_temp, W10
0x05EE	0x80408B  	MOV	_temp+2, W11
0x05F0	0x07FF03  	RCALL	_nFloatToStr
;q4.c,94 :: 		nFloatToStr(ldr, 2, txt_ldr);
0x05F2	0x20822D  	MOV	#lo_addr(_txt_ldr), W13
0x05F4	0xB3C02C  	MOV.B	#2, W12
0x05F6	0x80402A  	MOV	_ldr, W10
0x05F8	0x80403B  	MOV	_ldr+2, W11
0x05FA	0x07FEFE  	RCALL	_nFloatToStr
;q4.c,95 :: 		nFloatToStr(pot, 2, txt_pot);
0x05FC	0x2081AD  	MOV	#lo_addr(_txt_pot), W13
0x05FE	0xB3C02C  	MOV.B	#2, W12
0x0600	0x80400A  	MOV	_pot, W10
0x0602	0x80401B  	MOV	_pot+2, W11
0x0604	0x07FEF9  	RCALL	_nFloatToStr
;q4.c,96 :: 		}
L_end_converter:
0x0606	0x7806CF  	POP	W13
0x0608	0x78064F  	POP	W12
0x060A	0x7805CF  	POP	W11
0x060C	0x78054F  	POP	W10
0x060E	0x060000  	RETURN
; end of _converter
_nFloatToStr:
0x03F8	0xFA000A  	LNK	#10
;q4.c,36 :: 		void nFloatToStr(float f, short p, char *txt)
;q4.c,39 :: 		char sign = ((char *)&f)[2].B7;
0x03FA	0x200140  	MOV	#lo_addr(W10), W0
0x03FC	0xECA000  	INC2	W0
0x03FE	0x784090  	MOV.B	[W0], W1
0x0400	0x470064  	ADD	W14, #4, W0
0x0402	0xEB4800  	CLR.B	[W0]
0x0404	0xAFE002  	BTSC.B	W1, #7
0x0406	0xE84810  	INC.B	[W0], [W0]
;q4.c,40 :: 		unsigned long factor = 10;
; factor start address is: 8 (W4)
0x0408	0x2000A4  	MOV	#10, W4
0x040A	0x200005  	MOV	#0, W5
;q4.c,41 :: 		short i = p, j = 0;
; i start address is: 2 (W1)
0x040C	0x78408C  	MOV.B	W12, W1
0x040E	0x200000  	MOV	#0, W0
0x0410	0x984750  	MOV.B	W0, [W14+5]
; i end address is: 2 (W1)
; factor end address is: 8 (W4)
0x0412	0xBE0104  	MOV.D	W4, W2
;q4.c,43 :: 		while (i--)
L_nFloatToStr0:
; i start address is: 12 (W6)
; i start address is: 2 (W1)
; factor start address is: 4 (W2)
0x0414	0x784001  	MOV.B	W1, W0
; i start address is: 12 (W6)
0x0416	0x50C361  	SUB.B	W1, #1, W6
; i end address is: 2 (W1)
; i end address is: 12 (W6)
0x0418	0xE24000  	CP0.B	W0
0x041A	0x320007  	BRA Z	L_nFloatToStr1
L__nFloatToStr28:
; i end address is: 12 (W6)
;q4.c,44 :: 		factor *= 10;
; i start address is: 12 (W6)
0x041C	0x2000A0  	MOV	#10, W0
0x041E	0x200001  	MOV	#0, W1
0x0420	0x07FFE2  	RCALL	__Multiply_32x32
; factor end address is: 4 (W2)
; factor start address is: 8 (W4)
0x0422	0xBE0200  	MOV.D	W0, W4
0x0424	0xBE0104  	MOV.D	W4, W2
; i end address is: 12 (W6)
; factor end address is: 8 (W4)
0x0426	0x784086  	MOV.B	W6, W1
0x0428	0x37FFF5  	BRA	L_nFloatToStr0
L_nFloatToStr1:
;q4.c,46 :: 		((char *)&f)[2].B7 = 0;
; factor start address is: 4 (W2)
0x042A	0x200140  	MOV	#lo_addr(W10), W0
0x042C	0xECA000  	INC2	W0
0x042E	0xA17410  	BCLR.B	[W0], #7
;q4.c,48 :: 		result = ((unsigned long)(f * factor) + 5) / 10;
0x0430	0xBE9F8C  	PUSH.D	W12
; factor end address is: 4 (W2)
0x0432	0xBE9F8A  	PUSH.D	W10
0x0434	0xBE0002  	MOV.D	W2, W0
0x0436	0x07FF7C  	RCALL	__Long2Float
0x0438	0xBE054F  	POP.D	W10
0x043A	0xBE9F8A  	PUSH.D	W10
0x043C	0xBE010A  	MOV.D	W10, W2
0x043E	0x07FE96  	RCALL	__Mul_FP
0x0440	0x07FE5F  	RCALL	__Float2Longword
0x0442	0x400065  	ADD	W0, #5, W0
0x0444	0x4880E0  	ADDC	W1, #0, W1
0x0446	0x2000A2  	MOV	#10, W2
0x0448	0x200003  	MOV	#0, W3
0x044A	0xEB0200  	CLR	W4
0x044C	0x07FF48  	RCALL	__Divide_32x32
0x044E	0xBE054F  	POP.D	W10
0x0450	0xBE064F  	POP.D	W12
0x0452	0x980700  	MOV	W0, [W14+0]
0x0454	0x980711  	MOV	W1, [W14+2]
;q4.c,55 :: 		} while (((result /= 10) > 0) || (p > 0));
L__nFloatToStr25:
L__nFloatToStr24:
;q4.c,52 :: 		txt[j++] = result % 10 + '0';
0x0456	0x470065  	ADD	W14, #5, W0
0x0458	0xFB0010  	SE	[W0], W0
0x045A	0x468000  	ADD	W13, W0, W0
0x045C	0x980740  	MOV	W0, [W14+8]
0x045E	0xBE9F8C  	PUSH.D	W12
0x0460	0xBE9F8A  	PUSH.D	W10
0x0462	0x2000A2  	MOV	#10, W2
0x0464	0x200003  	MOV	#0, W3
0x0466	0x90000E  	MOV	[W14+0], W0
0x0468	0x90009E  	MOV	[W14+2], W1
0x046A	0xEB0200  	CLR	W4
0x046C	0x07FF0C  	RCALL	__Modulus_32x32
0x046E	0xBE054F  	POP.D	W10
0x0470	0xBE064F  	POP.D	W12
0x0472	0x200302  	MOV	#48, W2
0x0474	0x200003  	MOV	#0, W3
0x0476	0x400102  	ADD	W0, W2, W2
0x0478	0x90004E  	MOV	[W14+8], W0
0x047A	0x784802  	MOV.B	W2, [W0]
0x047C	0x9040DE  	MOV.B	[W14+5], W1
0x047E	0x470065  	ADD	W14, #5, W0
0x0480	0x40C861  	ADD.B	W1, #1, [W0]
;q4.c,53 :: 		if (--p == 0)
0x0482	0x564061  	SUB.B	W12, #1, W0
0x0484	0x784600  	MOV.B	W0, W12
0x0486	0xE16460  	CP.B	W12, #0
0x0488	0x3A0008  	BRA NZ	L_nFloatToStr5
L__nFloatToStr29:
;q4.c,54 :: 		txt[j++] = '.';
0x048A	0x470065  	ADD	W14, #5, W0
0x048C	0xFB0010  	SE	[W0], W0
0x048E	0x468080  	ADD	W13, W0, W1
0x0490	0xB3C2E0  	MOV.B	#46, W0
0x0492	0x784880  	MOV.B	W0, [W1]
0x0494	0x9040DE  	MOV.B	[W14+5], W1
0x0496	0x470065  	ADD	W14, #5, W0
0x0498	0x40C861  	ADD.B	W1, #1, [W0]
L_nFloatToStr5:
;q4.c,55 :: 		} while (((result /= 10) > 0) || (p > 0));
0x049A	0xBE9F8C  	PUSH.D	W12
0x049C	0xBE9F8A  	PUSH.D	W10
0x049E	0x2000A2  	MOV	#10, W2
0x04A0	0x200003  	MOV	#0, W3
0x04A2	0x90000E  	MOV	[W14+0], W0
0x04A4	0x90009E  	MOV	[W14+2], W1
0x04A6	0xEB0200  	CLR	W4
0x04A8	0x07FF1A  	RCALL	__Divide_32x32
0x04AA	0xBE054F  	POP.D	W10
0x04AC	0xBE064F  	POP.D	W12
0x04AE	0x980700  	MOV	W0, [W14+0]
0x04B0	0x980711  	MOV	W1, [W14+2]
0x04B2	0xE10060  	CP	W0, #0
0x04B4	0xE18860  	CPB	W1, #0
0x04B6	0x3EFFCF  	BRA GTU	L__nFloatToStr25
L__nFloatToStr30:
0x04B8	0xE16460  	CP.B	W12, #0
0x04BA	0x3CFFCD  	BRA GT	L__nFloatToStr24
L__nFloatToStr31:
L__nFloatToStr23:
;q4.c,57 :: 		if (txt[j - 1] == '.')
0x04BC	0x470065  	ADD	W14, #5, W0
0x04BE	0xFB0010  	SE	[W0], W0
0x04C0	0xED2000  	DEC	W0
0x04C2	0x468000  	ADD	W13, W0, W0
0x04C4	0x784090  	MOV.B	[W0], W1
0x04C6	0xB3C2E0  	MOV.B	#46, W0
0x04C8	0xE10C00  	CP.B	W1, W0
0x04CA	0x3A0008  	BRA NZ	L_nFloatToStr8
L__nFloatToStr32:
;q4.c,58 :: 		txt[j++] = '0';
0x04CC	0x470065  	ADD	W14, #5, W0
0x04CE	0xFB0010  	SE	[W0], W0
0x04D0	0x468080  	ADD	W13, W0, W1
0x04D2	0xB3C300  	MOV.B	#48, W0
0x04D4	0x784880  	MOV.B	W0, [W1]
0x04D6	0x9040DE  	MOV.B	[W14+5], W1
0x04D8	0x470065  	ADD	W14, #5, W0
0x04DA	0x40C861  	ADD.B	W1, #1, [W0]
L_nFloatToStr8:
;q4.c,60 :: 		if (sign)
0x04DC	0x470064  	ADD	W14, #4, W0
0x04DE	0xE00410  	CP0.B	[W0]
0x04E0	0x320008  	BRA Z	L_nFloatToStr9
L__nFloatToStr33:
;q4.c,61 :: 		txt[j++] = '-';
0x04E2	0x470065  	ADD	W14, #5, W0
0x04E4	0xFB0010  	SE	[W0], W0
0x04E6	0x468080  	ADD	W13, W0, W1
0x04E8	0xB3C2D0  	MOV.B	#45, W0
0x04EA	0x784880  	MOV.B	W0, [W1]
0x04EC	0x9040DE  	MOV.B	[W14+5], W1
0x04EE	0x470065  	ADD	W14, #5, W0
0x04F0	0x40C861  	ADD.B	W1, #1, [W0]
L_nFloatToStr9:
;q4.c,63 :: 		txt[j] = '\0';
0x04F2	0x470065  	ADD	W14, #5, W0
0x04F4	0xFB0010  	SE	[W0], W0
0x04F6	0x468080  	ADD	W13, W0, W1
0x04F8	0xEF2000  	CLR	W0
0x04FA	0x784880  	MOV.B	W0, [W1]
;q4.c,65 :: 		for (i = 0, j--; i < j; i++, j--)
; i start address is: 6 (W3)
0x04FC	0xEF2006  	CLR	W3
0x04FE	0x9040DE  	MOV.B	[W14+5], W1
0x0500	0x470065  	ADD	W14, #5, W0
0x0502	0x50C861  	SUB.B	W1, #1, [W0]
0x0504	0x784103  	MOV.B	W3, W2
; i end address is: 6 (W3)
L_nFloatToStr10:
; i start address is: 4 (W2)
0x0506	0x470065  	ADD	W14, #5, W0
0x0508	0xE11410  	CP.B	W2, [W0]
0x050A	0x3D0011  	BRA GE	L_nFloatToStr11
L__nFloatToStr34:
;q4.c,66 :: 		p = txt[i], txt[i] = txt[j], txt[j] = p;
0x050C	0xFB0002  	SE	W2, W0
0x050E	0x468080  	ADD	W13, W0, W1
0x0510	0x784611  	MOV.B	[W1], W12
0x0512	0x470065  	ADD	W14, #5, W0
0x0514	0xFB0010  	SE	[W0], W0
0x0516	0x468000  	ADD	W13, W0, W0
0x0518	0x784890  	MOV.B	[W0], [W1]
0x051A	0x470065  	ADD	W14, #5, W0
0x051C	0xFB0010  	SE	[W0], W0
0x051E	0x468000  	ADD	W13, W0, W0
0x0520	0x78480C  	MOV.B	W12, [W0]
;q4.c,65 :: 		for (i = 0, j--; i < j; i++, j--)
; i start address is: 6 (W3)
0x0522	0x4141E1  	ADD.B	W2, #1, W3
; i end address is: 4 (W2)
0x0524	0x9040DE  	MOV.B	[W14+5], W1
0x0526	0x470065  	ADD	W14, #5, W0
0x0528	0x50C861  	SUB.B	W1, #1, [W0]
;q4.c,66 :: 		p = txt[i], txt[i] = txt[j], txt[j] = p;
0x052A	0x784103  	MOV.B	W3, W2
; i end address is: 6 (W3)
0x052C	0x37FFEC  	BRA	L_nFloatToStr10
L_nFloatToStr11:
;q4.c,67 :: 		}
L_end_nFloatToStr:
0x052E	0xFA8000  	ULNK
0x0530	0x060000  	RETURN
; end of _nFloatToStr
__Multiply_32x32:
0x03E6	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x03E8	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x03EA	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x03EC	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x03EE	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x03F0	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x03F2	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x03F4	0xFA8000  	ULNK
0x03F6	0x060000  	RETURN
; end of __Multiply_32x32
__Long2Float:
0x0330	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x0332	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0334	0x0000000403E2  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0338	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x033A	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x033C	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x033E	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x0340	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x0342	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x0344	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0346	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0348	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x034A	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x034C	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x034E	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x0350	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x0352	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x0354	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x0356	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0358	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x035A	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x035C	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x035E	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x0360	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x0362	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x0364	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x0366	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0368	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x036A	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x036C	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x036E	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x0370	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x0372	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x0374	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x0376	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0378	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x037A	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x037C	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x037E	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x0380	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x0382	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x0384	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x0386	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0388	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x038A	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x038C	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x038E	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x0390	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x0392	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x0394	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x0396	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x0398	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x039A	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x039C	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x039E	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x03A0	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x03A2	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x03A4	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x03A6	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x03A8	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x03AA	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x03AC	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x03AE	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x03B0	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x03B2	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x03B4	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x03B6	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x03B8	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x03BA	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x03BC	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x03BE	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x03C0	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x03C2	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x03C4	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x03C6	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x03C8	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x03CA	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x03CC	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x03CE	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x03D0	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x03D2	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x03D4	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x03D6	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x03D8	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x03DA	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x03DC	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x03DE	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x03E0	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x03E2	0xFA8000  	ULNK
0x03E4	0x060000  	RETURN
; end of __Long2Float
__Mul_FP:
0x016C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x016E	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x0170	0x000000040282  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x0174	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x0176	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x0178	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x017A	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x017C	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x017E	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x0180	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x0182	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x0184	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x0186	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x0188	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x018A	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x018C	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x018E	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x0190	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x0192	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x0194	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x0196	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x0198	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x019A	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x019C	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x019E	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x01A0	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x01A2	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x01A4	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x01A6	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x01A8	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x01AA	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x01AC	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x01AE	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x01B0	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x01B2	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x01B4	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x01B6	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x01B8	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x01BA	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x01BC	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x01BE	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x01C0	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x01C2	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x01C4	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x01C6	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x01C8	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x01CA	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x01CC	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x01CE	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x01D0	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x01D2	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x01D4	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x01D6	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x01D8	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x01DA	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x01DC	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x01DE	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x01E0	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x01E2	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x01E4	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x01E6	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x01E8	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x01EA	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x01EC	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x01EE	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x01F0	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x01F2	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x01F4	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x01F6	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x01F8	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x01FA	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x01FC	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x01FE	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0200	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x0202	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x0204	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x0206	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x0208	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x020A	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x020C	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x020E	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x0210	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x0212	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x0214	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x0216	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x0218	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x021A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x021C	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x021E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x0220	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x0222	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x0224	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x0226	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x0228	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x022A	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x022C	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x022E	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x0230	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x0232	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x0234	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x0236	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x0238	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x023A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x023C	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x023E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x0240	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x0242	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x0244	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x0246	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x0248	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x024A	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x024C	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x024E	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x0250	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x0252	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x0254	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x0256	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x0258	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x025A	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x025C	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x025E	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x0260	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x0262	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x0264	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x0266	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x0268	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x026A	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x026C	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x026E	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x0270	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x0272	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x0274	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x0276	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x0278	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x027A	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x027C	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x027E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x0280	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x0282	0xFA8000  	ULNK
0x0284	0x060000  	RETURN
; end of __Mul_FP
__Float2Longword:
0x0100	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,387 :: 		
;__Lib_MathDouble.c,389 :: 		
0x0102	0x070002  	RCALL	Float2Longword_fixunssfsi
;__Lib_MathDouble.c,390 :: 		
0x0104	0x000000040168  	GOTO	the_end__Float2Longword
;__Lib_MathDouble.c,393 :: 		
Float2Longword_fixunssfsi:
;__Lib_MathDouble.c,394 :: 		
0x0108	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,395 :: 		
0x010A	0x070019  	RCALL	Float2Longword_funpack
;__Lib_MathDouble.c,396 :: 		
0x010C	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,397 :: 		
0x010E	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,398 :: 		
0x0110	0xA3F803  	BTST.Z	W3, #15
;__Lib_MathDouble.c,399 :: 		
0x0112	0x3A0013  	BRA NZ	Float2Longword_returnzero
;__Lib_MathDouble.c,400 :: 		
0x0114	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,401 :: 		
0x0116	0x320010  	BRA Z	Float2Longword_exit
;__Lib_MathDouble.c,402 :: 		
0x0118	0x350009  	BRA LT	Float2Longword_shiftright
;__Lib_MathDouble.c,403 :: 		
0x011A	0xE12869  	CP	W5, #9
;__Lib_MathDouble.c,404 :: 		
0x011C	0x350002  	BRA LT	Float2Longword_shiftleft
;__Lib_MathDouble.c,405 :: 		
0x011E	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,406 :: 		
0x0120	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,407 :: 		
Float2Longword_shiftleft:
;__Lib_MathDouble.c,408 :: 		
0x0122	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,409 :: 		
0x0124	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,410 :: 		
0x0126	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,411 :: 		
0x0128	0x3AFFFC  	BRA NZ	Float2Longword_shiftleft
;__Lib_MathDouble.c,412 :: 		
0x012A	0x060000  	RETURN
;__Lib_MathDouble.c,413 :: 		
Float2Longword_shiftright:
;__Lib_MathDouble.c,414 :: 		
0x012C	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,415 :: 		
0x012E	0x350005  	BRA LT	Float2Longword_returnzero
;__Lib_MathDouble.c,416 :: 		
Float2Longword_shiftrightloop:
;__Lib_MathDouble.c,417 :: 		
0x0130	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,418 :: 		
0x0132	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,419 :: 		
0x0134	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,420 :: 		
0x0136	0x3AFFFC  	BRA NZ	Float2Longword_shiftrightloop
;__Lib_MathDouble.c,421 :: 		
Float2Longword_exit:
;__Lib_MathDouble.c,422 :: 		
0x0138	0x060000  	RETURN
;__Lib_MathDouble.c,423 :: 		
Float2Longword_returnzero:
;__Lib_MathDouble.c,424 :: 		
0x013A	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,425 :: 		
0x013C	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,426 :: 		
Float2Longword_funpack:
;__Lib_MathDouble.c,427 :: 		
0x013E	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,428 :: 		
0x0140	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,429 :: 		
0x0142	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,430 :: 		
0x0144	0x320008  	BRA Z	Float2Longword_zeroorsub
;__Lib_MathDouble.c,431 :: 		
0x0146	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,432 :: 		
0x0148	0x320002  	BRA Z	Float2Longword_nanorinf
;__Lib_MathDouble.c,433 :: 		
Float2Longword_finitereturn:
;__Lib_MathDouble.c,434 :: 		
0x014A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,435 :: 		
0x014C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,436 :: 		
Float2Longword_nanorinf:
;__Lib_MathDouble.c,437 :: 		
0x014E	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,438 :: 		
0x0150	0x320001  	BRA Z	Float2Longword_infinite
;__Lib_MathDouble.c,439 :: 		
0x0152	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,440 :: 		
Float2Longword_infinite:
;__Lib_MathDouble.c,441 :: 		
0x0154	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,442 :: 		
Float2Longword_zeroorsub:
;__Lib_MathDouble.c,443 :: 		
0x0156	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,444 :: 		
0x0158	0x3A0002  	BRA NZ	Float2Longword_subnormal
;__Lib_MathDouble.c,445 :: 		
0x015A	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,446 :: 		
Float2Longword_normalize:
;__Lib_MathDouble.c,447 :: 		
0x015C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,448 :: 		
Float2Longword_subnormal:
;__Lib_MathDouble.c,449 :: 		
0x015E	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,450 :: 		
0x0160	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,451 :: 		
0x0162	0x3BFFFC  	BRA NN	Float2Longword_normalize
;__Lib_MathDouble.c,452 :: 		
0x0164	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,453 :: 		
0x0166	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,455 :: 		
the_end__Float2Longword:
;__Lib_MathDouble.c,457 :: 		
L_end__Float2Longword:
0x0168	0xFA8000  	ULNK
0x016A	0x060000  	RETURN
; end of __Float2Longword
__Divide_32x32:
0x02DE	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x02E0	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x02E2	0x00000004032C  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x02E6	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x02E8	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x02EA	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x02EC	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x02EE	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x02F0	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x02F2	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x02F4	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x02F6	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x02F8	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x02FA	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x02FC	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x02FE	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x0300	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x0302	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x0304	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x0306	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x0308	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x030A	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x030C	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x030E	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x0310	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x0312	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x0314	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x0316	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x0318	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x031A	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x031C	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x031E	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0320	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x0322	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x0324	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x0326	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x0328	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x032A	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x032C	0xFA8000  	ULNK
0x032E	0x060000  	RETURN
; end of __Divide_32x32
__Modulus_32x32:
0x0286	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x0288	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x028A	0x0000000402DA  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x028E	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x0290	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x0292	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x0294	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0296	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x0298	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x029A	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x029C	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x029E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x02A0	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x02A2	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x02A4	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x02A6	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x02A8	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x02AA	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x02AC	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x02AE	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x02B0	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x02B2	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x02B4	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x02B6	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x02B8	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x02BA	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x02BC	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x02BE	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x02C0	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x02C2	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x02C4	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x02C6	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x02C8	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x02CA	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x02CC	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x02CE	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x02D0	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x02D2	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x02D4	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x02D6	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x02D8	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x02DA	0xFA8000  	ULNK
0x02DC	0x060000  	RETURN
; end of __Modulus_32x32
0x06BC	0x20800A  	MOV	#2048, W10
0x06BE	0x20000B  	MOV	#0, W11
0x06C0	0x09001B  	REPEAT	#27
0x06C2	0x781D0B  	MOV	W11, [W10++]
0x06C4	0x060000  	RETURN
0x06C6	0x208001  	MOV	#lo_addr(_pot), W1
0x06C8	0x286AA0  	MOV	#34474, W0
0x06CA	0x090008  	REPEAT	#8
0x06CC	0x7818B0  	MOV	[W0++], [W1++]
0x06CE	0x060000  	RETURN
;q4.c,0 :: ?ICS_pot [4]
0x06AA	0x0000 ;?ICS_pot+0
0x06AC	0x0000 ;?ICS_pot+2
; end of ?ICS_pot
;q4.c,0 :: ?ICS_ldr [4]
0x06AE	0x0000 ;?ICS_ldr+0
0x06B0	0x0000 ;?ICS_ldr+2
; end of ?ICS_ldr
;q4.c,0 :: ?ICS_canais [6]
0x06B2	0x0002 ;?ICS_canais+0
0x06B4	0x0005 ;?ICS_canais+2
0x06B6	0x0007 ;?ICS_canais+4
; end of ?ICS_canais
;q4.c,0 :: ?ICS_temp [4]
0x06B8	0x0000 ;?ICS_temp+0
0x06BA	0x0000 ;?ICS_temp+2
; end of ?ICS_temp
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [108]    __Float2Longword
0x016C     [282]    __Mul_FP
0x0286      [88]    __Modulus_32x32
0x02DE      [82]    __Divide_32x32
0x0330     [182]    __Long2Float
0x03E6      [18]    __Multiply_32x32
0x03F8     [314]    _nFloatToStr
0x0532     [222]    _converter
0x0610     [154]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x02A0       [2]    ADCON1
0x02C6       [2]    TRISBbits
0x010E       [2]    PR3
0x010A       [2]    TMR3
0x0086       [2]    IFS1
0x0084       [2]    IFS0
0x008C       [2]    IEC0bits
0x008E       [2]    IEC1bits
0x02D2       [1]    TRISDbits
0x0102       [2]    PR1
0x0100       [2]    TMR1
0x0104       [2]    T1CONbits
0x0104       [2]    T1CON
0x02A2       [2]    ADCON2bits
0x02AA       [2]    ADCSSL
0x0112       [2]    T3CON
0x02A2       [2]    ADCON2
0x02A4       [2]    ADCON3
0x02D8       [2]    TRISEbits
0x0084       [2]    IFS0bits
0x0280       [2]    ADCBUF0
0x0812       [2]    _j
0x02A0       [2]    ADCON1bits
0x0814       [2]    _ADC16Ptr
0x02A6       [2]    ADCHSbits
0x0816       [2]    _i
0x0818       [2]    _soma
0x081A       [8]    _txt_pot
0x0822       [8]    _txt_ldr
0x02A8       [2]    ADPCFGbits
0x02A8       [2]    ADPCFG
0x082A       [8]    _txt_temp
0x0832       [6]    _media
0x0800       [4]    _pot
0x0804       [4]    _ldr
0x0808       [6]    _canais
0x080E       [4]    _temp
0x0084       [2]    IFS0
0x0086       [2]    IFS1
0x0100       [2]    TMR1
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x010A       [2]    TMR3
0x010E       [2]    PR3
0x0112       [2]    T3CON
0x0280       [2]    ADCBUF0
0x02A0       [2]    ADCON1
0x02A2       [2]    ADCON2
0x02A4       [2]    ADCON3
0x02A8       [2]    ADPCFG
0x02AA       [2]    ADCSSL
0x0014       [4]    FARG_nFloatToStr_f
0x0018       [1]    FARG_nFloatToStr_p
0x001A       [2]    FARG_nFloatToStr_txt
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x06AA       [4]    ?ICS_pot
0x06AE       [4]    ?ICS_ldr
0x06B2       [6]    ?ICS_canais
0x06B8       [4]    ?ICS_temp
