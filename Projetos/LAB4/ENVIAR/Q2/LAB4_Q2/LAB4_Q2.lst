;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/03/2020 19:26:48
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0000000403B8  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x00037C  	892
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x00030E  	782
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000462  	1122
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x03B8	0x208DCF  	MOV	#2268, W15
0x03BA	0x20FFF0  	MOV	#4095, W0
0x03BC	0xB7A020  	MOV	WREG, SPLIM
0x03BE	0x200000  	MOV	#0, W0
0x03C0	0xB7A034  	MOV	WREG, PSVPAG
0x03C2	0x200040  	MOV	#4, W0
0x03C4	0xB72044  	IOR	CORCON
0x03C6	0x0000000204EA  	CALL	1258
0x03CA	0x0000000204F4  	CALL	1268
;LAB4_Q2.c,205 :: 		void main(){
;LAB4_Q2.c,206 :: 		ADPCFG = 0xFFFF;
0x03CE	0x781F8A  	PUSH	W10
0x03D0	0x2FFFF0  	MOV	#65535, W0
0x03D2	0xB7A2A8  	MOV	WREG, ADPCFG
;LAB4_Q2.c,207 :: 		TRISB = 0;
0x03D4	0xEF22C6  	CLR	TRISB
;LAB4_Q2.c,208 :: 		LATB = 0;
0x03D6	0xEF22CA  	CLR	LATB
;LAB4_Q2.c,209 :: 		PWMd = 0;
0x03D8	0xEF2180  	CLR	OC1RS
;LAB4_Q2.c,210 :: 		OC1CON = 0x0006;
0x03DA	0x200060  	MOV	#6, W0
0x03DC	0xB7A184  	MOV	WREG, OC1CON
;LAB4_Q2.c,211 :: 		IEC0bits.INT0IE = 1;
0x03DE	0xA8008C  	BSET.B	IEC0bits, #0
;LAB4_Q2.c,213 :: 		PWMe = 0;
0x03E0	0xEF218C  	CLR	OC3RS
;LAB4_Q2.c,214 :: 		OC3CON = 0x0006;
0x03E2	0x200060  	MOV	#6, W0
0x03E4	0xB7A190  	MOV	WREG, OC3CON
;LAB4_Q2.c,216 :: 		PR2 = periodo;
0x03E6	0x24E200  	MOV	#20000, W0
0x03E8	0xB7A10C  	MOV	WREG, PR2
;LAB4_Q2.c,217 :: 		T2CON = 0x8010;
0x03EA	0x280100  	MOV	#32784, W0
0x03EC	0xB7A110  	MOV	WREG, T2CON
;LAB4_Q2.c,219 :: 		IEC0bits.T1IE = 1;
0x03EE	0xA8608C  	BSET.B	IEC0bits, #3
;LAB4_Q2.c,220 :: 		PR1 = 0xFFFF;
0x03F0	0x2FFFF0  	MOV	#65535, W0
0x03F2	0xB7A102  	MOV	WREG, PR1
;LAB4_Q2.c,221 :: 		T1CON = 0x8030;
0x03F4	0x280300  	MOV	#32816, W0
0x03F6	0xB7A104  	MOV	WREG, T1CON
;LAB4_Q2.c,222 :: 		TMR1 = 0;
0x03F8	0xEF2100  	CLR	TMR1
;LAB4_Q2.c,224 :: 		IFS0 = 0;
0x03FA	0xEF2084  	CLR	IFS0
;LAB4_Q2.c,226 :: 		INIT_UART2(51);
0x03FC	0xB3C33A  	MOV.B	#51, W10
0x03FE	0x07FEEE  	RCALL	_INIT_UART2
;LAB4_Q2.c,227 :: 		send_char(0x030);
0x0400	0xB3C30A  	MOV.B	#48, W10
0x0402	0x07FE7E  	RCALL	_send_char
;LAB4_Q2.c,228 :: 		LATBbits.LATB1 = 0;
0x0404	0xA922CA  	BCLR.B	LATBbits, #1
;LAB4_Q2.c,230 :: 		while(1){
L_main39:
;LAB4_Q2.c,231 :: 		if(flag_criatividade == 0){
0x0406	0x8041E0  	MOV	_flag_criatividade, W0
0x0408	0xE10060  	CP	W0, #0
0x040A	0x3A000C  	BRA NZ	L_main41
L__main80:
;LAB4_Q2.c,232 :: 		Delay_ms(100);
0x040C	0x200098  	MOV	#9, W8
0x040E	0x223577  	MOV	#9047, W7
L_main42:
0x0410	0xED200E  	DEC	W7
0x0412	0x3AFFFE  	BRA NZ	L_main42
0x0414	0xED2010  	DEC	W8
0x0416	0x3AFFFC  	BRA NZ	L_main42
;LAB4_Q2.c,233 :: 		m = receive_char();
0x0418	0x07FEEC  	RCALL	_receive_char
0x041A	0x2084A1  	MOV	#lo_addr(_m), W1
0x041C	0x784880  	MOV.B	W0, [W1]
;LAB4_Q2.c,234 :: 		mudarPWM(m);
0x041E	0x784500  	MOV.B	W0, W10
0x0420	0x07FEEE  	RCALL	_mudarPWM
;LAB4_Q2.c,235 :: 		}else{
0x0422	0x37001C  	BRA	L_main44
L_main41:
;LAB4_Q2.c,236 :: 		j = 0;
0x0424	0xEF2000  	CLR	W0
0x0426	0x884240  	MOV	W0, _j
;LAB4_Q2.c,237 :: 		LATBbits.LATB1 = 1;
0x0428	0xA822CA  	BSET.B	LATBbits, #1
;LAB4_Q2.c,238 :: 		receive_str();
0x042A	0x07FEC8  	RCALL	_receive_str
;LAB4_Q2.c,239 :: 		while(criatividade[j] != '\0'){
L_main45:
0x042C	0x208781  	MOV	#lo_addr(_criatividade), W1
0x042E	0x208480  	MOV	#lo_addr(_j), W0
0x0430	0x408010  	ADD	W1, [W0], W0
0x0432	0x784010  	MOV.B	[W0], W0
0x0434	0xE10460  	CP.B	W0, #0
0x0436	0x320012  	BRA Z	L_main46
L__main81:
;LAB4_Q2.c,240 :: 		pepe = criatividade[j];
0x0438	0x208781  	MOV	#lo_addr(_criatividade), W1
0x043A	0x208480  	MOV	#lo_addr(_j), W0
0x043C	0x408010  	ADD	W1, [W0], W0
0x043E	0x784090  	MOV.B	[W0], W1
0x0440	0x2086B0  	MOV	#lo_addr(_pepe), W0
0x0442	0x784801  	MOV.B	W1, [W0]
;LAB4_Q2.c,241 :: 		mudarPWM(pepe);
0x0444	0x784501  	MOV.B	W1, W10
0x0446	0x07FEDB  	RCALL	_mudarPWM
;LAB4_Q2.c,242 :: 		j++;
0x0448	0x200011  	MOV	#1, W1
0x044A	0x208480  	MOV	#lo_addr(_j), W0
0x044C	0x408810  	ADD	W1, [W0], [W0]
;LAB4_Q2.c,243 :: 		Delay_ms(500);
0x044E	0x200298  	MOV	#41, W8
0x0450	0x2B0B77  	MOV	#45239, W7
L_main47:
0x0452	0xED200E  	DEC	W7
0x0454	0x3AFFFE  	BRA NZ	L_main47
0x0456	0xED2010  	DEC	W8
0x0458	0x3AFFFC  	BRA NZ	L_main47
;LAB4_Q2.c,244 :: 		}
0x045A	0x37FFE8  	BRA	L_main45
L_main46:
;LAB4_Q2.c,245 :: 		}
L_main44:
;LAB4_Q2.c,246 :: 		}
0x045C	0x37FFD4  	BRA	L_main39
;LAB4_Q2.c,247 :: 		}
L_end_main:
0x045E	0x78054F  	POP	W10
L__main_end_loop:
0x0460	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_INIT_UART2:
;LAB4_Q2.c,16 :: 		void INIT_UART2(unsigned char valor_baud){
;LAB4_Q2.c,17 :: 		U2BRG = valor_baud;  //Configurar UART: 8bits de dados, 1 it de parada, sem paridade
0x01DC	0xFB800A  	ZE	W10, W0
0x01DE	0xB7A21E  	MOV	WREG, U2BRG
;LAB4_Q2.c,18 :: 		U2MODE = 0x0000; //ver tabela para saber as outras configura??es
0x01E0	0xEF2216  	CLR	U2MODE
;LAB4_Q2.c,19 :: 		U2STA = 0x0000;
0x01E2	0xEF2218  	CLR	U2STA
;LAB4_Q2.c,20 :: 		IFS1bits.U2TXIF = 0;  //Zera a flag de interrupcao de Tx
0x01E4	0xA92087  	BCLR	IFS1bits, #9
;LAB4_Q2.c,21 :: 		IEC1bits.U2TXIE = 0;  //Desabilita a interrupcao de Tx
0x01E6	0xA9208F  	BCLR	IEC1bits, #9
;LAB4_Q2.c,22 :: 		IFS1bits.U2RXIF = 0;  //Zera a flag de de interrupcao de Rx
0x01E8	0xA90087  	BCLR	IFS1bits, #8
;LAB4_Q2.c,23 :: 		IEC1bits.U2RXIE = 0;  //Desabilita a flag de interrupcao de Rx
0x01EA	0xA9008F  	BCLR	IEC1bits, #8
;LAB4_Q2.c,24 :: 		U2MODEbits.UARTEN = 1; //Liga a UART
0x01EC	0xA8E217  	BSET	U2MODEbits, #15
;LAB4_Q2.c,25 :: 		U2STAbits.UTXEN = 1;   //Come?a a comunica??o
0x01EE	0xA84219  	BSET	U2STAbits, #10
;LAB4_Q2.c,26 :: 		}
L_end_INIT_UART2:
0x01F0	0x060000  	RETURN
; end of _INIT_UART2
_send_char:
;LAB4_Q2.c,34 :: 		void send_char(unsigned char c){
;LAB4_Q2.c,35 :: 		while( U2STAbits.UTXBF);
L_send_char0:
0x0100	0xAE2219  	BTSS	U2STAbits, #9
0x0102	0x370001  	BRA	L_send_char1
0x0104	0x37FFFD  	BRA	L_send_char0
L_send_char1:
;LAB4_Q2.c,36 :: 		U2TXREG = c; // escreve caractere
0x0106	0xFB800A  	ZE	W10, W0
0x0108	0xB7A21A  	MOV	WREG, U2TXREG
;LAB4_Q2.c,37 :: 		}
L_end_send_char:
0x010A	0x060000  	RETURN
; end of _send_char
_receive_char:
;LAB4_Q2.c,47 :: 		unsigned char receive_char(){
;LAB4_Q2.c,49 :: 		while(!U2STAbits.URXDA);
L_receive_char4:
0x01F2	0xAF0218  	BTSC	U2STAbits, #0
0x01F4	0x370001  	BRA	L_receive_char5
0x01F6	0x37FFFD  	BRA	L_receive_char4
L_receive_char5:
;LAB4_Q2.c,50 :: 		c = U2RXREG; // escreve caractere
; c start address is: 2 (W1)
0x01F8	0x8010E1  	MOV	U2RXREG, W1
;LAB4_Q2.c,51 :: 		return c;
0x01FA	0x784001  	MOV.B	W1, W0
; c end address is: 2 (W1)
;LAB4_Q2.c,52 :: 		}
L_end_receive_char:
0x01FC	0x060000  	RETURN
; end of _receive_char
_mudarPWM:
;LAB4_Q2.c,102 :: 		void mudarPWM(char aux){
;LAB4_Q2.c,104 :: 		switch(aux){
0x01FE	0x781F8A  	PUSH	W10
0x0200	0x781F8B  	PUSH	W11
0x0202	0x37006F  	BRA	L_mudarPWM18
;LAB4_Q2.c,105 :: 		case 'F':  //frente
L_mudarPWM20:
;LAB4_Q2.c,106 :: 		E1 = 1;
0x0204	0xA842CA  	BSET.B	LATBbits, #2
;LAB4_Q2.c,107 :: 		E2 = 0;
0x0206	0xA962CA  	BCLR.B	LATBbits, #3
;LAB4_Q2.c,108 :: 		D1 = 1;
0x0208	0xA882CA  	BSET.B	LATBbits, #4
;LAB4_Q2.c,109 :: 		D2 = 0;
0x020A	0xA9A2CA  	BCLR.B	LATBbits, #5
;LAB4_Q2.c,110 :: 		send_str("FRENTE \r\n");
0x020C	0x2080CA  	MOV	#lo_addr(?lstr1_LAB4_Q2), W10
0x020E	0x07FFA2  	RCALL	_send_str
;LAB4_Q2.c,111 :: 		break;
0x0210	0x37007B  	BRA	L_mudarPWM19
;LAB4_Q2.c,112 :: 		case 'E':  //esquerda
L_mudarPWM21:
;LAB4_Q2.c,113 :: 		E1 = 0;
0x0212	0xA942CA  	BCLR.B	LATBbits, #2
;LAB4_Q2.c,114 :: 		E2 = 1;
0x0214	0xA862CA  	BSET.B	LATBbits, #3
;LAB4_Q2.c,115 :: 		D1 = 1;
0x0216	0xA882CA  	BSET.B	LATBbits, #4
;LAB4_Q2.c,116 :: 		D2 = 0;
0x0218	0xA9A2CA  	BCLR.B	LATBbits, #5
;LAB4_Q2.c,117 :: 		send_str("ESQUERDA \r\n");
0x021A	0x20800A  	MOV	#lo_addr(?lstr2_LAB4_Q2), W10
0x021C	0x07FF9B  	RCALL	_send_str
;LAB4_Q2.c,118 :: 		break;
0x021E	0x370074  	BRA	L_mudarPWM19
;LAB4_Q2.c,119 :: 		case 'D':  //direita
L_mudarPWM22:
;LAB4_Q2.c,120 :: 		E1 = 1;
0x0220	0xA842CA  	BSET.B	LATBbits, #2
;LAB4_Q2.c,121 :: 		E2 = 0;
0x0222	0xA962CA  	BCLR.B	LATBbits, #3
;LAB4_Q2.c,122 :: 		D1 = 0;
0x0224	0xA982CA  	BCLR.B	LATBbits, #4
;LAB4_Q2.c,123 :: 		D2 = 1;
0x0226	0xA8A2CA  	BSET.B	LATBbits, #5
;LAB4_Q2.c,124 :: 		send_str("DIREITA \r\n");
0x0228	0x2082EA  	MOV	#lo_addr(?lstr3_LAB4_Q2), W10
0x022A	0x07FF94  	RCALL	_send_str
;LAB4_Q2.c,125 :: 		break;
0x022C	0x37006D  	BRA	L_mudarPWM19
;LAB4_Q2.c,126 :: 		case 'A':  //atras
L_mudarPWM23:
;LAB4_Q2.c,127 :: 		D1 = 0;
0x022E	0xA982CA  	BCLR.B	LATBbits, #4
;LAB4_Q2.c,128 :: 		D2 = 1;
0x0230	0xA8A2CA  	BSET.B	LATBbits, #5
;LAB4_Q2.c,129 :: 		E1 = 0;
0x0232	0xA942CA  	BCLR.B	LATBbits, #2
;LAB4_Q2.c,130 :: 		E2 = 1;
0x0234	0xA862CA  	BSET.B	LATBbits, #3
;LAB4_Q2.c,131 :: 		send_str("ATRAS \r\n");
0x0236	0x2081DA  	MOV	#lo_addr(?lstr4_LAB4_Q2), W10
0x0238	0x07FF8D  	RCALL	_send_str
;LAB4_Q2.c,132 :: 		break;
0x023A	0x370066  	BRA	L_mudarPWM19
;LAB4_Q2.c,133 :: 		case 'P':  //acelera
L_mudarPWM24:
;LAB4_Q2.c,135 :: 		duty = duty + 10;
0x023C	0x2000A1  	MOV	#10, W1
0x023E	0x208760  	MOV	#lo_addr(_duty), W0
0x0240	0x408810  	ADD	W1, [W0], [W0]
;LAB4_Q2.c,136 :: 		aux3 = PWMd + aux2;
0x0242	0x800C01  	MOV	OC1RS, W1
0x0244	0x208160  	MOV	#lo_addr(_aux2), W0
0x0246	0x408090  	ADD	W1, [W0], W1
0x0248	0x884361  	MOV	W1, _aux3
;LAB4_Q2.c,137 :: 		if (aux3 <= periodo){
0x024A	0x24E200  	MOV	#20000, W0
0x024C	0xE10800  	CP	W1, W0
0x024E	0x3C0004  	BRA GT	L_mudarPWM25
L__mudarPWM64:
;LAB4_Q2.c,138 :: 		PWMd += aux2;
0x0250	0x8040B1  	MOV	_aux2, W1
0x0252	0x201800  	MOV	#lo_addr(OC1RS), W0
0x0254	0x408810  	ADD	W1, [W0], [W0]
;LAB4_Q2.c,139 :: 		}else{
0x0256	0x370004  	BRA	L_mudarPWM26
L_mudarPWM25:
;LAB4_Q2.c,140 :: 		PWMd = periodo;
0x0258	0x24E200  	MOV	#20000, W0
0x025A	0xB7A180  	MOV	WREG, OC1RS
;LAB4_Q2.c,141 :: 		duty = 100;
0x025C	0x200640  	MOV	#100, W0
0x025E	0x8843B0  	MOV	W0, _duty
;LAB4_Q2.c,142 :: 		}
L_mudarPWM26:
;LAB4_Q2.c,143 :: 		aux3 = PWMe + aux2;
0x0260	0x800C61  	MOV	OC3RS, W1
0x0262	0x208160  	MOV	#lo_addr(_aux2), W0
0x0264	0x408090  	ADD	W1, [W0], W1
0x0266	0x884361  	MOV	W1, _aux3
;LAB4_Q2.c,144 :: 		if (aux3 <= periodo){
0x0268	0x24E200  	MOV	#20000, W0
0x026A	0xE10800  	CP	W1, W0
0x026C	0x3C0004  	BRA GT	L_mudarPWM27
L__mudarPWM65:
;LAB4_Q2.c,145 :: 		PWMe += aux2;
0x026E	0x8040B1  	MOV	_aux2, W1
0x0270	0x2018C0  	MOV	#lo_addr(OC3RS), W0
0x0272	0x408810  	ADD	W1, [W0], [W0]
;LAB4_Q2.c,146 :: 		}else{
0x0274	0x370004  	BRA	L_mudarPWM28
L_mudarPWM27:
;LAB4_Q2.c,147 :: 		PWMe = periodo;
0x0276	0x24E200  	MOV	#20000, W0
0x0278	0xB7A18C  	MOV	WREG, OC3RS
;LAB4_Q2.c,148 :: 		duty = 100;
0x027A	0x200640  	MOV	#100, W0
0x027C	0x8843B0  	MOV	W0, _duty
;LAB4_Q2.c,149 :: 		}
L_mudarPWM28:
;LAB4_Q2.c,150 :: 		send_str("DUTY");
0x027E	0x20818A  	MOV	#lo_addr(?lstr5_LAB4_Q2), W10
0x0280	0x07FF69  	RCALL	_send_str
;LAB4_Q2.c,151 :: 		IntToStr(duty,txt);
0x0282	0x2086EB  	MOV	#lo_addr(_txt), W11
0x0284	0x8043BA  	MOV	_duty, W10
0x0286	0x07FF72  	RCALL	_IntToStr
;LAB4_Q2.c,152 :: 		send_str(txt);
0x0288	0x2086EA  	MOV	#lo_addr(_txt), W10
0x028A	0x07FF64  	RCALL	_send_str
;LAB4_Q2.c,153 :: 		send_str("\r\n");
0x028C	0x2082BA  	MOV	#lo_addr(?lstr6_LAB4_Q2), W10
0x028E	0x07FF62  	RCALL	_send_str
;LAB4_Q2.c,154 :: 		break;
0x0290	0x37003B  	BRA	L_mudarPWM19
;LAB4_Q2.c,155 :: 		case 'L':  //desacelera
L_mudarPWM29:
;LAB4_Q2.c,156 :: 		duty = duty - 10;
0x0292	0x2000A1  	MOV	#10, W1
0x0294	0x208760  	MOV	#lo_addr(_duty), W0
0x0296	0x108810  	SUBR	W1, [W0], [W0]
;LAB4_Q2.c,157 :: 		aux3 = PWMd - aux2;
0x0298	0x800C01  	MOV	OC1RS, W1
0x029A	0x208160  	MOV	#lo_addr(_aux2), W0
0x029C	0x508010  	SUB	W1, [W0], W0
0x029E	0x884360  	MOV	W0, _aux3
;LAB4_Q2.c,158 :: 		if(aux3 >= 0){
0x02A0	0xE10060  	CP	W0, #0
0x02A2	0x350004  	BRA LT	L_mudarPWM30
L__mudarPWM66:
;LAB4_Q2.c,159 :: 		PWMd -= aux2;
0x02A4	0x8040B1  	MOV	_aux2, W1
0x02A6	0x201800  	MOV	#lo_addr(OC1RS), W0
0x02A8	0x108810  	SUBR	W1, [W0], [W0]
;LAB4_Q2.c,160 :: 		}else{
0x02AA	0x370003  	BRA	L_mudarPWM31
L_mudarPWM30:
;LAB4_Q2.c,161 :: 		PWMd = 0;
0x02AC	0xEF2180  	CLR	OC1RS
;LAB4_Q2.c,162 :: 		duty = 0;
0x02AE	0xEF2000  	CLR	W0
0x02B0	0x8843B0  	MOV	W0, _duty
;LAB4_Q2.c,163 :: 		}
L_mudarPWM31:
;LAB4_Q2.c,165 :: 		aux3 = PWMe - aux2;
0x02B2	0x800C61  	MOV	OC3RS, W1
0x02B4	0x208160  	MOV	#lo_addr(_aux2), W0
0x02B6	0x508010  	SUB	W1, [W0], W0
0x02B8	0x884360  	MOV	W0, _aux3
;LAB4_Q2.c,166 :: 		if(aux3 >= 0){
0x02BA	0xE10060  	CP	W0, #0
0x02BC	0x350004  	BRA LT	L_mudarPWM32
L__mudarPWM67:
;LAB4_Q2.c,167 :: 		PWMe -= aux2;
0x02BE	0x8040B1  	MOV	_aux2, W1
0x02C0	0x2018C0  	MOV	#lo_addr(OC3RS), W0
0x02C2	0x108810  	SUBR	W1, [W0], [W0]
;LAB4_Q2.c,168 :: 		}else{
0x02C4	0x370003  	BRA	L_mudarPWM33
L_mudarPWM32:
;LAB4_Q2.c,169 :: 		PWMe = 0;
0x02C6	0xEF218C  	CLR	OC3RS
;LAB4_Q2.c,170 :: 		duty = 0;
0x02C8	0xEF2000  	CLR	W0
0x02CA	0x8843B0  	MOV	W0, _duty
;LAB4_Q2.c,171 :: 		}
L_mudarPWM33:
;LAB4_Q2.c,172 :: 		send_str("DUTY");
0x02CC	0x20826A  	MOV	#lo_addr(?lstr7_LAB4_Q2), W10
0x02CE	0x07FF42  	RCALL	_send_str
;LAB4_Q2.c,173 :: 		IntToStr(duty,txt);
0x02D0	0x2086EB  	MOV	#lo_addr(_txt), W11
0x02D2	0x8043BA  	MOV	_duty, W10
0x02D4	0x07FF4B  	RCALL	_IntToStr
;LAB4_Q2.c,174 :: 		send_str(txt);
0x02D6	0x2086EA  	MOV	#lo_addr(_txt), W10
0x02D8	0x07FF3D  	RCALL	_send_str
;LAB4_Q2.c,175 :: 		send_str("\r\n");
0x02DA	0x20839A  	MOV	#lo_addr(?lstr8_LAB4_Q2), W10
0x02DC	0x07FF3B  	RCALL	_send_str
;LAB4_Q2.c,176 :: 		break;
0x02DE	0x370014  	BRA	L_mudarPWM19
;LAB4_Q2.c,177 :: 		default:
L_mudarPWM34:
;LAB4_Q2.c,178 :: 		break;
0x02E0	0x370013  	BRA	L_mudarPWM19
;LAB4_Q2.c,179 :: 		}
L_mudarPWM18:
0x02E2	0xB3C460  	MOV.B	#70, W0
0x02E4	0xE15400  	CP.B	W10, W0
0x02E6	0x32FF8E  	BRA Z	L_mudarPWM20
L__mudarPWM68:
0x02E8	0xB3C450  	MOV.B	#69, W0
0x02EA	0xE15400  	CP.B	W10, W0
0x02EC	0x32FF92  	BRA Z	L_mudarPWM21
L__mudarPWM69:
0x02EE	0xB3C440  	MOV.B	#68, W0
0x02F0	0xE15400  	CP.B	W10, W0
0x02F2	0x32FF96  	BRA Z	L_mudarPWM22
L__mudarPWM70:
0x02F4	0xB3C410  	MOV.B	#65, W0
0x02F6	0xE15400  	CP.B	W10, W0
0x02F8	0x32FF9A  	BRA Z	L_mudarPWM23
L__mudarPWM71:
0x02FA	0xB3C500  	MOV.B	#80, W0
0x02FC	0xE15400  	CP.B	W10, W0
0x02FE	0x32FF9E  	BRA Z	L_mudarPWM24
L__mudarPWM72:
0x0300	0xB3C4C0  	MOV.B	#76, W0
0x0302	0xE15400  	CP.B	W10, W0
0x0304	0x32FFC6  	BRA Z	L_mudarPWM29
L__mudarPWM73:
0x0306	0x37FFEC  	BRA	L_mudarPWM34
L_mudarPWM19:
;LAB4_Q2.c,180 :: 		}
L_end_mudarPWM:
0x0308	0x7805CF  	POP	W11
0x030A	0x78054F  	POP	W10
0x030C	0x060000  	RETURN
; end of _mudarPWM
_send_str:
;LAB4_Q2.c,40 :: 		void send_str(unsigned char* str){
;LAB4_Q2.c,41 :: 		unsigned int i = 0;
; i start address is: 2 (W1)
0x0154	0xEF2002  	CLR	W1
; i end address is: 2 (W1)
;LAB4_Q2.c,42 :: 		while(str[i])
L_send_str2:
; i start address is: 2 (W1)
0x0156	0x450001  	ADD	W10, W1, W0
0x0158	0xE00410  	CP0.B	[W0]
0x015A	0x320007  	BRA Z	L_send_str3
L__send_str55:
;LAB4_Q2.c,43 :: 		send_char(str[i++]);
0x015C	0x450001  	ADD	W10, W1, W0
0x015E	0x781F8A  	PUSH	W10
0x0160	0x784510  	MOV.B	[W0], W10
0x0162	0x07FFCE  	RCALL	_send_char
0x0164	0x78054F  	POP	W10
0x0166	0xEC2002  	INC	W1
; i end address is: 2 (W1)
0x0168	0x37FFF6  	BRA	L_send_str2
L_send_str3:
;LAB4_Q2.c,44 :: 		}
L_end_send_str:
0x016A	0x060000  	RETURN
; end of _send_str
_IntToStr:
0x016C	0xFA0000  	LNK	#0
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x016E	0x781F8A  	PUSH	W10
; negative start address is: 8 (W4)
0x0170	0xEF2008  	CLR	W4
;__Lib_Conversions.c,202 :: 		
; inword start address is: 0 (W0)
0x0172	0x78000A  	MOV	W10, W0
;__Lib_Conversions.c,203 :: 		
0x0174	0xE15060  	CP	W10, #0
0x0176	0x3D0003  	BRA GE	L__IntToStr113
L__IntToStr156:
; inword end address is: 0 (W0)
;__Lib_Conversions.c,204 :: 		
0x0178	0x200014  	MOV	#1, W4
;__Lib_Conversions.c,205 :: 		
; inword start address is: 0 (W0)
0x017A	0x150060  	SUBR	W10, #0, W0
; inword end address is: 0 (W0)
; negative end address is: 8 (W4)
;__Lib_Conversions.c,206 :: 		
0x017C	0x370000  	BRA	L_IntToStr37
L__IntToStr113:
;__Lib_Conversions.c,203 :: 		
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
; inword start address is: 0 (W0)
; negative start address is: 8 (W4)
0x017E	0x780500  	MOV	W0, W10
; inword end address is: 0 (W0)
0x0180	0x07FFC5  	RCALL	_WordToStr
;__Lib_Conversions.c,209 :: 		
; i start address is: 6 (W3)
0x0182	0x200063  	MOV	#6, W3
; negative end address is: 8 (W4)
; i end address is: 6 (W3)
0x0184	0x780104  	MOV	W4, W2
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x0186	0xE11860  	CP	W3, #0
0x0188	0x360006  	BRA LEU	L_IntToStr39
L__IntToStr157:
;__Lib_Conversions.c,211 :: 		
0x018A	0x458083  	ADD	W11, W3, W1
0x018C	0x518061  	SUB	W3, #1, W0
0x018E	0x458000  	ADD	W11, W0, W0
0x0190	0x784890  	MOV.B	[W0], [W1]
;__Lib_Conversions.c,212 :: 		
0x0192	0xED2006  	DEC	W3
;__Lib_Conversions.c,213 :: 		
; i end address is: 6 (W3)
0x0194	0x37FFF8  	BRA	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x0196	0xB3C200  	MOV.B	#32, W0
0x0198	0x784D80  	MOV.B	W0, [W11]
;__Lib_Conversions.c,215 :: 		
0x019A	0xE20004  	CP0	W2
0x019C	0x32000C  	BRA Z	L_IntToStr40
L__IntToStr158:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,216 :: 		
; i start address is: 4 (W2)
0x019E	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
; i start address is: 4 (W2)
0x01A0	0x458002  	ADD	W11, W2, W0
0x01A2	0x784090  	MOV.B	[W0], W1
0x01A4	0xB3C200  	MOV.B	#32, W0
0x01A6	0xE10C00  	CP.B	W1, W0
0x01A8	0x3A0002  	BRA NZ	L_IntToStr42
L__IntToStr159:
; i start address is: 4 (W2)
0x01AA	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x01AC	0x37FFF9  	BRA	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x01AE	0x510061  	SUB	W2, #1, W0
; i end address is: 4 (W2)
;__Lib_Conversions.c,219 :: 		
0x01B0	0x458080  	ADD	W11, W0, W1
0x01B2	0xB3C2D0  	MOV.B	#45, W0
0x01B4	0x784880  	MOV.B	W0, [W1]
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x01B6	0x78054F  	POP	W10
0x01B8	0xFA8000  	ULNK
0x01BA	0x060000  	RETURN
; end of _IntToStr
_WordToStr:
0x010C	0xFA0002  	LNK	#2
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
; len start address is: 4 (W2)
0x010E	0xEF2004  	CLR	W2
; len end address is: 4 (W2)
L_WordToStr11:
; len start address is: 4 (W2)
0x0110	0xE11465  	CP.B	W2, #5
0x0112	0x310006  	BRA GEU	L_WordToStr12
L__WordToStr139:
;__Lib_Conversions.c,104 :: 		
0x0114	0xFB8002  	ZE	W2, W0
0x0116	0x458080  	ADD	W11, W0, W1
0x0118	0xB3C200  	MOV.B	#32, W0
0x011A	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,103 :: 		
0x011C	0xEC6004  	INC.B	W2
;__Lib_Conversions.c,104 :: 		
0x011E	0x37FFF8  	BRA	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x0120	0xFB8002  	ZE	W2, W0
0x0122	0x458080  	ADD	W11, W0, W1
0x0124	0xEF2000  	CLR	W0
0x0126	0x784880  	MOV.B	W0, [W1]
; len start address is: 6 (W3)
0x0128	0x5141E1  	SUB.B	W2, #1, W3
; len end address is: 4 (W2)
; len end address is: 6 (W3)
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
; len start address is: 6 (W3)
0x012A	0xFB8003  	ZE	W3, W0
0x012C	0x458000  	ADD	W11, W0, W0
0x012E	0x980700  	MOV	W0, [W14+0]
0x0130	0x2000A2  	MOV	#10, W2
0x0132	0x090011  	REPEAT	#17
0x0134	0xD88502  	DIV.U	W10, W2
0x0136	0x200300  	MOV	#48, W0
0x0138	0x408080  	ADD	W1, W0, W1
0x013A	0x90000E  	MOV	[W14+0], W0
0x013C	0x784801  	MOV.B	W1, [W0]
;__Lib_Conversions.c,109 :: 		
0x013E	0x2000A2  	MOV	#10, W2
0x0140	0x090011  	REPEAT	#17
0x0142	0xD88502  	DIV.U	W10, W2
0x0144	0x780500  	MOV	W0, W10
;__Lib_Conversions.c,110 :: 		
0x0146	0xE10060  	CP	W0, #0
0x0148	0x3A0001  	BRA NZ	L_WordToStr16
L__WordToStr140:
; len end address is: 6 (W3)
;__Lib_Conversions.c,111 :: 		
0x014A	0x370002  	BRA	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
; len start address is: 6 (W3)
0x014C	0xED6006  	DEC.B	W3
;__Lib_Conversions.c,113 :: 		
; len end address is: 6 (W3)
0x014E	0x37FFED  	BRA	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x0150	0xFA8000  	ULNK
0x0152	0x060000  	RETURN
; end of _WordToStr
_receive_str:
;LAB4_Q2.c,56 :: 		void receive_str(){
;LAB4_Q2.c,57 :: 		int i = 0;
; i start address is: 6 (W3)
; i start address is: 6 (W3)
0x01BC	0xEF2006  	CLR	W3
; i end address is: 6 (W3)
;LAB4_Q2.c,59 :: 		do{
0x01BE	0x370000  	BRA	L_receive_str6
L__receive_str49:
;LAB4_Q2.c,63 :: 		}while(c != 0x0A);
;LAB4_Q2.c,59 :: 		do{
L_receive_str6:
;LAB4_Q2.c,60 :: 		c = receive_char();
; i start address is: 6 (W3)
0x01C0	0x070018  	RCALL	_receive_char
; c start address is: 4 (W2)
0x01C2	0x784100  	MOV.B	W0, W2
;LAB4_Q2.c,61 :: 		criatividade[i] = c;
0x01C4	0x208781  	MOV	#lo_addr(_criatividade), W1
0x01C6	0x408083  	ADD	W1, W3, W1
0x01C8	0x784880  	MOV.B	W0, [W1]
;LAB4_Q2.c,62 :: 		i++;
0x01CA	0xEC2006  	INC	W3
; i end address is: 6 (W3)
;LAB4_Q2.c,63 :: 		}while(c != 0x0A);
0x01CC	0xE1146A  	CP.B	W2, #10
0x01CE	0x3AFFF8  	BRA NZ	L__receive_str49
L__receive_str58:
; c end address is: 4 (W2)
; i end address is: 6 (W3)
;LAB4_Q2.c,64 :: 		criatividade[i-1] = '\0';
; i start address is: 6 (W3)
0x01D0	0x5180E1  	SUB	W3, #1, W1
; i end address is: 6 (W3)
0x01D2	0x208780  	MOV	#lo_addr(_criatividade), W0
0x01D4	0x400081  	ADD	W0, W1, W1
0x01D6	0xEF2000  	CLR	W0
0x01D8	0x784880  	MOV.B	W0, [W1]
;LAB4_Q2.c,65 :: 		}
L_end_receive_str:
0x01DA	0x060000  	RETURN
; end of _receive_str
0x04EA	0x20800A  	MOV	#2048, W10
0x04EC	0x20000B  	MOV	#0, W11
0x04EE	0x09006D  	REPEAT	#109
0x04F0	0x781D0B  	MOV	W11, [W10++]
0x04F2	0x060000  	RETURN
0x04F4	0x208001  	MOV	#lo_addr(?lstr2_LAB4_Q2), W1
0x04F6	0x2847E0  	MOV	#33918, W0
0x04F8	0x090034  	REPEAT	#52
0x04FA	0x7818B0  	MOV	[W0++], [W1++]
0x04FC	0x7858B0  	MOV.B	[W0++], [W1++]
0x04FE	0x060000  	RETURN
_Tx_serial2:
0x0462	0xF80034  	PUSH	PSVPAG
0x0464	0xF80036  	PUSH	RCOUNT
0x0466	0x781F80  	PUSH	W0
0x0468	0x200020  	MOV	#2, W0
0x046A	0x09000C  	REPEAT	#12
0x046C	0x781FB0  	PUSH	[W0++]
;LAB4_Q2.c,29 :: 		void Tx_serial2() iv IVT_ADDR_U2TXINTERRUPT{
;LAB4_Q2.c,30 :: 		IFS1bits.U2TXIF = 0;
0x046E	0xA92087  	BCLR	IFS1bits, #9
;LAB4_Q2.c,31 :: 		}
L_end_Tx_serial2:
0x0470	0x2001A0  	MOV	#26, W0
0x0472	0x09000C  	REPEAT	#12
0x0474	0x78104F  	POP	[W0--]
0x0476	0x78004F  	POP	W0
0x0478	0xF90036  	POP	RCOUNT
0x047A	0xF90034  	POP	PSVPAG
0x047C	0x064000  	RETFIE
; end of _Tx_serial2
_msg:
0x030E	0xF80034  	PUSH	PSVPAG
0x0310	0xF80036  	PUSH	RCOUNT
0x0312	0x781F80  	PUSH	W0
0x0314	0x200020  	MOV	#2, W0
0x0316	0x09000C  	REPEAT	#12
0x0318	0x781FB0  	PUSH	[W0++]
;LAB4_Q2.c,185 :: 		void msg() iv IVT_ADDR_T1INTERRUPT ics ICS_AUTO {
;LAB4_Q2.c,187 :: 		if (m == 'F')
0x031A	0x781F8A  	PUSH	W10
0x031C	0x781F8B  	PUSH	W11
0x031E	0x2084A0  	MOV	#lo_addr(_m), W0
0x0320	0x784090  	MOV.B	[W0], W1
0x0322	0xB3C460  	MOV.B	#70, W0
0x0324	0xE10C00  	CP.B	W1, W0
0x0326	0x3A0002  	BRA NZ	L_msg35
L__msg75:
;LAB4_Q2.c,188 :: 		send_str("FRENTE ");
0x0328	0x20859A  	MOV	#lo_addr(?lstr9_LAB4_Q2), W10
0x032A	0x07FF14  	RCALL	_send_str
L_msg35:
;LAB4_Q2.c,189 :: 		if (m == 'A')
0x032C	0x2084A0  	MOV	#lo_addr(_m), W0
0x032E	0x784090  	MOV.B	[W0], W1
0x0330	0xB3C410  	MOV.B	#65, W0
0x0332	0xE10C00  	CP.B	W1, W0
0x0334	0x3A0002  	BRA NZ	L_msg36
L__msg76:
;LAB4_Q2.c,190 :: 		send_str("ATRAS ");
0x0336	0x20861A  	MOV	#lo_addr(?lstr10_LAB4_Q2), W10
0x0338	0x07FF0D  	RCALL	_send_str
L_msg36:
;LAB4_Q2.c,191 :: 		if (m == 'D')
0x033A	0x2084A0  	MOV	#lo_addr(_m), W0
0x033C	0x784090  	MOV.B	[W0], W1
0x033E	0xB3C440  	MOV.B	#68, W0
0x0340	0xE10C00  	CP.B	W1, W0
0x0342	0x3A0002  	BRA NZ	L_msg37
L__msg77:
;LAB4_Q2.c,192 :: 		send_str("DIREITA ");
0x0344	0x2084BA  	MOV	#lo_addr(?lstr11_LAB4_Q2), W10
0x0346	0x07FF06  	RCALL	_send_str
L_msg37:
;LAB4_Q2.c,193 :: 		if (m == 'E')
0x0348	0x2084A0  	MOV	#lo_addr(_m), W0
0x034A	0x784090  	MOV.B	[W0], W1
0x034C	0xB3C450  	MOV.B	#69, W0
0x034E	0xE10C00  	CP.B	W1, W0
0x0350	0x3A0002  	BRA NZ	L_msg38
L__msg78:
;LAB4_Q2.c,194 :: 		send_str("ESQUERDA ");
0x0352	0x2083EA  	MOV	#lo_addr(?lstr12_LAB4_Q2), W10
0x0354	0x07FEFF  	RCALL	_send_str
L_msg38:
;LAB4_Q2.c,195 :: 		send_str("DUTY");
0x0356	0x20854A  	MOV	#lo_addr(?lstr13_LAB4_Q2), W10
0x0358	0x07FEFD  	RCALL	_send_str
;LAB4_Q2.c,196 :: 		IntToStr(duty,txt);
0x035A	0x2086EB  	MOV	#lo_addr(_txt), W11
0x035C	0x8043BA  	MOV	_duty, W10
0x035E	0x07FF06  	RCALL	_IntToStr
;LAB4_Q2.c,197 :: 		send_str(txt);
0x0360	0x2086EA  	MOV	#lo_addr(_txt), W10
0x0362	0x07FEF8  	RCALL	_send_str
;LAB4_Q2.c,198 :: 		send_str("\r\n");
0x0364	0x20868A  	MOV	#lo_addr(?lstr14_LAB4_Q2), W10
0x0366	0x07FEF6  	RCALL	_send_str
;LAB4_Q2.c,199 :: 		IFS0bits.T1IF = 0;
0x0368	0xA96084  	BCLR.B	IFS0bits, #3
;LAB4_Q2.c,200 :: 		}
L_end_msg:
0x036A	0x7805CF  	POP	W11
0x036C	0x78054F  	POP	W10
0x036E	0x2001A0  	MOV	#26, W0
0x0370	0x09000C  	REPEAT	#12
0x0372	0x78104F  	POP	[W0--]
0x0374	0x78004F  	POP	W0
0x0376	0xF90036  	POP	RCOUNT
0x0378	0xF90034  	POP	PSVPAG
0x037A	0x064000  	RETFIE
; end of _msg
_botao:
0x037C	0xF80034  	PUSH	PSVPAG
0x037E	0xF80036  	PUSH	RCOUNT
0x0380	0x781F80  	PUSH	W0
0x0382	0x200020  	MOV	#2, W0
0x0384	0x09000C  	REPEAT	#12
0x0386	0x781FB0  	PUSH	[W0++]
;LAB4_Q2.c,84 :: 		void botao() iv IVT_ADDR_INT0INTERRUPT ics ICS_AUTO {
;LAB4_Q2.c,85 :: 		Delay_Ms(50);
0x0388	0x200058  	MOV	#5, W8
0x038A	0x211AB7  	MOV	#4523, W7
L_botao14:
0x038C	0xED200E  	DEC	W7
0x038E	0x3AFFFE  	BRA NZ	L_botao14
0x0390	0xED2010  	DEC	W8
0x0392	0x3AFFFC  	BRA NZ	L_botao14
;LAB4_Q2.c,86 :: 		if (flag_criatividade == 0){
0x0394	0x8041E0  	MOV	_flag_criatividade, W0
0x0396	0xE10060  	CP	W0, #0
0x0398	0x3A0004  	BRA NZ	L_botao16
L__botao62:
;LAB4_Q2.c,87 :: 		flag_criatividade = 1;
0x039A	0x200010  	MOV	#1, W0
0x039C	0x8841E0  	MOV	W0, _flag_criatividade
;LAB4_Q2.c,88 :: 		LATBbits.LATB0 = 1;
0x039E	0xA802CA  	BSET.B	LATBbits, #0
;LAB4_Q2.c,89 :: 		}else{
0x03A0	0x370003  	BRA	L_botao17
L_botao16:
;LAB4_Q2.c,90 :: 		flag_criatividade = 0;
0x03A2	0xEF2000  	CLR	W0
0x03A4	0x8841E0  	MOV	W0, _flag_criatividade
;LAB4_Q2.c,91 :: 		LATBbits.LATB0 = 0;
0x03A6	0xA902CA  	BCLR.B	LATBbits, #0
;LAB4_Q2.c,92 :: 		}
L_botao17:
;LAB4_Q2.c,93 :: 		IFS0bits.INT0IF = 0;
0x03A8	0xA90084  	BCLR.B	IFS0bits, #0
;LAB4_Q2.c,94 :: 		}
L_end_botao:
0x03AA	0x2001A0  	MOV	#26, W0
0x03AC	0x09000C  	REPEAT	#12
0x03AE	0x78104F  	POP	[W0--]
0x03B0	0x78004F  	POP	W0
0x03B2	0xF90036  	POP	RCOUNT
0x03B4	0xF90034  	POP	PSVPAG
0x03B6	0x064000  	RETFIE
; end of _botao
;LAB4_Q2.c,0 :: ?ICS?lstr2_LAB4_Q2 [12]
0x047E	0x5345 ;?ICS?lstr2_LAB4_Q2+0
0x0480	0x5551 ;?ICS?lstr2_LAB4_Q2+2
0x0482	0x5245 ;?ICS?lstr2_LAB4_Q2+4
0x0484	0x4144 ;?ICS?lstr2_LAB4_Q2+6
0x0486	0x0D20 ;?ICS?lstr2_LAB4_Q2+8
0x0488	0x000A ;?ICS?lstr2_LAB4_Q2+10
; end of ?ICS?lstr2_LAB4_Q2
;LAB4_Q2.c,0 :: ?ICS?lstr1_LAB4_Q2 [10]
0x048A	0x5246 ;?ICS?lstr1_LAB4_Q2+0
0x048C	0x4E45 ;?ICS?lstr1_LAB4_Q2+2
0x048E	0x4554 ;?ICS?lstr1_LAB4_Q2+4
0x0490	0x0D20 ;?ICS?lstr1_LAB4_Q2+6
0x0492	0x000A ;?ICS?lstr1_LAB4_Q2+8
; end of ?ICS?lstr1_LAB4_Q2
;LAB4_Q2.c,0 :: ?ICS_aux2 [2]
0x0494	0x07D0 ;?ICS_aux2+0
; end of ?ICS_aux2
;,0 :: _initBlock_3 [14]
; Containing: ?ICS?lstr5_LAB4_Q2 [5]
;             ?ICS?lstr4_LAB4_Q2 [9]
0x0496	0x5544 ;_initBlock_3+0 : ?ICS?lstr5_LAB4_Q2 at 0x0496
0x0498	0x5954 ;_initBlock_3+2
0x049A	0x4100 ;_initBlock_3+4 : ?ICS?lstr4_LAB4_Q2 at 0x049B
0x049C	0x5254 ;_initBlock_3+6
0x049E	0x5341 ;_initBlock_3+8
0x04A0	0x0D20 ;_initBlock_3+10
0x04A2	0x000A ;_initBlock_3+12
; end of _initBlock_3
;,0 :: _initBlock_4 [8]
; Containing: ?ICS?lstr7_LAB4_Q2 [5]
;             ?ICS?lstr6_LAB4_Q2 [3]
0x04A4	0x5544 ;_initBlock_4+0 : ?ICS?lstr7_LAB4_Q2 at 0x04A4
0x04A6	0x5954 ;_initBlock_4+2
0x04A8	0x0D00 ;_initBlock_4+4 : ?ICS?lstr6_LAB4_Q2 at 0x04A9
0x04AA	0x000A ;_initBlock_4+6
; end of _initBlock_4
;,0 :: _initBlock_5 [14]
; Containing: ?ICS?lstr3_LAB4_Q2 [11]
;             ?ICS?lstr8_LAB4_Q2 [3]
0x04AC	0x4944 ;_initBlock_5+0 : ?ICS?lstr3_LAB4_Q2 at 0x04AC
0x04AE	0x4552 ;_initBlock_5+2
0x04B0	0x5449 ;_initBlock_5+4
0x04B2	0x2041 ;_initBlock_5+6
0x04B4	0x0A0D ;_initBlock_5+8
0x04B6	0x0D00 ;_initBlock_5+10 : ?ICS?lstr8_LAB4_Q2 at 0x04B7
0x04B8	0x000A ;_initBlock_5+12
; end of _initBlock_5
;LAB4_Q2.c,0 :: ?ICS_flag_criatividade [2]
0x04BA	0x0000 ;?ICS_flag_criatividade+0
; end of ?ICS_flag_criatividade
;LAB4_Q2.c,0 :: ?ICS?lstr12_LAB4_Q2 [10]
0x04BC	0x5345 ;?ICS?lstr12_LAB4_Q2+0
0x04BE	0x5551 ;?ICS?lstr12_LAB4_Q2+2
0x04C0	0x5245 ;?ICS?lstr12_LAB4_Q2+4
0x04C2	0x4144 ;?ICS?lstr12_LAB4_Q2+6
0x04C4	0x0020 ;?ICS?lstr12_LAB4_Q2+8
; end of ?ICS?lstr12_LAB4_Q2
;LAB4_Q2.c,0 :: ?ICS_j [2]
0x04C6	0x0000 ;?ICS_j+0
; end of ?ICS_j
;,0 :: _initBlock_9 [10]
; Containing: ?ICS_m [1]
;             ?ICS?lstr11_LAB4_Q2 [9]
0x04C8	0x4479 ;_initBlock_9+0 : ?ICS_m at 0x04C8 : ?ICS?lstr11_LAB4_Q2 at 0x04C9
0x04CA	0x5249 ;_initBlock_9+2
0x04CC	0x4945 ;_initBlock_9+4
0x04CE	0x4154 ;_initBlock_9+6
0x04D0	0x0020 ;_initBlock_9+8
; end of _initBlock_9
;,0 :: _initBlock_10 [20]
; Containing: ?ICS?lstr13_LAB4_Q2 [5]
;             ?ICS?lstr9_LAB4_Q2 [8]
;             ?ICS?lstr10_LAB4_Q2 [7]
0x04D2	0x5544 ;_initBlock_10+0 : ?ICS?lstr13_LAB4_Q2 at 0x04D2
0x04D4	0x5954 ;_initBlock_10+2
0x04D6	0x4600 ;_initBlock_10+4 : ?ICS?lstr9_LAB4_Q2 at 0x04D7
0x04D8	0x4552 ;_initBlock_10+6
0x04DA	0x544E ;_initBlock_10+8
0x04DC	0x2045 ;_initBlock_10+10
0x04DE	0x4100 ;_initBlock_10+12 : ?ICS?lstr10_LAB4_Q2 at 0x04DF
0x04E0	0x5254 ;_initBlock_10+14
0x04E2	0x5341 ;_initBlock_10+16
0x04E4	0x0020 ;_initBlock_10+18
; end of _initBlock_10
;LAB4_Q2.c,0 :: ?ICS?lstr14_LAB4_Q2 [3]
0x04E6	0x0A0D ;?ICS?lstr14_LAB4_Q2+0
0x04E8	0x00 ;?ICS?lstr14_LAB4_Q2+2
; end of ?ICS?lstr14_LAB4_Q2
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [12]    _send_char
0x010C      [72]    _WordToStr
0x0154      [24]    _send_str
0x016C      [80]    _IntToStr
0x01BC      [32]    _receive_str
0x01DC      [22]    _INIT_UART2
0x01F2      [12]    _receive_char
0x01FE     [272]    _mudarPWM
0x030E     [110]    _msg
0x037C      [60]    _botao
0x03B8     [170]    _main
0x0462      [28]    _Tx_serial2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0216       [2]    U2MODE
0x021E       [2]    U2BRG
0x086B       [1]    _pepe
0x0102       [2]    PR1
0x0110       [2]    T2CON
0x010C       [2]    PR2
0x0084       [2]    IFS0
0x0100       [2]    TMR1
0x0104       [2]    T1CON
0x0084       [2]    IFS0bits
0x008E       [2]    IEC1bits
0x0086       [2]    IFS1bits
0x0218       [2]    U2STA
0x021A       [2]    U2TXREG
0x0216       [2]    U2MODEbits
0x0180       [2]    OC1RS
0x086C       [2]    _aux3
0x086E       [7]    _txt
0x018C       [2]    OC3RS
0x02CA       [2]    LATBbits
0x0876       [2]    _duty
0x02CA       [2]    LATB
0x02C6       [2]    TRISB
0x02A8       [2]    ADPCFG
0x0190       [2]    OC3CON
0x008C       [2]    IEC0bits
0x0184       [2]    OC1CON
0x021C       [2]    U2RXREG
0x0218       [2]    U2STAbits
0x0878     [100]    _criatividade
0x0800      [12]    ?lstr2_LAB4_Q2
0x080C      [10]    ?lstr1_LAB4_Q2
0x0816       [2]    _aux2
0x0818       [5]    ?lstr5_LAB4_Q2
0x081D       [9]    ?lstr4_LAB4_Q2
0x0826       [5]    ?lstr7_LAB4_Q2
0x082B       [3]    ?lstr6_LAB4_Q2
0x082E      [11]    ?lstr3_LAB4_Q2
0x0839       [3]    ?lstr8_LAB4_Q2
0x083C       [2]    _flag_criatividade
0x083E      [10]    ?lstr12_LAB4_Q2
0x0848       [2]    _j
0x084A       [1]    _m
0x084B       [9]    ?lstr11_LAB4_Q2
0x0854       [5]    ?lstr13_LAB4_Q2
0x0859       [8]    ?lstr9_LAB4_Q2
0x0861       [7]    ?lstr10_LAB4_Q2
0x0868       [3]    ?lstr14_LAB4_Q2
0x0084       [2]    IFS0
0x0014       [1]    FARG_send_char_c
0x0100       [2]    TMR1
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x010C       [2]    PR2
0x0110       [2]    T2CON
0x0014       [2]    FARG_send_str_str
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x0180       [2]    OC1RS
0x0184       [2]    OC1CON
0x018C       [2]    OC3RS
0x0190       [2]    OC3CON
0x0014       [1]    FARG_INIT_UART2_valor_baud
0x0014       [1]    FARG_mudarPWM_aux
0x0216       [2]    U2MODE
0x0218       [2]    U2STA
0x021A       [2]    U2TXREG
0x021C       [2]    U2RXREG
0x021E       [2]    U2BRG
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02CA       [2]    LATB
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x047E      [12]    ?ICS?lstr2_LAB4_Q2
0x048A      [10]    ?ICS?lstr1_LAB4_Q2
0x0494       [2]    ?ICS_aux2
0x0496       [5]    ?ICS?lstr5_LAB4_Q2
0x049B       [9]    ?ICS?lstr4_LAB4_Q2
0x04A4       [5]    ?ICS?lstr7_LAB4_Q2
0x04A9       [3]    ?ICS?lstr6_LAB4_Q2
0x04AC      [11]    ?ICS?lstr3_LAB4_Q2
0x04B7       [3]    ?ICS?lstr8_LAB4_Q2
0x04BA       [2]    ?ICS_flag_criatividade
0x04BC      [10]    ?ICS?lstr12_LAB4_Q2
0x04C6       [2]    ?ICS_j
0x04C8       [1]    ?ICS_m
0x04C9       [9]    ?ICS?lstr11_LAB4_Q2
0x04D2       [5]    ?ICS?lstr13_LAB4_Q2
0x04D7       [8]    ?ICS?lstr9_LAB4_Q2
0x04DF       [7]    ?ICS?lstr10_LAB4_Q2
0x04E6       [3]    ?ICS?lstr14_LAB4_Q2
