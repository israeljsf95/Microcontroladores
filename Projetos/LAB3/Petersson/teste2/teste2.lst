;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/02/2020 22:32:18
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040252  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000210  	528
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000238  	568
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0252	0x2080AF  	MOV	#2058, W15
0x0254	0x20FFF0  	MOV	#4095, W0
0x0256	0xB7A020  	MOV	WREG, SPLIM
0x0258	0x200000  	MOV	#0, W0
0x025A	0xB7A034  	MOV	WREG, PSVPAG
0x025C	0x200040  	MOV	#4, W0
0x025E	0xB72044  	IOR	CORCON
0x0260	0x00000002030E  	CALL	782
;teste2.c,72 :: 		void main() {
;teste2.c,73 :: 		flag_canal = 0;
0x0264	0x781F8A  	PUSH	W10
0x0266	0xEF2000  	CLR	W0
0x0268	0x884040  	MOV	W0, _flag_canal
;teste2.c,75 :: 		ADPCFG = 0xFFFF; // all PORTB = Digital but RB7 = analog
0x026A	0x2FFFF0  	MOV	#65535, W0
0x026C	0xB7A2A8  	MOV	WREG, ADPCFG
;teste2.c,76 :: 		ADPCFGbits.PCFG2 = 0;
0x026E	0xA942A8  	BCLR.B	ADPCFGbits, #2
;teste2.c,77 :: 		ADPCFGbits.PCFG5 = 0;
0x0270	0xA9A2A8  	BCLR.B	ADPCFGbits, #5
;teste2.c,78 :: 		ADPCFGbits.PCFG7 = 0;
0x0272	0xA9E2A8  	BCLR.B	ADPCFGbits, #7
;teste2.c,80 :: 		TRISEbits.TRISE8 = 1;
0x0274	0xA802D9  	BSET	TRISEbits, #8
;teste2.c,81 :: 		IEC0bits.INT0IE = 1;
0x0276	0xA8008C  	BSET.B	IEC0bits, #0
;teste2.c,82 :: 		IFS0 = 0;
0x0278	0xEF2084  	CLR	IFS0
;teste2.c,85 :: 		ADCON1 = 0;
0x027A	0xEF22A0  	CLR	ADCON1
;teste2.c,86 :: 		ADCON1bits.SSRC = 0b010; // SSRC bit = 111 implies internal
0x027C	0xB3C400  	MOV.B	#64, W0
0x027E	0x784080  	MOV.B	W0, W1
0x0280	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x0282	0x68C090  	XOR.B	W1, [W0], W1
0x0284	0xB3CE00  	MOV.B	#224, W0
0x0286	0x60C080  	AND.B	W1, W0, W1
0x0288	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x028A	0x68C090  	XOR.B	W1, [W0], W1
0x028C	0x202A00  	MOV	#lo_addr(ADCON1bits), W0
0x028E	0x784801  	MOV.B	W1, [W0]
;teste2.c,88 :: 		TMR3 = 0x0000;
0x0290	0xEF210A  	CLR	TMR3
;teste2.c,89 :: 		PR3 = 2000;
0x0292	0x207D00  	MOV	#2000, W0
0x0294	0xB7A10E  	MOV	WREG, PR3
;teste2.c,90 :: 		T3CON = 0x8000;
0x0296	0x280000  	MOV	#32768, W0
0x0298	0xB7A112  	MOV	WREG, T3CON
;teste2.c,94 :: 		ADCHS = 0x0002; // Connect RB2/AN2 as CH0 input ..
0x029A	0x200020  	MOV	#2, W0
0x029C	0xB7A2A6  	MOV	WREG, ADCHS
;teste2.c,96 :: 		ADCSSL = 0;
0x029E	0xEF22AA  	CLR	ADCSSL
;teste2.c,97 :: 		ADCON3 = 0x0007; // Sample time = 15Tad, Tad = intern
0x02A0	0x200070  	MOV	#7, W0
0x02A2	0xB7A2A4  	MOV	WREG, ADCON3
;teste2.c,98 :: 		ADCON2 = 0;
0x02A4	0xEF22A2  	CLR	ADCON2
;teste2.c,99 :: 		ADCON2bits.SMPI = 0b1111; // Interrupt after every 2 samples
0x02A6	0x202A20  	MOV	#lo_addr(ADCON2bits), W0
0x02A8	0x784090  	MOV.B	[W0], W1
0x02AA	0xB3C3C0  	MOV.B	#60, W0
0x02AC	0x70C080  	IOR.B	W1, W0, W1
0x02AE	0x202A20  	MOV	#lo_addr(ADCON2bits), W0
0x02B0	0x784801  	MOV.B	W1, [W0]
;teste2.c,101 :: 		ADCON1.ADON = 1;
0x02B2	0xA8E2A1  	BSET	ADCON1, #15
;teste2.c,104 :: 		Lcd_Init();                        // Initialize LCD
0x02B4	0x07FF42  	RCALL	_Lcd_Init
;teste2.c,105 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x02B6	0xB3C01A  	MOV.B	#1, W10
0x02B8	0x07FF75  	RCALL	_Lcd_Cmd
;teste2.c,106 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x02BA	0xB3C0CA  	MOV.B	#12, W10
0x02BC	0x07FF73  	RCALL	_Lcd_Cmd
;teste2.c,108 :: 		ADCON1bits.ASAM = 1;
0x02BE	0xA842A0  	BSET.B	ADCON1bits, #2
;teste2.c,109 :: 		while (1) // repeat continuously
L_main2:
;teste2.c,111 :: 		ADCValue = 0; // clear value
0x02C0	0xEF2000  	CLR	W0
0x02C2	0x884020  	MOV	W0, _ADCValue
;teste2.c,112 :: 		ADC16Ptr = &ADCBUF0; // initialize ADCBUF pointer
0x02C4	0x202800  	MOV	#lo_addr(ADCBUF0), W0
0x02C6	0x884000  	MOV	W0, _ADC16Ptr
;teste2.c,113 :: 		IFS0bits.ADIF = 0; // clear ADC interrupt flag
0x02C8	0xA96085  	BCLR	IFS0bits, #11
;teste2.c,114 :: 		ADCON1bits.ASAM = 1; // auto start sampling
0x02CA	0xA842A0  	BSET.B	ADCON1bits, #2
;teste2.c,116 :: 		while (!IFS0bits.ADIF); // conversion done?
L_main4:
0x02CC	0xAF6085  	BTSC	IFS0bits, #11
0x02CE	0x370001  	BRA	L_main5
0x02D0	0x37FFFD  	BRA	L_main4
L_main5:
;teste2.c,117 :: 		ADCON1bits.ASAM = 0; // yes then stop sample/convert
0x02D2	0xA942A0  	BCLR.B	ADCON1bits, #2
;teste2.c,118 :: 		for (count = 0; count < 16; count++) // average the 2 ADC value
0x02D4	0xEF2000  	CLR	W0
0x02D6	0x884010  	MOV	W0, _count
L_main6:
0x02D8	0x804010  	MOV	_count, W0
0x02DA	0xE10070  	CP	W0, #16
0x02DC	0x3D000B  	BRA GE	L_main7
L__main12:
;teste2.c,119 :: 		ADCValue = ADCValue + *ADC16Ptr++;
0x02DE	0x804000  	MOV	_ADC16Ptr, W0
0x02E0	0x780090  	MOV	[W0], W1
0x02E2	0x208040  	MOV	#lo_addr(_ADCValue), W0
0x02E4	0x408810  	ADD	W1, [W0], [W0]
0x02E6	0x200021  	MOV	#2, W1
0x02E8	0x208000  	MOV	#lo_addr(_ADC16Ptr), W0
0x02EA	0x408810  	ADD	W1, [W0], [W0]
;teste2.c,118 :: 		for (count = 0; count < 16; count++) // average the 2 ADC value
0x02EC	0x200011  	MOV	#1, W1
0x02EE	0x208020  	MOV	#lo_addr(_count), W0
0x02F0	0x408810  	ADD	W1, [W0], [W0]
;teste2.c,119 :: 		ADCValue = ADCValue + *ADC16Ptr++;
0x02F2	0x37FFF2  	BRA	L_main6
L_main7:
;teste2.c,120 :: 		ADCValue = ADCValue >> 1;
0x02F4	0x804020  	MOV	_ADCValue, W0
0x02F6	0xDE0041  	LSR	W0, #1, W0
0x02F8	0x884020  	MOV	W0, _ADCValue
;teste2.c,121 :: 		ADCValue = ADCValue >> 1;
0x02FA	0xDE0041  	LSR	W0, #1, W0
0x02FC	0x884020  	MOV	W0, _ADCValue
;teste2.c,122 :: 		ADCValue = ADCValue >> 1;
0x02FE	0xDE0041  	LSR	W0, #1, W0
0x0300	0x884020  	MOV	W0, _ADCValue
;teste2.c,123 :: 		ADCValue = ADCValue >> 1;
0x0302	0xDE0041  	LSR	W0, #1, W0
0x0304	0x884020  	MOV	W0, _ADCValue
;teste2.c,132 :: 		ADCON1bits.ASAM = 1;
0x0306	0xA842A0  	BSET.B	ADCON1bits, #2
;teste2.c,134 :: 		}
0x0308	0x37FFDB  	BRA	L_main2
;teste2.c,149 :: 		}
L_end_main:
0x030A	0x78054F  	POP	W10
L__main_end_loop:
0x030C	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_Lcd_Init:
0x013A	0xFA0000  	LNK	#0
;__Lib_Lcd.c,105 :: 		
;__Lib_Lcd.c,107 :: 		
0x013C	0x07FFF8  	RCALL	_Delay_8ms
0x013E	0x07FFF7  	RCALL	_Delay_8ms
;__Lib_Lcd.c,109 :: 		
0x0140	0xA982D8  	BCLR	LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,110 :: 		
0x0142	0xA9A2D8  	BCLR	LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,111 :: 		
0x0144	0xA962D8  	BCLR	LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,112 :: 		
0x0146	0xA942D8  	BCLR	LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,113 :: 		
0x0148	0xA922D8  	BCLR	LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,114 :: 		
0x014A	0xA902D8  	BCLR	LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,116 :: 		
0x014C	0xA982DC  	BCLR	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,117 :: 		
0x014E	0xA9A2DC  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,118 :: 		
0x0150	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,119 :: 		
0x0152	0xA922DC  	BCLR	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,120 :: 		
0x0154	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,121 :: 		
0x0156	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,130 :: 		
0x0158	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,131 :: 		
0x015A	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,132 :: 		
0x015C	0x07FFE1  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,133 :: 		
0x015E	0x07FFD5  	RCALL	_Delay_5500us
;__Lib_Lcd.c,136 :: 		
0x0160	0x07FFDF  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,137 :: 		
0x0162	0x07FFD3  	RCALL	_Delay_5500us
;__Lib_Lcd.c,140 :: 		
0x0164	0x07FFDD  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,141 :: 		
0x0166	0x07FFD1  	RCALL	_Delay_5500us
;__Lib_Lcd.c,144 :: 		
0x0168	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,145 :: 		
0x016A	0x07FFDA  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,146 :: 		
0x016C	0x07FFCE  	RCALL	_Delay_5500us
;__Lib_Lcd.c,149 :: 		
0x016E	0x07FFD8  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,151 :: 		
0x0170	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,152 :: 		
0x0172	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,153 :: 		
0x0174	0x07FFD5  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,154 :: 		
0x0176	0x07FFC9  	RCALL	_Delay_5500us
;__Lib_Lcd.c,157 :: 		
0x0178	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,158 :: 		
0x017A	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,159 :: 		
0x017C	0x07FFD1  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,161 :: 		
0x017E	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,162 :: 		
0x0180	0x07FFCF  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,163 :: 		
0x0182	0x07FFC3  	RCALL	_Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0184	0x07FFCD  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,168 :: 		
0x0186	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,169 :: 		
0x0188	0x07FFCB  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,170 :: 		
0x018A	0x07FFBF  	RCALL	_Delay_5500us
;__Lib_Lcd.c,173 :: 		
0x018C	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,174 :: 		
0x018E	0x07FFC8  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,176 :: 		
0x0190	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,177 :: 		
0x0192	0xA822DC  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,178 :: 		
0x0194	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,179 :: 		
0x0196	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,180 :: 		
0x0198	0x07FFC3  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,181 :: 		
0x019A	0x07FFB7  	RCALL	_Delay_5500us
;__Lib_Lcd.c,183 :: 		
0x019C	0x208060  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x019E	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,184 :: 		
L_end_Lcd_Init:
0x01A0	0xFA8000  	ULNK
0x01A2	0x060000  	RETURN
; end of _Lcd_Init
_Delay_8ms:
;__Lib_Delays.c,614 :: 		void Delay_8ms()
;__Lib_Delays.c,616 :: 		Delay_ms(8);
0x012E	0x2A6AA7  	MOV	#42666, W7
L_Delay_8ms29:
0x0130	0xED200E  	DEC	W7
0x0132	0x3AFFFE  	BRA NZ	L_Delay_8ms29
0x0134	0x000000  	NOP
0x0136	0x000000  	NOP
;__Lib_Delays.c,617 :: 		}
L_end_Delay_8ms:
0x0138	0x060000  	RETURN
; end of _Delay_8ms
__Lib_Lcd_Strobe:
0x0120	0xFA0000  	LNK	#0
;__Lib_Lcd.c,26 :: 		
;__Lib_Lcd.c,27 :: 		
0x0122	0xA882DC  	BSET	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,28 :: 		
0x0124	0x07FFED  	RCALL	_Delay_1us
;__Lib_Lcd.c,29 :: 		
0x0126	0xA982DC  	BCLR	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,30 :: 		
0x0128	0x07FFEB  	RCALL	_Delay_1us
;__Lib_Lcd.c,31 :: 		
L_end_Strobe:
0x012A	0xFA8000  	ULNK
0x012C	0x060000  	RETURN
; end of __Lib_Lcd_Strobe
_Delay_1us:
;__Lib_Delays.c,380 :: 		void Delay_1us()
;__Lib_Delays.c,382 :: 		Delay_us(1);
0x0100	0x200057  	MOV	#5, W7
L_Delay_1us11:
0x0102	0xED200E  	DEC	W7
0x0104	0x3AFFFE  	BRA NZ	L_Delay_1us11
0x0106	0x000000  	NOP
;__Lib_Delays.c,383 :: 		}
L_end_Delay_1us:
0x0108	0x060000  	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,536 :: 		void Delay_5500us()
;__Lib_Delays.c,538 :: 		Delay_us(5500);
0x010A	0x272957  	MOV	#29333, W7
L_Delay_5500us23:
0x010C	0xED200E  	DEC	W7
0x010E	0x3AFFFE  	BRA NZ	L_Delay_5500us23
0x0110	0x000000  	NOP
;__Lib_Delays.c,539 :: 		}
L_end_Delay_5500us:
0x0112	0x060000  	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
0x01A4	0xFA0000  	LNK	#0
;__Lib_Lcd.c,38 :: 		
;__Lib_Lcd.c,40 :: 		
; loc_word start address is: 2 (W1)
0x01A6	0xFB808A  	ZE	W10, W1
;__Lib_Lcd.c,42 :: 		
0x01A8	0xAEE002  	BTSS	W1, #7
0x01AA	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
0x01AC	0xAFE002  	BTSC	W1, #7
0x01AE	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,43 :: 		
0x01B0	0xAEC002  	BTSS	W1, #6
0x01B2	0xA922DC  	BCLR	LCD_D6, BitPos(LCD_D6+0)
0x01B4	0xAFC002  	BTSC	W1, #6
0x01B6	0xA822DC  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,44 :: 		
0x01B8	0xAEA002  	BTSS	W1, #5
0x01BA	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
0x01BC	0xAFA002  	BTSC	W1, #5
0x01BE	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,45 :: 		
0x01C0	0xAE8002  	BTSS	W1, #4
0x01C2	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
0x01C4	0xAF8002  	BTSC	W1, #4
0x01C6	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,47 :: 		
0x01C8	0x208060  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x01CA	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x01CC	0xA8A2DC  	BSET	LCD_RS, BitPos(LCD_RS+0)
0x01CE	0xA70010  	BTSC	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x01D0	0xA9A2DC  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,49 :: 		
0x01D2	0x07FFA6  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,51 :: 		
0x01D4	0xAE6002  	BTSS	W1, #3
0x01D6	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
0x01D8	0xAF6002  	BTSC	W1, #3
0x01DA	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,52 :: 		
0x01DC	0xAE4002  	BTSS	W1, #2
0x01DE	0xA922DC  	BCLR	LCD_D6, BitPos(LCD_D6+0)
0x01E0	0xAF4002  	BTSC	W1, #2
0x01E2	0xA822DC  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,53 :: 		
0x01E4	0xAE2002  	BTSS	W1, #1
0x01E6	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
0x01E8	0xAF2002  	BTSC	W1, #1
0x01EA	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,54 :: 		
0x01EC	0xAE0002  	BTSS	W1, #0
0x01EE	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
0x01F0	0xAF0002  	BTSC	W1, #0
0x01F2	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
; loc_word end address is: 2 (W1)
;__Lib_Lcd.c,56 :: 		
0x01F4	0x208060  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x01F6	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x01F8	0xA8A2DC  	BSET	LCD_RS, BitPos(LCD_RS+0)
0x01FA	0xA70010  	BTSC	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x01FC	0xA9A2DC  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,58 :: 		
0x01FE	0x07FF90  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,60 :: 		
0x0200	0x208060  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0202	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x0204	0x370002  	BRA	L_Lcd_Cmd0
;__Lib_Lcd.c,61 :: 		
0x0206	0x07FF81  	RCALL	_Delay_5500us
0x0208	0x370001  	BRA	L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,63 :: 		
0x020A	0x07FF84  	RCALL	_Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,64 :: 		
L_end_Lcd_Cmd:
0x020C	0xFA8000  	ULNK
0x020E	0x060000  	RETURN
; end of _Lcd_Cmd
_Delay_50us:
;__Lib_Delays.c,458 :: 		void Delay_50us()
;__Lib_Delays.c,460 :: 		Delay_us(50);
0x0114	0x2010A7  	MOV	#266, W7
L_Delay_50us17:
0x0116	0xED200E  	DEC	W7
0x0118	0x3AFFFE  	BRA NZ	L_Delay_50us17
0x011A	0x000000  	NOP
0x011C	0x000000  	NOP
;__Lib_Delays.c,461 :: 		}
L_end_Delay_50us:
0x011E	0x060000  	RETURN
; end of _Delay_50us
0x030E	0x20800A  	MOV	#2048, W10
0x0310	0x20000B  	MOV	#0, W11
0x0312	0x090004  	REPEAT	#4
0x0314	0x781D0B  	MOV	W11, [W10++]
0x0316	0x060000  	RETURN
_intADC:
0x0238	0xF80034  	PUSH	PSVPAG
0x023A	0xF80036  	PUSH	RCOUNT
0x023C	0x781F80  	PUSH	W0
0x023E	0x200020  	MOV	#2, W0
0x0240	0x09000C  	REPEAT	#12
0x0242	0x781FB0  	PUSH	[W0++]
;teste2.c,31 :: 		void intADC() iv IVT_ADDR_ADCINTERRUPT ics ICS_AUTO {
;teste2.c,70 :: 		}
L_end_intADC:
0x0244	0x2001A0  	MOV	#26, W0
0x0246	0x09000C  	REPEAT	#12
0x0248	0x78104F  	POP	[W0--]
0x024A	0x78004F  	POP	W0
0x024C	0xF90036  	POP	RCOUNT
0x024E	0xF90034  	POP	PSVPAG
0x0250	0x064000  	RETFIE
; end of _intADC
_botao_tempo:
0x0210	0xF80034  	PUSH	PSVPAG
0x0212	0xF80036  	PUSH	RCOUNT
0x0214	0x781F80  	PUSH	W0
0x0216	0x200020  	MOV	#2, W0
0x0218	0x09000C  	REPEAT	#12
0x021A	0x781FB0  	PUSH	[W0++]
;teste2.c,24 :: 		void botao_tempo() iv IVT_ADDR_INT0INTERRUPT ics ICS_AUTO {
;teste2.c,25 :: 		IFS0bits.INT0IF = 0;
0x021C	0xA90084  	BCLR.B	IFS0bits, #0
;teste2.c,26 :: 		Delay_ms(50);
0x021E	0x200058  	MOV	#5, W8
0x0220	0x211AB7  	MOV	#4523, W7
L_botao_tempo0:
0x0222	0xED200E  	DEC	W7
0x0224	0x3AFFFE  	BRA NZ	L_botao_tempo0
0x0226	0xED2010  	DEC	W8
0x0228	0x3AFFFC  	BRA NZ	L_botao_tempo0
;teste2.c,27 :: 		}
L_end_botao_tempo:
0x022A	0x2001A0  	MOV	#26, W0
0x022C	0x09000C  	REPEAT	#12
0x022E	0x78104F  	POP	[W0--]
0x0230	0x78004F  	POP	W0
0x0232	0xF90036  	POP	RCOUNT
0x0234	0xF90034  	POP	PSVPAG
0x0236	0x064000  	RETFIE
; end of _botao_tempo
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [10]    _Delay_1us
0x010A      [10]    _Delay_5500us
0x0114      [12]    _Delay_50us
0x0120      [14]    __Lib_Lcd_Strobe
0x012E      [12]    _Delay_8ms
0x013A     [106]    _Lcd_Init
0x01A4     [108]    _Lcd_Cmd
0x0210      [40]    _botao_tempo
0x0238      [26]    _intADC
0x0252     [188]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0280       [2]    ADCBUF0
0x0800       [2]    _ADC16Ptr
0x0084       [2]    IFS0bits
0x02DC       [0]    LCD_D7
0x0802       [2]    _count
0x0804       [2]    _ADCValue
0x02AA       [2]    ADCSSL
0x02A6       [2]    ADCHS
0x02A4       [2]    ADCON3
0x02A2       [2]    ADCON2bits
0x02A2       [2]    ADCON2
0x02DC       [0]    LCD_D6
0x02D8       [0]    LCD_D5_Direction
0x02D8       [0]    LCD_D4_Direction
0x02D8       [0]    LCD_D6_Direction
0x02DC       [0]    LCD_EN
0x02D8       [0]    LCD_D7_Direction
0x02D8       [0]    LCD_RS_Direction
0x02DC       [0]    LCD_D4
0x02DC       [0]    LCD_D5
0x02DC       [0]    LCD_RS
0x02D8       [0]    LCD_EN_Direction
0x0806       [0]    __Lib_Lcd_cmd_status
0x02D8       [0]    TRISE5_bit
0x02D8       [0]    TRISE4_bit
0x02D8       [0]    TRISE3_bit
0x02D8       [0]    TRISE1_bit
0x02D8       [0]    TRISE2_bit
0x02DC       [0]    LATE5_bit
0x02DC       [0]    LATE0_bit
0x02DC       [0]    LATE4_bit
0x02DC       [0]    LATE1_bit
0x02DC       [0]    LATE3_bit
0x02DC       [0]    LATE2_bit
0x02D8       [0]    TRISE0_bit
0x02A0       [2]    ADCON1bits
0x02A0       [2]    ADCON1
0x010A       [2]    TMR3
0x0112       [2]    T3CON
0x010E       [2]    PR3
0x0084       [2]    IFS0
0x02A8       [2]    ADPCFG
0x0808       [2]    _flag_canal
0x02A8       [2]    ADPCFGbits
0x008C       [2]    IEC0bits
0x02D8       [2]    TRISEbits
0x0084       [2]    IFS0
0x010A       [2]    TMR3
0x010E       [2]    PR3
0x0112       [2]    T3CON
0x0014       [1]    FARG_Lcd_Cmd_out_char
0x0280       [2]    ADCBUF0
0x02A0       [2]    ADCON1
0x02A2       [2]    ADCON2
0x02A4       [2]    ADCON3
0x02A6       [2]    ADCHS
0x02A8       [2]    ADPCFG
0x02AA       [2]    ADCSSL
