;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23/01/2020 17:11:26
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040932  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x0008FA  	2298
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x0008C8  	2248
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000AEA  	2794
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0932	0x2086AF  	MOV	#2154, W15
0x0934	0x20FFF0  	MOV	#4095, W0
0x0936	0xB7A020  	MOV	WREG, SPLIM
0x0938	0x200000  	MOV	#0, W0
0x093A	0xB7A034  	MOV	WREG, PSVPAG
0x093C	0x200040  	MOV	#4, W0
0x093E	0xB72044  	IOR	CORCON
0x0940	0x000000020B7C  	CALL	2940
0x0944	0x000000020B86  	CALL	2950
;q222.c,195 :: 		void main() {
;q222.c,197 :: 		ADPCFG = 0xFFFF;
0x0948	0x781F8A  	PUSH	W10
0x094A	0x781F8B  	PUSH	W11
0x094C	0x781F8C  	PUSH	W12
0x094E	0x2FFFF0  	MOV	#65535, W0
0x0950	0xB7A2A8  	MOV	WREG, ADPCFG
;q222.c,199 :: 		TRISB = 0;
0x0952	0xEF22C6  	CLR	TRISB
;q222.c,200 :: 		TRISD = 0x0002;
0x0954	0x200020  	MOV	#2, W0
0x0956	0xB7A2D2  	MOV	WREG, TRISD
;q222.c,201 :: 		TRISE = 0x0000;
0x0958	0xEF22D8  	CLR	TRISE
;q222.c,202 :: 		TRISEbits.TRISE8 = 1;
0x095A	0xA802D9  	BSET	TRISEbits, #8
;q222.c,203 :: 		IFS1bits.INT2IF = 0;
0x095C	0xA9E086  	BCLR.B	IFS1bits, #7
;q222.c,204 :: 		IFS0bits.INT0IF = 0;
0x095E	0xA90084  	BCLR.B	IFS0bits, #0
;q222.c,205 :: 		IEC1bits.INT2IE = 1;
0x0960	0xA8E08E  	BSET.B	IEC1bits, #7
;q222.c,206 :: 		IEC0bits.INT0IE = 1;
0x0962	0xA8008C  	BSET.B	IEC0bits, #0
;q222.c,207 :: 		INTCON2bits.INT2EP = 0;
0x0964	0xA94082  	BCLR.B	INTCON2bits, #2
;q222.c,208 :: 		INTCON2bits.INT0EP = 0;
0x0966	0xA90082  	BCLR.B	INTCON2bits, #0
;q222.c,211 :: 		IFS0bits.T1IF = 0;
0x0968	0xA96084  	BCLR.B	IFS0bits, #3
;q222.c,212 :: 		IFS0bits.T2IF = 0;
0x096A	0xA9C084  	BCLR.B	IFS0bits, #6
;q222.c,213 :: 		IEC0bits.T1IE = 1;
0x096C	0xA8608C  	BSET.B	IEC0bits, #3
;q222.c,214 :: 		IEC0bits.T2IE = 1;
0x096E	0xA8C08C  	BSET.B	IEC0bits, #6
;q222.c,215 :: 		T1CON = 0x8030;
0x0970	0x280300  	MOV	#32816, W0
0x0972	0xB7A104  	MOV	WREG, T1CON
;q222.c,216 :: 		T2CON = 0x800A;
0x0974	0x2800A0  	MOV	#32778, W0
0x0976	0xB7A110  	MOV	WREG, T2CON
;q222.c,218 :: 		PR1 = 62500;
0x0978	0x2F4240  	MOV	#62500, W0
0x097A	0xB7A102  	MOV	WREG, PR1
;q222.c,219 :: 		PR2 = 0xFFFF;
0x097C	0x2FFFF0  	MOV	#65535, W0
0x097E	0xB7A10C  	MOV	WREG, PR2
;q222.c,220 :: 		PR3 = 0xFFFF;
0x0980	0x2FFFF0  	MOV	#65535, W0
0x0982	0xB7A10E  	MOV	WREG, PR3
;q222.c,224 :: 		Lcd_Init();
0x0984	0x07FDFB  	RCALL	_Lcd_Init
;q222.c,225 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x0986	0xB3C01A  	MOV.B	#1, W10
0x0988	0x07FED3  	RCALL	_Lcd_Cmd
;q222.c,226 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x098A	0xB3C0CA  	MOV.B	#12, W10
0x098C	0x07FED1  	RCALL	_Lcd_Cmd
;q222.c,228 :: 		IPC0 = 0x7006;
0x098E	0x270060  	MOV	#28678, W0
0x0990	0xB7A094  	MOV	WREG, IPC0
;q222.c,229 :: 		IPC1 = 0x0500;
0x0992	0x205000  	MOV	#1280, W0
0x0994	0xB7A096  	MOV	WREG, IPC1
;q222.c,231 :: 		criat = 0;
0x0996	0xEF2000  	CLR	W0
0x0998	0x884340  	MOV	W0, _criat
;q222.c,233 :: 		while(1){
L_main19:
;q222.c,235 :: 		frequencia = frequencia1 + frequencia2*65536;
0x099A	0x208080  	MOV	#lo_addr(_frequencia2), W0
0x099C	0x780190  	MOV	[W0], W3
0x099E	0xEB0100  	CLR	W2
0x09A0	0x208041  	MOV	#lo_addr(_frequencia1), W1
0x09A2	0x208000  	MOV	#lo_addr(_frequencia), W0
0x09A4	0x411831  	ADD	W2, [W1++], [W0++]
0x09A6	0x499021  	ADDC	W3, [W1--], [W0--]
;q222.c,236 :: 		if (cont_int == 1){
0x09A8	0x804060  	MOV	_cont_int, W0
0x09AA	0xE10061  	CP	W0, #1
0x09AC	0x3A0030  	BRA NZ	L_main21
L__main63:
;q222.c,237 :: 		if ((frequencia >= 0)&&(frequencia < 1000)){
0x09AE	0x804000  	MOV	_frequencia, W0
0x09B0	0x804011  	MOV	_frequencia+2, W1
0x09B2	0xE10060  	CP	W0, #0
0x09B4	0xE18860  	CPB	W1, #0
0x09B6	0x390013  	BRA LTU	L__main42
L__main64:
0x09B8	0x203E81  	MOV	#1000, W1
0x09BA	0x200002  	MOV	#0, W2
0x09BC	0x208000  	MOV	#lo_addr(_frequencia), W0
0x09BE	0xE10830  	CP	W1, [W0++]
0x09C0	0xE19020  	CPB	W2, [W0--]
0x09C2	0x36000D  	BRA LEU	L__main41
L__main65:
L__main40:
;q222.c,238 :: 		LongToStr((frequencia), txt);
0x09C4	0x20855C  	MOV	#lo_addr(_txt), W12
0x09C6	0x80400A  	MOV	_frequencia, W10
0x09C8	0x80401B  	MOV	_frequencia+2, W11
0x09CA	0x07FF4C  	RCALL	_LongToStr
;q222.c,239 :: 		Lcd_Out(1, 1,txt);
0x09CC	0x20855C  	MOV	#lo_addr(_txt), W12
0x09CE	0x20001B  	MOV	#1, W11
0x09D0	0x20001A  	MOV	#1, W10
0x09D2	0x07FF1B  	RCALL	_Lcd_Out
;q222.c,240 :: 		Lcd_Out(2, 11,"Hz  ");
0x09D4	0x20813C  	MOV	#lo_addr(?lstr1_q222), W12
0x09D6	0x2000BB  	MOV	#11, W11
0x09D8	0x20002A  	MOV	#2, W10
0x09DA	0x07FF17  	RCALL	_Lcd_Out
;q222.c,241 :: 		}else{
0x09DC	0x370018  	BRA	L_main25
;q222.c,237 :: 		if ((frequencia >= 0)&&(frequencia < 1000)){
L__main42:
L__main41:
;q222.c,242 :: 		Lcd_Out(1, 1, "           ");
0x09DE	0x20818C  	MOV	#lo_addr(?lstr2_q222), W12
0x09E0	0x20001B  	MOV	#1, W11
0x09E2	0x20001A  	MOV	#1, W10
0x09E4	0x07FF12  	RCALL	_Lcd_Out
;q222.c,243 :: 		Lcd_Out(2, 11,"erro");
0x09E6	0x20824C  	MOV	#lo_addr(?lstr3_q222), W12
0x09E8	0x2000BB  	MOV	#11, W11
0x09EA	0x20002A  	MOV	#2, W10
0x09EC	0x07FF0E  	RCALL	_Lcd_Out
;q222.c,244 :: 		if (flag_c == 1){
0x09EE	0x804150  	MOV	_flag_c, W0
0x09F0	0xE10061  	CP	W0, #1
0x09F2	0x3A000D  	BRA NZ	L_main26
L__main66:
;q222.c,245 :: 		criat = floor((frequencia / 1000));
0x09F4	0x203E82  	MOV	#1000, W2
0x09F6	0x200003  	MOV	#0, W3
0x09F8	0x804000  	MOV	_frequencia, W0
0x09FA	0x804011  	MOV	_frequencia+2, W1
0x09FC	0xEB0200  	CLR	W4
0x09FE	0x07FBBE  	RCALL	__Divide_32x32
0x0A00	0x07FD1B  	RCALL	__Long2Float
0x0A02	0xBE0500  	MOV.D	W0, W10
0x0A04	0x07FECB  	RCALL	_floor
0x0A06	0x07FCDC  	RCALL	__Float2Longint
0x0A08	0x884340  	MOV	W0, _criat
;q222.c,246 :: 		criatividade(criat);
0x0A0A	0x780500  	MOV	W0, W10
0x0A0C	0x07FE22  	RCALL	_criatividade
;q222.c,247 :: 		}
L_main26:
;q222.c,248 :: 		}
L_main25:
;q222.c,249 :: 		}
L_main21:
;q222.c,251 :: 		if (cont_int == 2){
0x0A0E	0x804060  	MOV	_cont_int, W0
0x0A10	0xE10062  	CP	W0, #2
0x0A12	0x3A003A  	BRA NZ	L_main27
L__main67:
;q222.c,252 :: 		frequencia_aux = floor(frequencia/1000);
0x0A14	0x203E82  	MOV	#1000, W2
0x0A16	0x200003  	MOV	#0, W3
0x0A18	0x804000  	MOV	_frequencia, W0
0x0A1A	0x804011  	MOV	_frequencia+2, W1
0x0A1C	0xEB0200  	CLR	W4
0x0A1E	0x07FBAE  	RCALL	__Divide_32x32
0x0A20	0x07FD0B  	RCALL	__Long2Float
0x0A22	0xBE0500  	MOV.D	W0, W10
0x0A24	0x07FEBB  	RCALL	_floor
0x0A26	0x07FDDF  	RCALL	__Float2Longword
0x0A28	0x884160  	MOV	W0, _frequencia_aux
0x0A2A	0x884171  	MOV	W1, _frequencia_aux+2
;q222.c,253 :: 		if ((frequencia_aux > 0)&&(frequencia_aux < 1000)){
0x0A2C	0xE10060  	CP	W0, #0
0x0A2E	0xE18860  	CPB	W1, #0
0x0A30	0x360013  	BRA LEU	L__main44
L__main68:
0x0A32	0x203E81  	MOV	#1000, W1
0x0A34	0x200002  	MOV	#0, W2
0x0A36	0x2082C0  	MOV	#lo_addr(_frequencia_aux), W0
0x0A38	0xE10830  	CP	W1, [W0++]
0x0A3A	0xE19020  	CPB	W2, [W0--]
0x0A3C	0x36000D  	BRA LEU	L__main43
L__main69:
L__main39:
;q222.c,254 :: 		LongToStr((frequencia_aux), txt);
0x0A3E	0x20855C  	MOV	#lo_addr(_txt), W12
0x0A40	0x80416A  	MOV	_frequencia_aux, W10
0x0A42	0x80417B  	MOV	_frequencia_aux+2, W11
0x0A44	0x07FF0F  	RCALL	_LongToStr
;q222.c,255 :: 		Lcd_Out(1, 1,txt);
0x0A46	0x20855C  	MOV	#lo_addr(_txt), W12
0x0A48	0x20001B  	MOV	#1, W11
0x0A4A	0x20001A  	MOV	#1, W10
0x0A4C	0x07FEDE  	RCALL	_Lcd_Out
;q222.c,256 :: 		Lcd_Out(2, 11, "kHz ");
0x0A4E	0x20830C  	MOV	#lo_addr(?lstr4_q222), W12
0x0A50	0x2000BB  	MOV	#11, W11
0x0A52	0x20002A  	MOV	#2, W10
0x0A54	0x07FEDA  	RCALL	_Lcd_Out
;q222.c,257 :: 		}else{
0x0A56	0x370018  	BRA	L_main31
;q222.c,253 :: 		if ((frequencia_aux > 0)&&(frequencia_aux < 1000)){
L__main44:
L__main43:
;q222.c,258 :: 		Lcd_Out(1, 1, "          ");
0x0A58	0x20835C  	MOV	#lo_addr(?lstr5_q222), W12
0x0A5A	0x20001B  	MOV	#1, W11
0x0A5C	0x20001A  	MOV	#1, W10
0x0A5E	0x07FED5  	RCALL	_Lcd_Out
;q222.c,259 :: 		Lcd_Out(2, 11, "erro");
0x0A60	0x20840C  	MOV	#lo_addr(?lstr6_q222), W12
0x0A62	0x2000BB  	MOV	#11, W11
0x0A64	0x20002A  	MOV	#2, W10
0x0A66	0x07FED1  	RCALL	_Lcd_Out
;q222.c,260 :: 		if (flag_c == 1){
0x0A68	0x804150  	MOV	_flag_c, W0
0x0A6A	0xE10061  	CP	W0, #1
0x0A6C	0x3A000D  	BRA NZ	L_main32
L__main70:
;q222.c,261 :: 		criat = floor(frequencia/1000000);
0x0A6E	0x242402  	MOV	#16960, W2
0x0A70	0x2000F3  	MOV	#15, W3
0x0A72	0x804000  	MOV	_frequencia, W0
0x0A74	0x804011  	MOV	_frequencia+2, W1
0x0A76	0xEB0200  	CLR	W4
0x0A78	0x07FB81  	RCALL	__Divide_32x32
0x0A7A	0x07FCDE  	RCALL	__Long2Float
0x0A7C	0xBE0500  	MOV.D	W0, W10
0x0A7E	0x07FE8E  	RCALL	_floor
0x0A80	0x07FC9F  	RCALL	__Float2Longint
0x0A82	0x884340  	MOV	W0, _criat
;q222.c,262 :: 		criatividade(criat);
0x0A84	0x780500  	MOV	W0, W10
0x0A86	0x07FDE5  	RCALL	_criatividade
;q222.c,263 :: 		}
L_main32:
;q222.c,264 :: 		}
L_main31:
;q222.c,265 :: 		}
L_main27:
;q222.c,267 :: 		if (cont_int == 3){
0x0A88	0x804060  	MOV	_cont_int, W0
0x0A8A	0xE10063  	CP	W0, #3
0x0A8C	0x3A0029  	BRA NZ	L_main33
L__main71:
;q222.c,268 :: 		frequencia_aux = floor(frequencia/1000000);
0x0A8E	0x242402  	MOV	#16960, W2
0x0A90	0x2000F3  	MOV	#15, W3
0x0A92	0x804000  	MOV	_frequencia, W0
0x0A94	0x804011  	MOV	_frequencia+2, W1
0x0A96	0xEB0200  	CLR	W4
0x0A98	0x07FB71  	RCALL	__Divide_32x32
0x0A9A	0x07FCCE  	RCALL	__Long2Float
0x0A9C	0xBE0500  	MOV.D	W0, W10
0x0A9E	0x07FE7E  	RCALL	_floor
0x0AA0	0x07FDA2  	RCALL	__Float2Longword
0x0AA2	0x884160  	MOV	W0, _frequencia_aux
0x0AA4	0x884171  	MOV	W1, _frequencia_aux+2
;q222.c,269 :: 		if ((frequencia_aux >= 0)&&(frequencia_aux < 10)){
0x0AA6	0xE10060  	CP	W0, #0
0x0AA8	0xE18860  	CPB	W1, #0
0x0AAA	0x390012  	BRA LTU	L__main46
L__main72:
0x0AAC	0x804160  	MOV	_frequencia_aux, W0
0x0AAE	0x804171  	MOV	_frequencia_aux+2, W1
0x0AB0	0xE1006A  	CP	W0, #10
0x0AB2	0xE18860  	CPB	W1, #0
0x0AB4	0x31000D  	BRA GEU	L__main45
L__main73:
L__main38:
;q222.c,270 :: 		LongToStr((frequencia_aux), txt);
0x0AB6	0x20855C  	MOV	#lo_addr(_txt), W12
0x0AB8	0x80416A  	MOV	_frequencia_aux, W10
0x0ABA	0x80417B  	MOV	_frequencia_aux+2, W11
0x0ABC	0x07FED3  	RCALL	_LongToStr
;q222.c,271 :: 		Lcd_Out(1,1,txt);
0x0ABE	0x20855C  	MOV	#lo_addr(_txt), W12
0x0AC0	0x20001B  	MOV	#1, W11
0x0AC2	0x20001A  	MOV	#1, W10
0x0AC4	0x07FEA2  	RCALL	_Lcd_Out
;q222.c,272 :: 		Lcd_Out(2,11,"MHz ");
0x0AC6	0x20845C  	MOV	#lo_addr(?lstr7_q222), W12
0x0AC8	0x2000BB  	MOV	#11, W11
0x0ACA	0x20002A  	MOV	#2, W10
0x0ACC	0x07FE9E  	RCALL	_Lcd_Out
;q222.c,273 :: 		}else{
0x0ACE	0x370008  	BRA	L_main37
;q222.c,269 :: 		if ((frequencia_aux >= 0)&&(frequencia_aux < 10)){
L__main46:
L__main45:
;q222.c,274 :: 		Lcd_Out(1,1,"          ");
0x0AD0	0x2084AC  	MOV	#lo_addr(?lstr8_q222), W12
0x0AD2	0x20001B  	MOV	#1, W11
0x0AD4	0x20001A  	MOV	#1, W10
0x0AD6	0x07FE99  	RCALL	_Lcd_Out
;q222.c,275 :: 		Lcd_Out(2,11,"erro");
0x0AD8	0x2080EC  	MOV	#lo_addr(?lstr9_q222), W12
0x0ADA	0x2000BB  	MOV	#11, W11
0x0ADC	0x20002A  	MOV	#2, W10
0x0ADE	0x07FE95  	RCALL	_Lcd_Out
;q222.c,276 :: 		}
L_main37:
;q222.c,277 :: 		}
L_main33:
;q222.c,278 :: 		}
0x0AE0	0x37FF5C  	BRA	L_main19
;q222.c,279 :: 		}
L_end_main:
0x0AE2	0x78064F  	POP	W12
0x0AE4	0x7805CF  	POP	W11
0x0AE6	0x78054F  	POP	W10
L__main_end_loop:
0x0AE8	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_Lcd_Init:
0x057C	0xFA0000  	LNK	#0
;__Lib_Lcd.c,105 :: 		
;__Lib_Lcd.c,107 :: 		
0x057E	0x07FFC2  	RCALL	_Delay_8ms
0x0580	0x07FFC1  	RCALL	_Delay_8ms
;__Lib_Lcd.c,109 :: 		
0x0582	0xA982D8  	BCLR	LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,110 :: 		
0x0584	0xA9A2D8  	BCLR	LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,111 :: 		
0x0586	0xA962D8  	BCLR	LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,112 :: 		
0x0588	0xA942D8  	BCLR	LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,113 :: 		
0x058A	0xA922D8  	BCLR	LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,114 :: 		
0x058C	0xA902D8  	BCLR	LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,116 :: 		
0x058E	0xA982DC  	BCLR	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,117 :: 		
0x0590	0xA9A2DC  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,118 :: 		
0x0592	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,119 :: 		
0x0594	0xA922DC  	BCLR	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,120 :: 		
0x0596	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,121 :: 		
0x0598	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,130 :: 		
0x059A	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,131 :: 		
0x059C	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,132 :: 		
0x059E	0x07FFB8  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,133 :: 		
0x05A0	0x07FFA6  	RCALL	_Delay_5500us
;__Lib_Lcd.c,136 :: 		
0x05A2	0x07FFB6  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,137 :: 		
0x05A4	0x07FFA4  	RCALL	_Delay_5500us
;__Lib_Lcd.c,140 :: 		
0x05A6	0x07FFB4  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,141 :: 		
0x05A8	0x07FFA2  	RCALL	_Delay_5500us
;__Lib_Lcd.c,144 :: 		
0x05AA	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,145 :: 		
0x05AC	0x07FFB1  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,146 :: 		
0x05AE	0x07FF9F  	RCALL	_Delay_5500us
;__Lib_Lcd.c,149 :: 		
0x05B0	0x07FFAF  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,151 :: 		
0x05B2	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,152 :: 		
0x05B4	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,153 :: 		
0x05B6	0x07FFAC  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,154 :: 		
0x05B8	0x07FF9A  	RCALL	_Delay_5500us
;__Lib_Lcd.c,157 :: 		
0x05BA	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,158 :: 		
0x05BC	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,159 :: 		
0x05BE	0x07FFA8  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,161 :: 		
0x05C0	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,162 :: 		
0x05C2	0x07FFA6  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,163 :: 		
0x05C4	0x07FF94  	RCALL	_Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x05C6	0x07FFA4  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,168 :: 		
0x05C8	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,169 :: 		
0x05CA	0x07FFA2  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,170 :: 		
0x05CC	0x07FF90  	RCALL	_Delay_5500us
;__Lib_Lcd.c,173 :: 		
0x05CE	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,174 :: 		
0x05D0	0x07FF9F  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,176 :: 		
0x05D2	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,177 :: 		
0x05D4	0xA822DC  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,178 :: 		
0x05D6	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,179 :: 		
0x05D8	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,180 :: 		
0x05DA	0x07FF9A  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,181 :: 		
0x05DC	0x07FF88  	RCALL	_Delay_5500us
;__Lib_Lcd.c,183 :: 		
0x05DE	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x05E0	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,184 :: 		
L_end_Lcd_Init:
0x05E2	0xFA8000  	ULNK
0x05E4	0x060000  	RETURN
; end of _Lcd_Init
_Delay_8ms:
;__Lib_Delays.c,614 :: 		void Delay_8ms()
;__Lib_Delays.c,616 :: 		Delay_ms(8);
0x0504	0x2A6AA7  	MOV	#42666, W7
L_Delay_8ms29:
0x0506	0xED200E  	DEC	W7
0x0508	0x3AFFFE  	BRA NZ	L_Delay_8ms29
0x050A	0x000000  	NOP
0x050C	0x000000  	NOP
;__Lib_Delays.c,617 :: 		}
L_end_Delay_8ms:
0x050E	0x060000  	RETURN
; end of _Delay_8ms
__Lib_Lcd_Strobe:
0x0510	0xFA0000  	LNK	#0
;__Lib_Lcd.c,26 :: 		
;__Lib_Lcd.c,27 :: 		
0x0512	0xA882DC  	BSET	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,28 :: 		
0x0514	0x07FE2E  	RCALL	_Delay_1us
;__Lib_Lcd.c,29 :: 		
0x0516	0xA982DC  	BCLR	LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,30 :: 		
0x0518	0x07FE2C  	RCALL	_Delay_1us
;__Lib_Lcd.c,31 :: 		
L_end_Strobe:
0x051A	0xFA8000  	ULNK
0x051C	0x060000  	RETURN
; end of __Lib_Lcd_Strobe
_Delay_1us:
;__Lib_Delays.c,380 :: 		void Delay_1us()
;__Lib_Delays.c,382 :: 		Delay_us(1);
0x0172	0x200057  	MOV	#5, W7
L_Delay_1us11:
0x0174	0xED200E  	DEC	W7
0x0176	0x3AFFFE  	BRA NZ	L_Delay_1us11
0x0178	0x000000  	NOP
;__Lib_Delays.c,383 :: 		}
L_end_Delay_1us:
0x017A	0x060000  	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,536 :: 		void Delay_5500us()
;__Lib_Delays.c,538 :: 		Delay_us(5500);
0x04EE	0x272957  	MOV	#29333, W7
L_Delay_5500us23:
0x04F0	0xED200E  	DEC	W7
0x04F2	0x3AFFFE  	BRA NZ	L_Delay_5500us23
0x04F4	0x000000  	NOP
;__Lib_Delays.c,539 :: 		}
L_end_Delay_5500us:
0x04F6	0x060000  	RETURN
; end of _Delay_5500us
_Lcd_Cmd:
0x0730	0xFA0000  	LNK	#0
;__Lib_Lcd.c,38 :: 		
;__Lib_Lcd.c,40 :: 		
; loc_word start address is: 2 (W1)
0x0732	0xFB808A  	ZE	W10, W1
;__Lib_Lcd.c,42 :: 		
0x0734	0xAEE002  	BTSS	W1, #7
0x0736	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
0x0738	0xAFE002  	BTSC	W1, #7
0x073A	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,43 :: 		
0x073C	0xAEC002  	BTSS	W1, #6
0x073E	0xA922DC  	BCLR	LCD_D6, BitPos(LCD_D6+0)
0x0740	0xAFC002  	BTSC	W1, #6
0x0742	0xA822DC  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,44 :: 		
0x0744	0xAEA002  	BTSS	W1, #5
0x0746	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
0x0748	0xAFA002  	BTSC	W1, #5
0x074A	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,45 :: 		
0x074C	0xAE8002  	BTSS	W1, #4
0x074E	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
0x0750	0xAF8002  	BTSC	W1, #4
0x0752	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,47 :: 		
0x0754	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0756	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x0758	0xA8A2DC  	BSET	LCD_RS, BitPos(LCD_RS+0)
0x075A	0xA70010  	BTSC	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x075C	0xA9A2DC  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,49 :: 		
0x075E	0x07FED8  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,51 :: 		
0x0760	0xAE6002  	BTSS	W1, #3
0x0762	0xA902DC  	BCLR	LCD_D7, BitPos(LCD_D7+0)
0x0764	0xAF6002  	BTSC	W1, #3
0x0766	0xA802DC  	BSET	LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,52 :: 		
0x0768	0xAE4002  	BTSS	W1, #2
0x076A	0xA922DC  	BCLR	LCD_D6, BitPos(LCD_D6+0)
0x076C	0xAF4002  	BTSC	W1, #2
0x076E	0xA822DC  	BSET	LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,53 :: 		
0x0770	0xAE2002  	BTSS	W1, #1
0x0772	0xA942DC  	BCLR	LCD_D5, BitPos(LCD_D5+0)
0x0774	0xAF2002  	BTSC	W1, #1
0x0776	0xA842DC  	BSET	LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,54 :: 		
0x0778	0xAE0002  	BTSS	W1, #0
0x077A	0xA962DC  	BCLR	LCD_D4, BitPos(LCD_D4+0)
0x077C	0xAF0002  	BTSC	W1, #0
0x077E	0xA862DC  	BSET	LCD_D4, BitPos(LCD_D4+0)
; loc_word end address is: 2 (W1)
;__Lib_Lcd.c,56 :: 		
0x0780	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0782	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x0784	0xA8A2DC  	BSET	LCD_RS, BitPos(LCD_RS+0)
0x0786	0xA70010  	BTSC	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x0788	0xA9A2DC  	BCLR	LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,58 :: 		
0x078A	0x07FEC2  	RCALL	__Lib_Lcd_Strobe
;__Lib_Lcd.c,60 :: 		
0x078C	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x078E	0xA60010  	BTSS	[W0], BitPos(__Lib_Lcd_cmd_status+0)
0x0790	0x370002  	BRA	L_Lcd_Cmd0
;__Lib_Lcd.c,61 :: 		
0x0792	0x07FEAD  	RCALL	_Delay_5500us
0x0794	0x370001  	BRA	L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,63 :: 		
0x0796	0x07FEB0  	RCALL	_Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,64 :: 		
L_end_Lcd_Cmd:
0x0798	0xFA8000  	ULNK
0x079A	0x060000  	RETURN
; end of _Lcd_Cmd
_Delay_50us:
;__Lib_Delays.c,458 :: 		void Delay_50us()
;__Lib_Delays.c,460 :: 		Delay_us(50);
0x04F8	0x2010A7  	MOV	#266, W7
L_Delay_50us17:
0x04FA	0xED200E  	DEC	W7
0x04FC	0x3AFFFE  	BRA NZ	L_Delay_50us17
0x04FE	0x000000  	NOP
0x0500	0x000000  	NOP
;__Lib_Delays.c,461 :: 		}
L_end_Delay_50us:
0x0502	0x060000  	RETURN
; end of _Delay_50us
_LongToStr:
0x0864	0xFA0000  	LNK	#0
;__Lib_Conversions.c,289 :: 		
;__Lib_Conversions.c,295 :: 		
0x0866	0x781F8A  	PUSH	W10
0x0868	0x781F8B  	PUSH	W11
; negative start address is: 0 (W0)
0x086A	0xEF2000  	CLR	W0
;__Lib_Conversions.c,296 :: 		
; inword start address is: 2 (W1)
0x086C	0x78008A  	MOV	W10, W1
0x086E	0x78010B  	MOV	W11, W2
;__Lib_Conversions.c,297 :: 		
0x0870	0xE15060  	CP	W10, #0
0x0872	0xE1D860  	CPB	W11, #0
0x0874	0x3D0004  	BRA GE	L__LongToStr114
L__LongToStr173:
; inword end address is: 2 (W1)
;__Lib_Conversions.c,298 :: 		
0x0876	0x200010  	MOV	#1, W0
;__Lib_Conversions.c,299 :: 		
; inword start address is: 2 (W1)
0x0878	0x1500E0  	SUBR	W10, #0, W1
0x087A	0x1D8160  	SUBBR	W11, #0, W2
; inword end address is: 2 (W1)
; negative end address is: 0 (W0)
;__Lib_Conversions.c,300 :: 		
0x087C	0x370000  	BRA	L_LongToStr63
L__LongToStr114:
;__Lib_Conversions.c,297 :: 		
;__Lib_Conversions.c,300 :: 		
L_LongToStr63:
;__Lib_Conversions.c,301 :: 		
; inword start address is: 2 (W1)
; negative start address is: 0 (W0)
0x087E	0x781F80  	PUSH	W0
0x0880	0x781F8C  	PUSH	W12
0x0882	0x780501  	MOV	W1, W10
0x0884	0x780582  	MOV	W2, W11
; inword end address is: 2 (W1)
0x0886	0x07FE4B  	RCALL	_LongWordToStr
0x0888	0x78064F  	POP	W12
0x088A	0x78004F  	POP	W0
;__Lib_Conversions.c,303 :: 		
; i start address is: 6 (W3)
0x088C	0x2000B3  	MOV	#11, W3
; negative end address is: 0 (W0)
; i end address is: 6 (W3)
0x088E	0x780100  	MOV	W0, W2
;__Lib_Conversions.c,304 :: 		
L_LongToStr64:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x0890	0xE11860  	CP	W3, #0
0x0892	0x360006  	BRA LEU	L_LongToStr65
L__LongToStr174:
;__Lib_Conversions.c,305 :: 		
0x0894	0x460083  	ADD	W12, W3, W1
0x0896	0x518061  	SUB	W3, #1, W0
0x0898	0x460000  	ADD	W12, W0, W0
0x089A	0x784890  	MOV.B	[W0], [W1]
;__Lib_Conversions.c,306 :: 		
0x089C	0xED2006  	DEC	W3
;__Lib_Conversions.c,307 :: 		
; i end address is: 6 (W3)
0x089E	0x37FFF8  	BRA	L_LongToStr64
L_LongToStr65:
;__Lib_Conversions.c,308 :: 		
0x08A0	0xB3C200  	MOV.B	#32, W0
0x08A2	0x784E00  	MOV.B	W0, [W12]
;__Lib_Conversions.c,309 :: 		
0x08A4	0xE20004  	CP0	W2
0x08A6	0x32000C  	BRA Z	L_LongToStr66
L__LongToStr175:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,310 :: 		
; i start address is: 4 (W2)
0x08A8	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Conversions.c,311 :: 		
L_LongToStr67:
; i start address is: 4 (W2)
0x08AA	0x460002  	ADD	W12, W2, W0
0x08AC	0x784090  	MOV.B	[W0], W1
0x08AE	0xB3C200  	MOV.B	#32, W0
0x08B0	0xE10C00  	CP.B	W1, W0
0x08B2	0x3A0002  	BRA NZ	L_LongToStr68
L__LongToStr176:
; i start address is: 4 (W2)
0x08B4	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x08B6	0x37FFF9  	BRA	L_LongToStr67
L_LongToStr68:
;__Lib_Conversions.c,312 :: 		
0x08B8	0x510061  	SUB	W2, #1, W0
; i end address is: 4 (W2)
;__Lib_Conversions.c,313 :: 		
0x08BA	0x460080  	ADD	W12, W0, W1
0x08BC	0xB3C2D0  	MOV.B	#45, W0
0x08BE	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,314 :: 		
L_LongToStr66:
;__Lib_Conversions.c,315 :: 		
L_end_LongToStr:
0x08C0	0x7805CF  	POP	W11
0x08C2	0x78054F  	POP	W10
0x08C4	0xFA8000  	ULNK
0x08C6	0x060000  	RETURN
; end of _LongToStr
_LongWordToStr:
0x051E	0xFA0002  	LNK	#2
;__Lib_Conversions.c,258 :: 		
;__Lib_Conversions.c,261 :: 		
; len start address is: 4 (W2)
0x0520	0xEF2004  	CLR	W2
; len end address is: 4 (W2)
L_LongWordToStr52:
; len start address is: 4 (W2)
0x0522	0xE1106A  	CP	W2, #10
0x0524	0x310005  	BRA GEU	L_LongWordToStr53
L__LongWordToStr167:
;__Lib_Conversions.c,262 :: 		
0x0526	0x460082  	ADD	W12, W2, W1
0x0528	0xB3C200  	MOV.B	#32, W0
0x052A	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,261 :: 		
0x052C	0xEC2004  	INC	W2
;__Lib_Conversions.c,262 :: 		
0x052E	0x37FFF9  	BRA	L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c,263 :: 		
0x0530	0x460082  	ADD	W12, W2, W1
0x0532	0xEF2000  	CLR	W0
0x0534	0x784880  	MOV.B	W0, [W1]
; len start address is: 8 (W4)
0x0536	0x510261  	SUB	W2, #1, W4
; len end address is: 4 (W2)
; len end address is: 8 (W4)
;__Lib_Conversions.c,265 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c,266 :: 		
; len start address is: 8 (W4)
0x0538	0x460004  	ADD	W12, W4, W0
0x053A	0x980700  	MOV	W0, [W14+0]
0x053C	0x781F84  	PUSH	W4
0x053E	0x781F8C  	PUSH	W12
0x0540	0xBE9F8A  	PUSH.D	W10
0x0542	0x2000A2  	MOV	#10, W2
0x0544	0x200003  	MOV	#0, W3
0x0546	0xBE000A  	MOV.D	W10, W0
0x0548	0xEB0200  	CLR	W4
0x054A	0x07FEF7  	RCALL	__Modulus_32x32
0x054C	0xBE054F  	POP.D	W10
0x054E	0x200302  	MOV	#48, W2
0x0550	0x200003  	MOV	#0, W3
0x0552	0x400102  	ADD	W0, W2, W2
0x0554	0x90000E  	MOV	[W14+0], W0
0x0556	0x784802  	MOV.B	W2, [W0]
;__Lib_Conversions.c,267 :: 		
0x0558	0xBE9F8A  	PUSH.D	W10
0x055A	0x2000A2  	MOV	#10, W2
0x055C	0x200003  	MOV	#0, W3
0x055E	0xBE000A  	MOV.D	W10, W0
0x0560	0xEB0200  	CLR	W4
0x0562	0x07FE0C  	RCALL	__Divide_32x32
0x0564	0xBE054F  	POP.D	W10
0x0566	0x78064F  	POP	W12
0x0568	0x78024F  	POP	W4
0x056A	0xBE0500  	MOV.D	W0, W10
;__Lib_Conversions.c,268 :: 		
0x056C	0xE10060  	CP	W0, #0
0x056E	0xE18860  	CPB	W1, #0
0x0570	0x3A0001  	BRA NZ	L_LongWordToStr57
L__LongWordToStr168:
; len end address is: 8 (W4)
;__Lib_Conversions.c,269 :: 		
0x0572	0x370002  	BRA	L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c,270 :: 		
; len start address is: 8 (W4)
0x0574	0xED2008  	DEC	W4
;__Lib_Conversions.c,271 :: 		
; len end address is: 8 (W4)
0x0576	0x37FFE0  	BRA	L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c,272 :: 		
L_end_LongWordToStr:
0x0578	0xFA8000  	ULNK
0x057A	0x060000  	RETURN
; end of _LongWordToStr
__Modulus_32x32:
0x033A	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x033C	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x033E	0x00000004038E  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x0342	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x0344	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x0346	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x0348	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x034A	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x034C	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x034E	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x0350	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x0352	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x0354	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x0356	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x0358	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x035A	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x035C	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x035E	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x0360	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x0362	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x0364	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x0366	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x0368	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x036A	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x036C	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x036E	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x0370	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x0372	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x0374	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x0376	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x0378	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x037A	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x037C	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x037E	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x0380	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x0382	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x0384	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x0386	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x0388	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x038A	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x038C	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x038E	0xFA8000  	ULNK
0x0390	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x017C	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x017E	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x0180	0x0000000401CA  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x0184	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x0186	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x0188	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x018A	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x018C	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x018E	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x0190	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x0192	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x0194	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x0196	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x0198	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x019A	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x019C	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x019E	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x01A0	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x01A2	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x01A4	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x01A6	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x01A8	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x01AA	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x01AC	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x01AE	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x01B0	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x01B2	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x01B4	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x01B6	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x01B8	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x01BA	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x01BC	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x01BE	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x01C0	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x01C2	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x01C4	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x01C6	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x01C8	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x01CA	0xFA8000  	ULNK
0x01CC	0x060000  	RETURN
; end of __Divide_32x32
_Lcd_Out:
0x080A	0xFA0000  	LNK	#0
;__Lib_Lcd.c,187 :: 		
;__Lib_Lcd.c,190 :: 		
0x080C	0x781F8A  	PUSH	W10
0x080E	0x37000A  	BRA	L_Lcd_Out11
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out13:
0x0810	0x20080A  	MOV	#128, W10
0x0812	0x370011  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out14:
0x0814	0x200C0A  	MOV	#192, W10
0x0816	0x37000F  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,193 :: 		
L_Lcd_Out15:
0x0818	0x20094A  	MOV	#148, W10
0x081A	0x37000D  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,194 :: 		
L_Lcd_Out16:
0x081C	0x200D4A  	MOV	#212, W10
0x081E	0x37000B  	BRA	L_Lcd_Out12
;__Lib_Lcd.c,195 :: 		
L_Lcd_Out17:
0x0820	0x20080A  	MOV	#128, W10
;__Lib_Lcd.c,196 :: 		
0x0822	0x370009  	BRA	L_Lcd_Out12
L_Lcd_Out11:
0x0824	0xE15061  	CP	W10, #1
0x0826	0x32FFF4  	BRA Z	L_Lcd_Out13
L__Lcd_Out32:
0x0828	0xE15062  	CP	W10, #2
0x082A	0x32FFF4  	BRA Z	L_Lcd_Out14
L__Lcd_Out33:
0x082C	0xE15063  	CP	W10, #3
0x082E	0x32FFF4  	BRA Z	L_Lcd_Out15
L__Lcd_Out34:
0x0830	0xE15064  	CP	W10, #4
0x0832	0x32FFF4  	BRA Z	L_Lcd_Out16
L__Lcd_Out35:
0x0834	0x37FFF5  	BRA	L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,199 :: 		
0x0836	0x558061  	SUB	W11, #1, W0
0x0838	0x450000  	ADD	W10, W0, W0
0x083A	0x780500  	MOV	W0, W10
;__Lib_Lcd.c,201 :: 		
0x083C	0x784500  	MOV.B	W0, W10
0x083E	0x07FF78  	RCALL	_Lcd_Cmd
;__Lib_Lcd.c,202 :: 		
0x0840	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x0842	0xA10010  	BCLR	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,203 :: 		
; i start address is: 4 (W2)
0x0844	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Lcd.c,204 :: 		
L_Lcd_Out18:
; i start address is: 4 (W2)
0x0846	0x460002  	ADD	W12, W2, W0
0x0848	0xE00410  	CP0.B	[W0]
0x084A	0x320007  	BRA Z	L_Lcd_Out19
L__Lcd_Out36:
;__Lib_Lcd.c,205 :: 		
0x084C	0x460002  	ADD	W12, W2, W0
0x084E	0x781F8A  	PUSH	W10
0x0850	0x784510  	MOV.B	[W0], W10
0x0852	0x07FDA4  	RCALL	_Lcd_Chr_CP
0x0854	0x78054F  	POP	W10
0x0856	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x0858	0x37FFF6  	BRA	L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,206 :: 		
0x085A	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x085C	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,207 :: 		
L_end_Lcd_Out:
0x085E	0x78054F  	POP	W10
0x0860	0xFA8000  	ULNK
0x0862	0x060000  	RETURN
; end of _Lcd_Out
_Lcd_Chr_CP:
0x039C	0xFA0000  	LNK	#0
;__Lib_Lcd.c,67 :: 		
;__Lib_Lcd.c,69 :: 		
0x039E	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x03A0	0xA10010  	BCLR	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,70 :: 		
0x03A2	0x0701C6  	RCALL	_Lcd_Cmd
;__Lib_Lcd.c,71 :: 		
0x03A4	0x208660  	MOV	#lo_addr(__Lib_Lcd_cmd_status), W0
0x03A6	0xA00010  	BSET	[W0], BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,72 :: 		
L_end_Lcd_Chr_CP:
0x03A8	0xFA8000  	ULNK
0x03AA	0x060000  	RETURN
; end of _Lcd_Chr_CP
_floor:
0x079C	0xFA0000  	LNK	#0
;__Lib_CMath.c,39 :: 		
;__Lib_CMath.c,43 :: 		
0x079E	0xDE58C7  	LSR	W11, #7, W1
0x07A0	0xEB0100  	CLR	W2
0x07A2	0x200FF0  	MOV	#255, W0
0x07A4	0x608080  	AND	W1, W0, W1
;__Lib_CMath.c,44 :: 		
0x07A6	0x2007F0  	MOV	#127, W0
0x07A8	0x508000  	SUB	W1, W0, W0
; expon start address is: 2 (W1)
0x07AA	0x780080  	MOV	W0, W1
;__Lib_CMath.c,45 :: 		
0x07AC	0xE10060  	CP	W0, #0
0x07AE	0x3D0010  	BRA GE	L_floor1
L__floor75:
; expon end address is: 2 (W1)
;__Lib_CMath.c,46 :: 		
0x07B0	0xEF2004  	CLR	W2
0x07B2	0xEF2006  	CLR	W3
0x07B4	0xBE000A  	MOV.D	W10, W0
0x07B6	0x07FDED  	RCALL	__Compare_Le_Fp
0x07B8	0xE00000  	CP0	W0
0x07BA	0xEF6000  	CLR.B	W0
0x07BC	0x3D0001  	BRA GE	L__floor76
0x07BE	0xEC6000  	INC.B	W0
L__floor76:
0x07C0	0xE24000  	CP0.B	W0
0x07C2	0x320003  	BRA Z	L_floor2
L__floor77:
;__Lib_CMath.c,47 :: 		
0x07C4	0x200000  	MOV	#0, W0
0x07C6	0x2BF801  	MOV	#49024, W1
0x07C8	0x37001E  	BRA	L_end_floor
L_floor2:
;__Lib_CMath.c,49 :: 		
0x07CA	0xEF2000  	CLR	W0
0x07CC	0xEF2002  	CLR	W1
0x07CE	0x37001B  	BRA	L_end_floor
L_floor1:
;__Lib_CMath.c,50 :: 		
; expon start address is: 2 (W1)
0x07D0	0xE10878  	CP	W1, #24
0x07D2	0x360002  	BRA LEU	L_floor4
L__floor78:
; expon end address is: 2 (W1)
;__Lib_CMath.c,51 :: 		
0x07D4	0xBE000A  	MOV.D	W10, W0
0x07D6	0x370017  	BRA	L_end_floor
L_floor4:
;__Lib_CMath.c,52 :: 		
0x07D8	0xBE9F8A  	PUSH.D	W10
0x07DA	0xBE000A  	MOV.D	W10, W0
0x07DC	0x07FDF1  	RCALL	__Float2Longint
0x07DE	0xEB8100  	SETM	W2
0x07E0	0x07FE2B  	RCALL	__Long2Float
0x07E2	0xBE054F  	POP.D	W10
; i start address is: 8 (W4)
0x07E4	0xBE0200  	MOV.D	W0, W4
;__Lib_CMath.c,54 :: 		
0x07E6	0xBE9F84  	PUSH.D	W4
0x07E8	0xBE010A  	MOV.D	W10, W2
0x07EA	0x07FDE0  	RCALL	__Compare_Ge_Fp
0x07EC	0xE00000  	CP0	W0
0x07EE	0xEF6000  	CLR.B	W0
0x07F0	0x340001  	BRA LE	L__floor79
0x07F2	0xEC6000  	INC.B	W0
L__floor79:
0x07F4	0xBE024F  	POP.D	W4
0x07F6	0xE24000  	CP0.B	W0
0x07F8	0x320005  	BRA Z	L_floor5
L__floor80:
;__Lib_CMath.c,55 :: 		
0x07FA	0x200002  	MOV	#0, W2
0x07FC	0x23F803  	MOV	#16256, W3
0x07FE	0xBE0004  	MOV.D	W4, W0
0x0800	0x07FDDA  	RCALL	__Sub_FP
; i end address is: 8 (W4)
0x0802	0x370001  	BRA	L_end_floor
L_floor5:
;__Lib_CMath.c,56 :: 		
; i start address is: 8 (W4)
0x0804	0xBE0004  	MOV.D	W4, W0
; i end address is: 8 (W4)
;__Lib_CMath.c,57 :: 		
L_end_floor:
0x0806	0xFA8000  	ULNK
0x0808	0x060000  	RETURN
; end of _floor
__Compare_Le_Fp:
0x0392	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x0394	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x0396	0x07FEB4  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x0398	0xFA8000  	ULNK
0x039A	0x060000  	RETURN
; end of __Compare_Le_Fp
__Compare_Fp:
0x0100	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x0102	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x0104	0x00000004016E  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x0108	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x010A	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x010C	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x010E	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x0110	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x0112	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x0114	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x0116	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x0118	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x011A	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x011C	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x011E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0120	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0122	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x0124	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x0126	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x0128	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x012A	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x012C	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x012E	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0130	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0132	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x0134	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x0136	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x0138	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x013A	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x013C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x013E	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0140	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0142	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x0144	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x0146	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x0148	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x014A	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x014C	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x014E	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0150	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0152	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x0154	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x0156	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x0158	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x015A	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x015C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x015E	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0160	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0162	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x0164	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x0166	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x0168	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x016A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x016C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x016E	0xFA8000  	ULNK
0x0170	0x060000  	RETURN
; end of __Compare_Fp
__Float2Longint:
0x03C0	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x03C2	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x03C4	0x000000040434  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x03C8	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x03CA	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x03CC	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x03CE	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x03D0	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x03D2	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x03D4	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x03D6	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x03D8	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x03DA	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x03DC	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x03DE	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x03E0	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x03E2	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x03E4	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x03E6	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x03E8	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x03EA	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x03EC	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x03EE	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x03F0	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x03F2	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x03F4	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x03F6	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x03F8	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x03FA	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x03FC	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x03FE	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x0400	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x0402	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x0404	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x0406	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x0408	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x040A	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x040C	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x040E	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x0410	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x0412	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x0414	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x0416	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x0418	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x041A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x041C	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x041E	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x0420	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x0422	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x0424	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x0426	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x0428	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x042A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x042C	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x042E	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x0430	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x0432	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x0434	0xFA8000  	ULNK
0x0436	0x060000  	RETURN
; end of __Float2Longint
__Long2Float:
0x0438	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x043A	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x043C	0x0000000404EA  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0440	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0442	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0444	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x0446	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x0448	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x044A	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x044C	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x044E	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0450	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0452	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x0454	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x0456	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x0458	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x045A	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x045C	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x045E	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0460	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x0462	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x0464	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x0466	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x0468	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x046A	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x046C	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x046E	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0470	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x0472	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x0474	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x0476	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x0478	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x047A	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x047C	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x047E	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0480	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x0482	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x0484	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x0486	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x0488	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x048A	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x048C	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x048E	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0490	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x0492	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x0494	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x0496	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x0498	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x049A	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x049C	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x049E	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x04A0	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x04A2	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x04A4	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x04A6	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x04A8	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x04AA	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x04AC	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x04AE	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x04B0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x04B2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x04B4	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x04B6	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x04B8	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x04BA	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x04BC	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x04BE	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x04C0	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x04C2	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x04C4	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x04C6	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x04C8	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x04CA	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x04CC	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x04CE	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x04D0	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x04D2	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x04D4	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x04D6	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x04D8	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x04DA	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x04DC	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x04DE	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x04E0	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x04E2	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x04E4	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x04E6	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x04E8	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x04EA	0xFA8000  	ULNK
0x04EC	0x060000  	RETURN
; end of __Long2Float
__Compare_Ge_Fp:
0x03AC	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x03AE	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x03B0	0x07FEA7  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x03B2	0xFA8000  	ULNK
0x03B4	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Sub_FP:
0x03B6	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x03B8	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.c,832 :: 		
0x03BA	0x07FF09  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x03BC	0xFA8000  	ULNK
0x03BE	0x060000  	RETURN
; end of __Sub_FP
__AddSub_FP:
0x01CE	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x01D0	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x01D2	0x000000040336  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x01D6	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,590 :: 		
0x01D8	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,591 :: 		
0x01DA	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,592 :: 		
0x01DC	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x01DE	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x01E0	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,595 :: 		
0x01E2	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x01E4	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,598 :: 		
0x01E6	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x01E8	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.c,600 :: 		
0x01EA	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x01EC	0xD00509  	SL	W9, W10
;__Lib_MathDouble.c,602 :: 		
0x01EE	0xD00603  	SL	W3, W12
;__Lib_MathDouble.c,603 :: 		
0x01F0	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,604 :: 		
0x01F2	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.c,605 :: 		
0x01F4	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x01F6	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x01F8	0x880039  	MOV	W9, W3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x01FA	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x01FC	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.c,612 :: 		
0x01FE	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x0200	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.c,614 :: 		
0x0202	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.c,615 :: 		
0x0204	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.c,616 :: 		
0x0206	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x0208	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.c,619 :: 		
0x020A	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x020C	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,621 :: 		
0x020E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x0210	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,624 :: 		
0x0212	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,625 :: 		
0x0214	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.c,626 :: 		
0x0216	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x0218	0x880006  	MOV	W6, W0
;__Lib_MathDouble.c,628 :: 		
0x021A	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,629 :: 		
0x021C	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.c,630 :: 		
0x021E	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.c,631 :: 		
0x0220	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x0222	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,634 :: 		
0x0224	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,635 :: 		
0x0226	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.c,636 :: 		
0x0228	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.c,637 :: 		
0x022A	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x022C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,640 :: 		
0x022E	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x0230	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.c,643 :: 		
0x0232	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.c,644 :: 		
0x0234	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x0236	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.c,646 :: 		
0x0238	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x023A	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.c,649 :: 		
0x023C	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x023E	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.c,651 :: 		
0x0240	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,652 :: 		
0x0242	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,653 :: 		
0x0244	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,654 :: 		
0x0246	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,655 :: 		
0x0248	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,656 :: 		
0x024A	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x024C	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,659 :: 		
0x024E	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x0250	0xE20016  	CP0	W11
;__Lib_MathDouble.c,662 :: 		
0x0252	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x0254	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,664 :: 		
0x0256	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,665 :: 		
0x0258	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,666 :: 		
0x025A	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.c,667 :: 		
0x025C	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,668 :: 		
0x025E	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x0260	0xE20016  	CP0	W11
;__Lib_MathDouble.c,671 :: 		
0x0262	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x0264	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,673 :: 		
0x0266	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,674 :: 		
0x0268	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,675 :: 		
0x026A	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x026C	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x026E	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.c,679 :: 		
0x0270	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x0272	0xEB0100  	CLR	W2
;__Lib_MathDouble.c,682 :: 		
0x0274	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x0276	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,685 :: 		
0x0278	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x027A	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x027C	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,690 :: 		
0x027E	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,691 :: 		
0x0280	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x0282	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,694 :: 		
0x0284	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x0286	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,696 :: 		
0x0288	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x028A	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x028C	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,701 :: 		
0x028E	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x0290	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,704 :: 		
0x0292	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x0294	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,706 :: 		
0x0296	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,707 :: 		
0x0298	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,708 :: 		
0x029A	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x029C	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,710 :: 		
0x029E	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x02A0	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,713 :: 		
0x02A2	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,714 :: 		
0x02A4	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x02A6	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,716 :: 		
0x02A8	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x02AA	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,718 :: 		
0x02AC	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x02AE	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x02B0	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x02B2	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,725 :: 		
0x02B4	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,726 :: 		
0x02B6	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,727 :: 		
0x02B8	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x02BA	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,730 :: 		
0x02BC	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,731 :: 		
0x02BE	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x02C0	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,734 :: 		
0x02C2	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,735 :: 		
0x02C4	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x02C6	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,737 :: 		
0x02C8	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,738 :: 		
0x02CA	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,739 :: 		
0x02CC	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x02CE	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,742 :: 		
0x02D0	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,743 :: 		
0x02D2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,744 :: 		
0x02D4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,745 :: 		
0x02D6	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,746 :: 		
0x02D8	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x02DA	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x02DC	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,750 :: 		
0x02DE	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,751 :: 		
0x02E0	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,752 :: 		
0x02E2	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x02E4	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,754 :: 		
0x02E6	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,755 :: 		
0x02E8	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,756 :: 		
0x02EA	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x02EC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,758 :: 		
0x02EE	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,759 :: 		
0x02F0	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x02F2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,761 :: 		
0x02F4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x02F6	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,764 :: 		
0x02F8	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,765 :: 		
0x02FA	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x02FC	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,767 :: 		
0x02FE	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,768 :: 		
0x0300	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,769 :: 		
0x0302	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,770 :: 		
0x0304	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x0306	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x0308	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,775 :: 		
0x030A	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x030C	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,778 :: 		
0x030E	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,779 :: 		
0x0310	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,780 :: 		
0x0312	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x0314	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,782 :: 		
0x0316	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x0318	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,785 :: 		
0x031A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x031C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,788 :: 		
0x031E	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x0320	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x0322	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x0324	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,794 :: 		
0x0326	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x0328	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x032A	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x032C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,800 :: 		
0x032E	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,801 :: 		
0x0330	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x0332	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,803 :: 		
0x0334	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x0336	0xFA8000  	ULNK
0x0338	0x060000  	RETURN
; end of __AddSub_FP
_criatividade:
;q222.c,88 :: 		void criatividade(int num){
;q222.c,89 :: 		switch(num){
0x0652	0x37005A  	BRA	L_criatividade7
;q222.c,90 :: 		case 0:
L_criatividade9:
;q222.c,91 :: 		LATBbits.LATB0 = 0;
0x0654	0xA902CA  	BCLR.B	LATBbits, #0
;q222.c,92 :: 		LATBbits.LATB1 = 0;
0x0656	0xA922CA  	BCLR.B	LATBbits, #1
;q222.c,93 :: 		LATBbits.LATB2 = 0;
0x0658	0xA942CA  	BCLR.B	LATBbits, #2
;q222.c,94 :: 		LATBbits.LATB3 = 0;
0x065A	0xA962CA  	BCLR.B	LATBbits, #3
;q222.c,95 :: 		LATBbits.LATB4 = 0;
0x065C	0xA982CA  	BCLR.B	LATBbits, #4
;q222.c,96 :: 		LATBbits.LATB5 = 0;
0x065E	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,97 :: 		LATBbits.LATB6 = 0;
0x0660	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,98 :: 		LATBbits.LATB7 = 0;
0x0662	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,99 :: 		break;
0x0664	0x370064  	BRA	L_criatividade8
;q222.c,100 :: 		case 1:
L_criatividade10:
;q222.c,101 :: 		LATBbits.LATB0 = 1;
0x0666	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,102 :: 		LATBbits.LATB1 = 0;
0x0668	0xA922CA  	BCLR.B	LATBbits, #1
;q222.c,103 :: 		LATBbits.LATB2 = 0;
0x066A	0xA942CA  	BCLR.B	LATBbits, #2
;q222.c,104 :: 		LATBbits.LATB3 = 0;
0x066C	0xA962CA  	BCLR.B	LATBbits, #3
;q222.c,105 :: 		LATBbits.LATB4 = 0;
0x066E	0xA982CA  	BCLR.B	LATBbits, #4
;q222.c,106 :: 		LATBbits.LATB5 = 0;
0x0670	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,107 :: 		LATBbits.LATB6 = 0;
0x0672	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,108 :: 		LATBbits.LATB7 = 0;
0x0674	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,109 :: 		break;
0x0676	0x37005B  	BRA	L_criatividade8
;q222.c,110 :: 		case 2:
L_criatividade11:
;q222.c,111 :: 		LATBbits.LATB0 = 1;
0x0678	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,112 :: 		LATBbits.LATB1 = 1;
0x067A	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,113 :: 		LATBbits.LATB2 = 0;
0x067C	0xA942CA  	BCLR.B	LATBbits, #2
;q222.c,114 :: 		LATBbits.LATB3 = 0;
0x067E	0xA962CA  	BCLR.B	LATBbits, #3
;q222.c,115 :: 		LATBbits.LATB4 = 0;
0x0680	0xA982CA  	BCLR.B	LATBbits, #4
;q222.c,116 :: 		LATBbits.LATB5 = 0;
0x0682	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,117 :: 		LATBbits.LATB6 = 0;
0x0684	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,118 :: 		LATBbits.LATB7 = 0;
0x0686	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,119 :: 		break;
0x0688	0x370052  	BRA	L_criatividade8
;q222.c,120 :: 		case 3:
L_criatividade12:
;q222.c,121 :: 		LATBbits.LATB0 = 1;
0x068A	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,122 :: 		LATBbits.LATB1 = 1;
0x068C	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,123 :: 		LATBbits.LATB2 = 1;
0x068E	0xA842CA  	BSET.B	LATBbits, #2
;q222.c,124 :: 		LATBbits.LATB3 = 0;
0x0690	0xA962CA  	BCLR.B	LATBbits, #3
;q222.c,125 :: 		LATBbits.LATB4 = 0;
0x0692	0xA982CA  	BCLR.B	LATBbits, #4
;q222.c,126 :: 		LATBbits.LATB5 = 0;
0x0694	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,127 :: 		LATBbits.LATB6 = 0;
0x0696	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,128 :: 		LATBbits.LATB7 = 0;
0x0698	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,129 :: 		break;
0x069A	0x370049  	BRA	L_criatividade8
;q222.c,130 :: 		case 4:
L_criatividade13:
;q222.c,131 :: 		LATBbits.LATB0 = 1;
0x069C	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,132 :: 		LATBbits.LATB1 = 1;
0x069E	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,133 :: 		LATBbits.LATB2 = 1;
0x06A0	0xA842CA  	BSET.B	LATBbits, #2
;q222.c,134 :: 		LATBbits.LATB3 = 1;
0x06A2	0xA862CA  	BSET.B	LATBbits, #3
;q222.c,135 :: 		LATBbits.LATB4 = 0;
0x06A4	0xA982CA  	BCLR.B	LATBbits, #4
;q222.c,136 :: 		LATBbits.LATB5 = 0;
0x06A6	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,137 :: 		LATBbits.LATB6 = 0;
0x06A8	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,138 :: 		LATBbits.LATB7 = 0;
0x06AA	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,139 :: 		break;
0x06AC	0x370040  	BRA	L_criatividade8
;q222.c,140 :: 		case 5:
L_criatividade14:
;q222.c,141 :: 		LATBbits.LATB0 = 1;
0x06AE	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,142 :: 		LATBbits.LATB1 = 1;
0x06B0	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,143 :: 		LATBbits.LATB2 = 1;
0x06B2	0xA842CA  	BSET.B	LATBbits, #2
;q222.c,144 :: 		LATBbits.LATB3 = 1;
0x06B4	0xA862CA  	BSET.B	LATBbits, #3
;q222.c,145 :: 		LATBbits.LATB4 = 1;
0x06B6	0xA882CA  	BSET.B	LATBbits, #4
;q222.c,146 :: 		LATBbits.LATB5 = 0;
0x06B8	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,147 :: 		LATBbits.LATB6 = 0;
0x06BA	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,148 :: 		LATBbits.LATB7 = 0;
0x06BC	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,149 :: 		break;
0x06BE	0x370037  	BRA	L_criatividade8
;q222.c,150 :: 		case 6:
L_criatividade15:
;q222.c,151 :: 		LATBbits.LATB0 = 1;
0x06C0	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,152 :: 		LATBbits.LATB1 = 1;
0x06C2	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,153 :: 		LATBbits.LATB2 = 1;
0x06C4	0xA842CA  	BSET.B	LATBbits, #2
;q222.c,154 :: 		LATBbits.LATB3 = 1;
0x06C6	0xA862CA  	BSET.B	LATBbits, #3
;q222.c,155 :: 		LATBbits.LATB4 = 1;
0x06C8	0xA882CA  	BSET.B	LATBbits, #4
;q222.c,156 :: 		LATBbits.LATB5 = 1;
0x06CA	0xA8A2CA  	BSET.B	LATBbits, #5
;q222.c,157 :: 		LATBbits.LATB6 = 0;
0x06CC	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,158 :: 		LATBbits.LATB7 = 0;
0x06CE	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,159 :: 		break;
0x06D0	0x37002E  	BRA	L_criatividade8
;q222.c,160 :: 		case 7:
L_criatividade16:
;q222.c,161 :: 		LATBbits.LATB0 = 1;
0x06D2	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,162 :: 		LATBbits.LATB1 = 1;
0x06D4	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,163 :: 		LATBbits.LATB2 = 1;
0x06D6	0xA842CA  	BSET.B	LATBbits, #2
;q222.c,164 :: 		LATBbits.LATB3 = 1;
0x06D8	0xA862CA  	BSET.B	LATBbits, #3
;q222.c,165 :: 		LATBbits.LATB4 = 1;
0x06DA	0xA882CA  	BSET.B	LATBbits, #4
;q222.c,166 :: 		LATBbits.LATB5 = 1;
0x06DC	0xA8A2CA  	BSET.B	LATBbits, #5
;q222.c,167 :: 		LATBbits.LATB6 = 1;
0x06DE	0xA8C2CA  	BSET.B	LATBbits, #6
;q222.c,168 :: 		LATBbits.LATB7 = 0;
0x06E0	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,169 :: 		break;
0x06E2	0x370025  	BRA	L_criatividade8
;q222.c,170 :: 		case 8:
L_criatividade17:
;q222.c,171 :: 		LATBbits.LATB0 = 1;
0x06E4	0xA802CA  	BSET.B	LATBbits, #0
;q222.c,172 :: 		LATBbits.LATB1 = 1;
0x06E6	0xA822CA  	BSET.B	LATBbits, #1
;q222.c,173 :: 		LATBbits.LATB2 = 1;
0x06E8	0xA842CA  	BSET.B	LATBbits, #2
;q222.c,174 :: 		LATBbits.LATB3 = 1;
0x06EA	0xA862CA  	BSET.B	LATBbits, #3
;q222.c,175 :: 		LATBbits.LATB4 = 1;
0x06EC	0xA882CA  	BSET.B	LATBbits, #4
;q222.c,176 :: 		LATBbits.LATB5 = 1;
0x06EE	0xA8A2CA  	BSET.B	LATBbits, #5
;q222.c,177 :: 		LATBbits.LATB6 = 1;
0x06F0	0xA8C2CA  	BSET.B	LATBbits, #6
;q222.c,178 :: 		LATBbits.LATB7 = 1;
0x06F2	0xA8E2CA  	BSET.B	LATBbits, #7
;q222.c,179 :: 		break;
0x06F4	0x37001C  	BRA	L_criatividade8
;q222.c,180 :: 		default:
L_criatividade18:
;q222.c,181 :: 		LATBbits.LATB0 = 0;
0x06F6	0xA902CA  	BCLR.B	LATBbits, #0
;q222.c,182 :: 		LATBbits.LATB1 = 0;
0x06F8	0xA922CA  	BCLR.B	LATBbits, #1
;q222.c,183 :: 		LATBbits.LATB2 = 0;
0x06FA	0xA942CA  	BCLR.B	LATBbits, #2
;q222.c,184 :: 		LATBbits.LATB3 = 0;
0x06FC	0xA962CA  	BCLR.B	LATBbits, #3
;q222.c,185 :: 		LATBbits.LATB4 = 0;
0x06FE	0xA982CA  	BCLR.B	LATBbits, #4
;q222.c,186 :: 		LATBbits.LATB5 = 0;
0x0700	0xA9A2CA  	BCLR.B	LATBbits, #5
;q222.c,187 :: 		LATBbits.LATB6 = 0;
0x0702	0xA9C2CA  	BCLR.B	LATBbits, #6
;q222.c,188 :: 		LATBbits.LATB7 = 0;
0x0704	0xA9E2CA  	BCLR.B	LATBbits, #7
;q222.c,189 :: 		break;
0x0706	0x370013  	BRA	L_criatividade8
;q222.c,190 :: 		}
L_criatividade7:
0x0708	0xE15060  	CP	W10, #0
0x070A	0x32FFA4  	BRA Z	L_criatividade9
L__criatividade53:
0x070C	0xE15061  	CP	W10, #1
0x070E	0x32FFAB  	BRA Z	L_criatividade10
L__criatividade54:
0x0710	0xE15062  	CP	W10, #2
0x0712	0x32FFB2  	BRA Z	L_criatividade11
L__criatividade55:
0x0714	0xE15063  	CP	W10, #3
0x0716	0x32FFB9  	BRA Z	L_criatividade12
L__criatividade56:
0x0718	0xE15064  	CP	W10, #4
0x071A	0x32FFC0  	BRA Z	L_criatividade13
L__criatividade57:
0x071C	0xE15065  	CP	W10, #5
0x071E	0x32FFC7  	BRA Z	L_criatividade14
L__criatividade58:
0x0720	0xE15066  	CP	W10, #6
0x0722	0x32FFCE  	BRA Z	L_criatividade15
L__criatividade59:
0x0724	0xE15067  	CP	W10, #7
0x0726	0x32FFD5  	BRA Z	L_criatividade16
L__criatividade60:
0x0728	0xE15068  	CP	W10, #8
0x072A	0x32FFDC  	BRA Z	L_criatividade17
L__criatividade61:
0x072C	0x37FFE4  	BRA	L_criatividade18
L_criatividade8:
;q222.c,191 :: 		}
L_end_criatividade:
0x072E	0x060000  	RETURN
; end of _criatividade
__Float2Longword:
0x05E6	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,387 :: 		
;__Lib_MathDouble.c,389 :: 		
0x05E8	0x070002  	RCALL	Float2Longword_fixunssfsi
;__Lib_MathDouble.c,390 :: 		
0x05EA	0x00000004064E  	GOTO	the_end__Float2Longword
;__Lib_MathDouble.c,393 :: 		
Float2Longword_fixunssfsi:
;__Lib_MathDouble.c,394 :: 		
0x05EE	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,395 :: 		
0x05F0	0x070019  	RCALL	Float2Longword_funpack
;__Lib_MathDouble.c,396 :: 		
0x05F2	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,397 :: 		
0x05F4	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,398 :: 		
0x05F6	0xA3F803  	BTST.Z	W3, #15
;__Lib_MathDouble.c,399 :: 		
0x05F8	0x3A0013  	BRA NZ	Float2Longword_returnzero
;__Lib_MathDouble.c,400 :: 		
0x05FA	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,401 :: 		
0x05FC	0x320010  	BRA Z	Float2Longword_exit
;__Lib_MathDouble.c,402 :: 		
0x05FE	0x350009  	BRA LT	Float2Longword_shiftright
;__Lib_MathDouble.c,403 :: 		
0x0600	0xE12869  	CP	W5, #9
;__Lib_MathDouble.c,404 :: 		
0x0602	0x350002  	BRA LT	Float2Longword_shiftleft
;__Lib_MathDouble.c,405 :: 		
0x0604	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,406 :: 		
0x0606	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,407 :: 		
Float2Longword_shiftleft:
;__Lib_MathDouble.c,408 :: 		
0x0608	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,409 :: 		
0x060A	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,410 :: 		
0x060C	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,411 :: 		
0x060E	0x3AFFFC  	BRA NZ	Float2Longword_shiftleft
;__Lib_MathDouble.c,412 :: 		
0x0610	0x060000  	RETURN
;__Lib_MathDouble.c,413 :: 		
Float2Longword_shiftright:
;__Lib_MathDouble.c,414 :: 		
0x0612	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,415 :: 		
0x0614	0x350005  	BRA LT	Float2Longword_returnzero
;__Lib_MathDouble.c,416 :: 		
Float2Longword_shiftrightloop:
;__Lib_MathDouble.c,417 :: 		
0x0616	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,418 :: 		
0x0618	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,419 :: 		
0x061A	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,420 :: 		
0x061C	0x3AFFFC  	BRA NZ	Float2Longword_shiftrightloop
;__Lib_MathDouble.c,421 :: 		
Float2Longword_exit:
;__Lib_MathDouble.c,422 :: 		
0x061E	0x060000  	RETURN
;__Lib_MathDouble.c,423 :: 		
Float2Longword_returnzero:
;__Lib_MathDouble.c,424 :: 		
0x0620	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,425 :: 		
0x0622	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,426 :: 		
Float2Longword_funpack:
;__Lib_MathDouble.c,427 :: 		
0x0624	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,428 :: 		
0x0626	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,429 :: 		
0x0628	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,430 :: 		
0x062A	0x320008  	BRA Z	Float2Longword_zeroorsub
;__Lib_MathDouble.c,431 :: 		
0x062C	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,432 :: 		
0x062E	0x320002  	BRA Z	Float2Longword_nanorinf
;__Lib_MathDouble.c,433 :: 		
Float2Longword_finitereturn:
;__Lib_MathDouble.c,434 :: 		
0x0630	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,435 :: 		
0x0632	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,436 :: 		
Float2Longword_nanorinf:
;__Lib_MathDouble.c,437 :: 		
0x0634	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,438 :: 		
0x0636	0x320001  	BRA Z	Float2Longword_infinite
;__Lib_MathDouble.c,439 :: 		
0x0638	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,440 :: 		
Float2Longword_infinite:
;__Lib_MathDouble.c,441 :: 		
0x063A	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,442 :: 		
Float2Longword_zeroorsub:
;__Lib_MathDouble.c,443 :: 		
0x063C	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,444 :: 		
0x063E	0x3A0002  	BRA NZ	Float2Longword_subnormal
;__Lib_MathDouble.c,445 :: 		
0x0640	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,446 :: 		
Float2Longword_normalize:
;__Lib_MathDouble.c,447 :: 		
0x0642	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,448 :: 		
Float2Longword_subnormal:
;__Lib_MathDouble.c,449 :: 		
0x0644	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,450 :: 		
0x0646	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,451 :: 		
0x0648	0x3BFFFC  	BRA NN	Float2Longword_normalize
;__Lib_MathDouble.c,452 :: 		
0x064A	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,453 :: 		
0x064C	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,455 :: 		
the_end__Float2Longword:
;__Lib_MathDouble.c,457 :: 		
L_end__Float2Longword:
0x064E	0xFA8000  	ULNK
0x0650	0x060000  	RETURN
; end of __Float2Longword
0x0B7C	0x20800A  	MOV	#2048, W10
0x0B7E	0x20000B  	MOV	#0, W11
0x0B80	0x090034  	REPEAT	#52
0x0B82	0x781D0B  	MOV	W11, [W10++]
0x0B84	0x060000  	RETURN
0x0B86	0x208001  	MOV	#lo_addr(_frequencia), W1
0x0B88	0x28B520  	MOV	#35666, W0
0x0B8A	0x090013  	REPEAT	#19
0x0B8C	0x7818B0  	MOV	[W0++], [W1++]
0x0B8E	0x7858B0  	MOV.B	[W0++], [W1++]
0x0B90	0x2082A1  	MOV	#lo_addr(_flag_c), W1
0x0B92	0x28B260  	MOV	#35622, W0
0x0B94	0x090014  	REPEAT	#20
0x0B96	0x7818B0  	MOV	[W0++], [W1++]
0x0B98	0x7858B0  	MOV.B	[W0++], [W1++]
0x0B9A	0x060000  	RETURN
_INT2_Int:
0x0AEA	0xF80034  	PUSH	PSVPAG
0x0AEC	0xF80036  	PUSH	RCOUNT
0x0AEE	0x781F80  	PUSH	W0
0x0AF0	0x200020  	MOV	#2, W0
0x0AF2	0x09000C  	REPEAT	#12
0x0AF4	0x781FB0  	PUSH	[W0++]
;q222.c,57 :: 		void INT2_Int() iv IVT_ADDR_INT2INTERRUPT{
;q222.c,58 :: 		Delay_ms(100);
0x0AF6	0x200098  	MOV	#9, W8
0x0AF8	0x223577  	MOV	#9047, W7
L_INT2_Int4:
0x0AFA	0xED200E  	DEC	W7
0x0AFC	0x3AFFFE  	BRA NZ	L_INT2_Int4
0x0AFE	0xED2010  	DEC	W8
0x0B00	0x3AFFFC  	BRA NZ	L_INT2_Int4
;q222.c,60 :: 		cont_int++;    // a cada vez que a interrupcao 2 e ativada cont_int incrementa 1
0x0B02	0x200011  	MOV	#1, W1
0x0B04	0x2080C0  	MOV	#lo_addr(_cont_int), W0
0x0B06	0x408810  	ADD	W1, [W0], [W0]
;q222.c,61 :: 		if (cont_int > 3){
0x0B08	0x804060  	MOV	_cont_int, W0
0x0B0A	0xE10063  	CP	W0, #3
0x0B0C	0x340002  	BRA LE	L_INT2_Int6
L__INT2_Int50:
;q222.c,62 :: 		cont_int = 1;
0x0B0E	0x200010  	MOV	#1, W0
0x0B10	0x884060  	MOV	W0, _cont_int
;q222.c,63 :: 		}
L_INT2_Int6:
;q222.c,64 :: 		IFS1bits.INT2IF = 0; //interrupcao externa 2 e desativada
0x0B12	0xA9E086  	BCLR.B	IFS1bits, #7
;q222.c,65 :: 		TMR2 = 0;
0x0B14	0xEF2106  	CLR	TMR2
;q222.c,66 :: 		TMR3 = 0;
0x0B16	0xEF210A  	CLR	TMR3
;q222.c,67 :: 		}
L_end_INT2_Int:
0x0B18	0x2001A0  	MOV	#26, W0
0x0B1A	0x09000C  	REPEAT	#12
0x0B1C	0x78104F  	POP	[W0--]
0x0B1E	0x78004F  	POP	W0
0x0B20	0xF90036  	POP	RCOUNT
0x0B22	0xF90034  	POP	PSVPAG
0x0B24	0x064000  	RETFIE
; end of _INT2_Int
_janela_de_tempo:
0x08C8	0xF80034  	PUSH	PSVPAG
0x08CA	0xF80036  	PUSH	RCOUNT
0x08CC	0x781F80  	PUSH	W0
0x08CE	0x200020  	MOV	#2, W0
0x08D0	0x09000C  	REPEAT	#12
0x08D2	0x781FB0  	PUSH	[W0++]
;q222.c,71 :: 		void janela_de_tempo() iv IVT_ADDR_T1INTERRUPT ics ICS_AUTO {
;q222.c,73 :: 		frequencia1 = TMR2;
0x08D4	0xBF8106  	MOV	TMR2, WREG
0x08D6	0xEB0080  	CLR	W1
0x08D8	0x884020  	MOV	W0, _frequencia1
0x08DA	0x884031  	MOV	W1, _frequencia1+2
;q222.c,74 :: 		frequencia2 = TMR3;
0x08DC	0xBF810A  	MOV	TMR3, WREG
0x08DE	0xEB0080  	CLR	W1
0x08E0	0x884040  	MOV	W0, _frequencia2
0x08E2	0x884051  	MOV	W1, _frequencia2+2
;q222.c,76 :: 		TMR2 = 0;
0x08E4	0xEF2106  	CLR	TMR2
;q222.c,77 :: 		TMR3 = 0;
0x08E6	0xEF210A  	CLR	TMR3
;q222.c,79 :: 		IFS0bits.T1IF = 0;
0x08E8	0xA96084  	BCLR.B	IFS0bits, #3
;q222.c,81 :: 		IFS0bits.T3IF = 0;
0x08EA	0xA9E084  	BCLR.B	IFS0bits, #7
;q222.c,86 :: 		}
L_end_janela_de_tempo:
0x08EC	0x2001A0  	MOV	#26, W0
0x08EE	0x09000C  	REPEAT	#12
0x08F0	0x78104F  	POP	[W0--]
0x08F2	0x78004F  	POP	W0
0x08F4	0xF90036  	POP	RCOUNT
0x08F6	0xF90034  	POP	PSVPAG
0x08F8	0x064000  	RETFIE
; end of _janela_de_tempo
_INT0_Int:
0x08FA	0xF80034  	PUSH	PSVPAG
0x08FC	0xF80036  	PUSH	RCOUNT
0x08FE	0x781F80  	PUSH	W0
0x0900	0x200020  	MOV	#2, W0
0x0902	0x09000C  	REPEAT	#12
0x0904	0x781FB0  	PUSH	[W0++]
;q222.c,44 :: 		void INT0_Int() iv IVT_ADDR_INT0INTERRUPT{
;q222.c,45 :: 		Delay_ms(100);
0x0906	0x200098  	MOV	#9, W8
0x0908	0x223577  	MOV	#9047, W7
L_INT0_Int0:
0x090A	0xED200E  	DEC	W7
0x090C	0x3AFFFE  	BRA NZ	L_INT0_Int0
0x090E	0xED2010  	DEC	W8
0x0910	0x3AFFFC  	BRA NZ	L_INT0_Int0
;q222.c,46 :: 		if (flag_c == 0){
0x0912	0x804150  	MOV	_flag_c, W0
0x0914	0xE10060  	CP	W0, #0
0x0916	0x3A0003  	BRA NZ	L_INT0_Int2
L__INT0_Int48:
;q222.c,47 :: 		flag_c = 1;
0x0918	0x200010  	MOV	#1, W0
0x091A	0x884150  	MOV	W0, _flag_c
;q222.c,48 :: 		}else{
0x091C	0x370002  	BRA	L_INT0_Int3
L_INT0_Int2:
;q222.c,49 :: 		flag_c = 0;
0x091E	0xEF2000  	CLR	W0
0x0920	0x884150  	MOV	W0, _flag_c
;q222.c,50 :: 		}
L_INT0_Int3:
;q222.c,53 :: 		IFS0bits.INT0IF = 0;
0x0922	0xA90084  	BCLR.B	IFS0bits, #0
;q222.c,54 :: 		}
L_end_INT0_Int:
0x0924	0x2001A0  	MOV	#26, W0
0x0926	0x09000C  	REPEAT	#12
0x0928	0x78104F  	POP	[W0--]
0x092A	0x78004F  	POP	W0
0x092C	0xF90036  	POP	RCOUNT
0x092E	0xF90034  	POP	PSVPAG
0x0930	0x064000  	RETFIE
; end of _INT0_Int
;q222.c,0 :: ?ICS_flag_c [2]
0x0B26	0x0000 ;?ICS_flag_c+0
; end of ?ICS_flag_c
;q222.c,0 :: ?ICS_frequencia_aux [4]
0x0B28	0x0000 ;?ICS_frequencia_aux+0
0x0B2A	0x0000 ;?ICS_frequencia_aux+2
; end of ?ICS_frequencia_aux
;,0 :: _initBlock_2 [16]
; Containing: ?ICS?lstr4_q222 [5]
;             ?ICS?lstr5_q222 [11]
0x0B2C	0x486B ;_initBlock_2+0 : ?ICS?lstr4_q222 at 0x0B2C
0x0B2E	0x207A ;_initBlock_2+2
0x0B30	0x2000 ;_initBlock_2+4 : ?ICS?lstr5_q222 at 0x0B31
0x0B32	0x2020 ;_initBlock_2+6
0x0B34	0x2020 ;_initBlock_2+8
0x0B36	0x2020 ;_initBlock_2+10
0x0B38	0x2020 ;_initBlock_2+12
0x0B3A	0x0020 ;_initBlock_2+14
; end of _initBlock_2
;,0 :: _initBlock_3 [10]
; Containing: ?ICS?lstr6_q222 [5]
;             ?ICS?lstr7_q222 [5]
0x0B3C	0x7265 ;_initBlock_3+0 : ?ICS?lstr6_q222 at 0x0B3C
0x0B3E	0x6F72 ;_initBlock_3+2
0x0B40	0x4D00 ;_initBlock_3+4 : ?ICS?lstr7_q222 at 0x0B41
0x0B42	0x7A48 ;_initBlock_3+6
0x0B44	0x0020 ;_initBlock_3+8
; end of _initBlock_3
;q222.c,0 :: ?ICS?lstr8_q222 [11]
0x0B46	0x2020 ;?ICS?lstr8_q222+0
0x0B48	0x2020 ;?ICS?lstr8_q222+2
0x0B4A	0x2020 ;?ICS?lstr8_q222+4
0x0B4C	0x2020 ;?ICS?lstr8_q222+6
0x0B4E	0x2020 ;?ICS?lstr8_q222+8
0x0B50	0x00 ;?ICS?lstr8_q222+10
; end of ?ICS?lstr8_q222
;q222.c,0 :: ?ICS_frequencia [4]
0x0B52	0x0000 ;?ICS_frequencia+0
0x0B54	0x0000 ;?ICS_frequencia+2
; end of ?ICS_frequencia
;q222.c,0 :: ?ICS_frequencia1 [4]
0x0B56	0x0000 ;?ICS_frequencia1+0
0x0B58	0x0000 ;?ICS_frequencia1+2
; end of ?ICS_frequencia1
;q222.c,0 :: ?ICS_frequencia2 [4]
0x0B5A	0x0000 ;?ICS_frequencia2+0
0x0B5C	0x0000 ;?ICS_frequencia2+2
; end of ?ICS_frequencia2
;q222.c,0 :: ?ICS_cont_int [2]
0x0B5E	0x0001 ;?ICS_cont_int+0
; end of ?ICS_cont_int
;,0 :: _initBlock_9 [10]
; Containing: ?ICS?lstr9_q222 [5]
;             ?ICS?lstr1_q222 [5]
0x0B60	0x7265 ;_initBlock_9+0 : ?ICS?lstr9_q222 at 0x0B60
0x0B62	0x6F72 ;_initBlock_9+2
0x0B64	0x4800 ;_initBlock_9+4 : ?ICS?lstr1_q222 at 0x0B65
0x0B66	0x207A ;_initBlock_9+6
0x0B68	0x0020 ;_initBlock_9+8
; end of _initBlock_9
;q222.c,0 :: ?ICS?lstr2_q222 [12]
0x0B6A	0x2020 ;?ICS?lstr2_q222+0
0x0B6C	0x2020 ;?ICS?lstr2_q222+2
0x0B6E	0x2020 ;?ICS?lstr2_q222+4
0x0B70	0x2020 ;?ICS?lstr2_q222+6
0x0B72	0x2020 ;?ICS?lstr2_q222+8
0x0B74	0x0020 ;?ICS?lstr2_q222+10
; end of ?ICS?lstr2_q222
;q222.c,0 :: ?ICS?lstr3_q222 [5]
0x0B76	0x7265 ;?ICS?lstr3_q222+0
0x0B78	0x6F72 ;?ICS?lstr3_q222+2
0x0B7A	0x00 ;?ICS?lstr3_q222+4
; end of ?ICS?lstr3_q222
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [114]    __Compare_Fp
0x0172      [10]    _Delay_1us
0x017C      [82]    __Divide_32x32
0x01CE     [364]    __AddSub_FP
0x033A      [88]    __Modulus_32x32
0x0392      [10]    __Compare_Le_Fp
0x039C      [16]    _Lcd_Chr_CP
0x03AC      [10]    __Compare_Ge_Fp
0x03B6      [10]    __Sub_FP
0x03C0     [120]    __Float2Longint
0x0438     [182]    __Long2Float
0x04EE      [10]    _Delay_5500us
0x04F8      [12]    _Delay_50us
0x0504      [12]    _Delay_8ms
0x0510      [14]    __Lib_Lcd_Strobe
0x051E      [94]    _LongWordToStr
0x057C     [106]    _Lcd_Init
0x05E6     [108]    __Float2Longword
0x0652     [222]    _criatividade
0x0730     [108]    _Lcd_Cmd
0x079C     [110]    _floor
0x080A      [90]    _Lcd_Out
0x0864     [100]    _LongToStr
0x08C8      [50]    _janela_de_tempo
0x08FA      [56]    _INT0_Int
0x0932     [440]    _main
0x0AEA      [60]    _INT2_Int
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0855      [16]    _txt
0x02DC       [0]    LCD_D6
0x02DC       [0]    LCD_D7
0x02DC       [0]    LCD_RS
0x02DC       [0]    LCD_D5
0x010A       [2]    TMR3
0x0106       [2]    TMR2
0x02DC       [0]    LCD_D4
0x02DC       [0]    LCD_EN
0x02D8       [0]    LCD_RS_Direction
0x02D8       [0]    LCD_EN_Direction
0x0866       [0]    __Lib_Lcd_cmd_status
0x02D8       [0]    LCD_D4_Direction
0x02D8       [0]    LCD_D7_Direction
0x02D8       [0]    LCD_D6_Direction
0x02D8       [0]    LCD_D5_Direction
0x02D8       [0]    TRISE1_bit
0x02D8       [0]    TRISE2_bit
0x02D8       [0]    TRISE3_bit
0x02D8       [0]    TRISE0_bit
0x02C6       [2]    TRISB
0x02A8       [2]    ADPCFG
0x02CA       [2]    LATBbits
0x02D8       [0]    TRISE5_bit
0x02DC       [0]    LATE1_bit
0x02DC       [0]    LATE0_bit
0x02DC       [0]    LATE4_bit
0x02DC       [0]    LATE2_bit
0x02D8       [0]    TRISE4_bit
0x02DC       [0]    LATE5_bit
0x02DC       [0]    LATE3_bit
0x02D2       [2]    TRISD
0x010C       [2]    PR2
0x0102       [2]    PR1
0x0110       [2]    T2CON
0x010E       [2]    PR3
0x0868       [2]    _criat
0x0096       [2]    IPC1
0x0094       [2]    IPC0
0x0104       [2]    T1CON
0x0086       [2]    IFS1bits
0x02D8       [2]    TRISEbits
0x02D8       [2]    TRISE
0x0084       [2]    IFS0bits
0x0082       [2]    INTCON2bits
0x008C       [2]    IEC0bits
0x008E       [2]    IEC1bits
0x0800       [4]    _frequencia
0x0804       [4]    _frequencia1
0x0808       [4]    _frequencia2
0x080C       [2]    _cont_int
0x080E       [5]    ?lstr9_q222
0x0813       [5]    ?lstr1_q222
0x0818      [12]    ?lstr2_q222
0x0824       [5]    ?lstr3_q222
0x082A       [2]    _flag_c
0x082C       [4]    _frequencia_aux
0x0830       [5]    ?lstr4_q222
0x0835      [11]    ?lstr5_q222
0x0840       [5]    ?lstr6_q222
0x0845       [5]    ?lstr7_q222
0x084A      [11]    ?lstr8_q222
0x0094       [2]    IPC0
0x0096       [2]    IPC1
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x0106       [2]    TMR2
0x010A       [2]    TMR3
0x010C       [2]    PR2
0x010E       [2]    PR3
0x0110       [2]    T2CON
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02D2       [2]    TRISD
0x02D8       [2]    TRISE
0x0014       [1]    FARG_Lcd_Chr_CP_out_char
0x0014       [4]    FARG_LongWordToStr_input
0x0018       [2]    FARG_LongWordToStr_output
0x0014       [2]    FARG_criatividade_num
0x0014       [1]    FARG_Lcd_Cmd_out_char
0x0014       [4]    FARG_floor_x
0x0014       [2]    FARG_Lcd_Out_row
0x0016       [2]    FARG_Lcd_Out_column
0x0018       [2]    FARG_Lcd_Out_text
0x0014       [4]    FARG_LongToStr_input
0x0018       [2]    FARG_LongToStr_output
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0B26       [2]    ?ICS_flag_c
0x0B28       [4]    ?ICS_frequencia_aux
0x0B2C       [5]    ?ICS?lstr4_q222
0x0B31      [11]    ?ICS?lstr5_q222
0x0B3C       [5]    ?ICS?lstr6_q222
0x0B41       [5]    ?ICS?lstr7_q222
0x0B46      [11]    ?ICS?lstr8_q222
0x0B52       [4]    ?ICS_frequencia
0x0B56       [4]    ?ICS_frequencia1
0x0B5A       [4]    ?ICS_frequencia2
0x0B5E       [2]    ?ICS_cont_int
0x0B60       [5]    ?ICS?lstr9_q222
0x0B65       [5]    ?ICS?lstr1_q222
0x0B6A      [12]    ?ICS?lstr2_q222
0x0B76       [5]    ?ICS?lstr3_q222
