;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27/01/2020 07:20:57
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040540  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x0004F2  	1266
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x00051E  	1310
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0540	0x2080AF  	MOV	#2058, W15
0x0542	0x20FFF0  	MOV	#4095, W0
0x0544	0xB7A020  	MOV	WREG, SPLIM
0x0546	0x200000  	MOV	#0, W0
0x0548	0xB7A034  	MOV	WREG, PSVPAG
0x054A	0x200040  	MOV	#4, W0
0x054C	0xB72044  	IOR	CORCON
0x054E	0x000000020B28  	CALL	2856
;q4.c,119 :: 		void main() {
;q4.c,120 :: 		ADPCFG = 0xFFFF;           // configura entradas e sa?das como digitais;
0x0552	0x781F8A  	PUSH	W10
0x0554	0x781F8B  	PUSH	W11
0x0556	0x2FFFF0  	MOV	#65535, W0
0x0558	0xB7A2A8  	MOV	WREG, ADPCFG
;q4.c,121 :: 		TRISB = 0x0000;            // PORTB como sa?da
0x055A	0xEF22C6  	CLR	TRISB
;q4.c,122 :: 		TRISCbits.TRISC13 = 0;     // RC13 como sa?da
0x055C	0xA9A2CD  	BCLR	TRISCbits, #13
;q4.c,123 :: 		echo = 1;                  // T1CK como ENTRADA
0x055E	0xA8C2CD  	BSET	TRISCbits, #14
;q4.c,124 :: 		TRISD = 0x0000;            // PORTD como sa?da
0x0560	0xEF22D2  	CLR	TRISD
;q4.c,125 :: 		TRISEbits.TRISE0 = 0;      // RE0 como SA?DA
0x0562	0xA902D8  	BCLR.B	TRISEbits, #0
;q4.c,126 :: 		TRISEbits.TRISE1 = 0;      // RE1 como SA?DA
0x0564	0xA922D8  	BCLR.B	TRISEbits, #1
;q4.c,127 :: 		TRISEbits.TRISE2 = 0;      // RE2 como SA?DA
0x0566	0xA942D8  	BCLR.B	TRISEbits, #2
;q4.c,128 :: 		TRISEbits.TRISE3 = 0;      // RE3 como SA?DA
0x0568	0xA962D8  	BCLR.B	TRISEbits, #3
;q4.c,129 :: 		TRISEbits.TRISE8 = 1;      // RE8 como ENTRADA (? a interrup??o)
0x056A	0xA802D9  	BSET	TRISEbits, #8
;q4.c,130 :: 		TRISF = 0x0000;            // PORTF como sa?da
0x056C	0xEF22DE  	CLR	TRISF
;q4.c,131 :: 		IFS0 = 0;                  // flag de interrup??o do timer1
0x056E	0xEF2084  	CLR	IFS0
;q4.c,132 :: 		LATB = 0;
0x0570	0xEF22CA  	CLR	LATB
;q4.c,133 :: 		LATC = 0;
0x0572	0xEF22D0  	CLR	LATC
;q4.c,134 :: 		LATD = 0;                  // sa?das
0x0574	0xEF22D6  	CLR	LATD
;q4.c,135 :: 		LATF = 0;
0x0576	0xEF22E2  	CLR	LATF
;q4.c,137 :: 		IEC0bits.INT0IE = 1;
0x0578	0xA8008C  	BSET.B	IEC0bits, #0
;q4.c,138 :: 		IEC0bits.T1IE = 1;         // o bit 3 do registrador IEC0 habilita a interrup??o do timer
0x057A	0xA8608C  	BSET.B	IEC0bits, #3
;q4.c,139 :: 		PR1 = 0xFFFF;              // coloca o pr no m?ximo pq ele vai contar o tempo que a onda do echo passou em alta
0x057C	0x2FFFF0  	MOV	#65535, W0
0x057E	0xB7A102  	MOV	WREG, PR1
;q4.c,140 :: 		PR2 = 16000;               // usado pra que a fun??o atraso_ms seja feita
0x0580	0x23E800  	MOV	#16000, W0
0x0582	0xB7A10C  	MOV	WREG, PR2
;q4.c,142 :: 		T1CON = 0x8070;            // ativamos o timer 1 e o prescaler fica em 256 p caber as contas
0x0584	0x280700  	MOV	#32880, W0
0x0586	0xB7A104  	MOV	WREG, T1CON
;q4.c,143 :: 		T2CON = 0x8000;            // ativamos o timer 2 na fun??o timer
0x0588	0x280000  	MOV	#32768, W0
0x058A	0xB7A110  	MOV	WREG, T2CON
;q4.c,145 :: 		flag = 0;
0x058C	0xEF2000  	CLR	W0
0x058E	0x884000  	MOV	W0, _flag
;q4.c,147 :: 		while(1){
L_main28:
;q4.c,148 :: 		dist_cm = (distancia*0.272);  // distancia multiplicada pela convers?o (256*62.5e-9*340/2)*100
0x0590	0x804040  	MOV	_distancia, W0
0x0592	0xEB0080  	CLR	W1
0x0594	0x07FF53  	RCALL	__Long2Float
0x0596	0x243962  	MOV	#17302, W2
0x0598	0x23E8B3  	MOV	#16011, W3
0x059A	0x07FE68  	RCALL	__Mul_FP
0x059C	0x884010  	MOV	W0, _dist_cm
0x059E	0x884021  	MOV	W1, _dist_cm+2
;q4.c,149 :: 		trigger = 1;                  // inicio do pulso de ativa??o do sensor
0x05A0	0xA842D6  	BSET.B	LATDbits, #2
;q4.c,150 :: 		delay_us(15);                 // dura??o do pulso de ativa??o do sensor
0x05A2	0x200507  	MOV	#80, W7
L_main30:
0x05A4	0xED200E  	DEC	W7
0x05A6	0x3AFFFE  	BRA NZ	L_main30
;q4.c,151 :: 		trigger = 0;                  // fim do pulso de ativa??o do sensor
0x05A8	0xA942D6  	BCLR.B	LATDbits, #2
;q4.c,153 :: 		conversao(dist_cm);
0x05AA	0x80401A  	MOV	_dist_cm, W10
0x05AC	0x80402B  	MOV	_dist_cm+2, W11
0x05AE	0x07FEEB  	RCALL	_conversao
;q4.c,155 :: 		if(flag == 0) {
0x05B0	0x804000  	MOV	_flag, W0
0x05B2	0xE10060  	CP	W0, #0
0x05B4	0x3A015B  	BRA NZ	L_main32
L__main189:
;q4.c,156 :: 		if ((dist_cm > 200)){
0x05B6	0x200002  	MOV	#0, W2
0x05B8	0x243483  	MOV	#17224, W3
0x05BA	0x804010  	MOV	_dist_cm, W0
0x05BC	0x804021  	MOV	_dist_cm+2, W1
0x05BE	0x07FE4C  	RCALL	__Compare_Ge_Fp
0x05C0	0xE00000  	CP0	W0
0x05C2	0xEF6000  	CLR.B	W0
0x05C4	0x340001  	BRA LE	L__main190
0x05C6	0xEC6000  	INC.B	W0
L__main190:
0x05C8	0xE24000  	CP0.B	W0
0x05CA	0x32000A  	BRA Z	L_main33
L__main191:
;q4.c,158 :: 		conversao(dist_cm);
0x05CC	0x80401A  	MOV	_dist_cm, W10
0x05CE	0x80402B  	MOV	_dist_cm+2, W11
0x05D0	0x07FEDA  	RCALL	_conversao
;q4.c,159 :: 		criatividade = 0;
0x05D2	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,160 :: 		buzzer = 0; // buzzer sempre desligado
0x05D4	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,161 :: 		rele1 = 1;  // rel?1 desligado
0x05D6	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,162 :: 		rele2 = 1;  // rel?2 desligado
0x05D8	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,163 :: 		rele3 = 1;  // rel?3 desligado
0x05DA	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,164 :: 		rele4 = 1;  // rel?4 desligado
0x05DC	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,165 :: 		}
0x05DE	0x370145  	BRA	L_main34
L_main33:
;q4.c,166 :: 		else if ((dist_cm > 180) && (dist_cm <= 200)){
0x05E0	0x200002  	MOV	#0, W2
0x05E2	0x243343  	MOV	#17204, W3
0x05E4	0x804010  	MOV	_dist_cm, W0
0x05E6	0x804021  	MOV	_dist_cm+2, W1
0x05E8	0x07FE37  	RCALL	__Compare_Ge_Fp
0x05EA	0xE00000  	CP0	W0
0x05EC	0xEF6000  	CLR.B	W0
0x05EE	0x340001  	BRA LE	L__main192
0x05F0	0xEC6000  	INC.B	W0
L__main192:
0x05F2	0xE24000  	CP0.B	W0
0x05F4	0x320032  	BRA Z	L__main151
L__main193:
0x05F6	0x200002  	MOV	#0, W2
0x05F8	0x243483  	MOV	#17224, W3
0x05FA	0x804010  	MOV	_dist_cm, W0
0x05FC	0x804021  	MOV	_dist_cm+2, W1
0x05FE	0x07FE31  	RCALL	__Compare_Le_Fp
0x0600	0xE00000  	CP0	W0
0x0602	0xEF6000  	CLR.B	W0
0x0604	0x3C0001  	BRA GT	L__main194
0x0606	0xEC6000  	INC.B	W0
L__main194:
0x0608	0xE24000  	CP0.B	W0
0x060A	0x320027  	BRA Z	L__main150
L__main195:
L__main149:
;q4.c,167 :: 		rele1 = 0;
0x060C	0xA902DC  	BCLR.B	LATEbits, #0
;q4.c,168 :: 		rele2 = 1;
0x060E	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,169 :: 		rele3 = 1;
0x0610	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,170 :: 		rele4 = 1;
0x0612	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,172 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x0614	0xEF2000  	CLR	W0
0x0616	0x884030  	MOV	W0, _aux
L_main38:
0x0618	0x804031  	MOV	_aux, W1
0x061A	0x203840  	MOV	#900, W0
0x061C	0xE10800  	CP	W1, W0
0x061E	0x3D0009  	BRA GE	L_main39
L__main196:
;q4.c,173 :: 		buzzer = 0;
0x0620	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,174 :: 		conversao(dist_cm);
0x0622	0x80401A  	MOV	_dist_cm, W10
0x0624	0x80402B  	MOV	_dist_cm+2, W11
0x0626	0x07FEAF  	RCALL	_conversao
;q4.c,175 :: 		criatividade = 0;
0x0628	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,172 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x062A	0x200011  	MOV	#1, W1
0x062C	0x208060  	MOV	#lo_addr(_aux), W0
0x062E	0x408810  	ADD	W1, [W0], [W0]
;q4.c,176 :: 		}
0x0630	0x37FFF3  	BRA	L_main38
L_main39:
;q4.c,178 :: 		rele1 = 0;
0x0632	0xA902DC  	BCLR.B	LATEbits, #0
;q4.c,179 :: 		rele2 = 1;
0x0634	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,180 :: 		rele3 = 1;
0x0636	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,181 :: 		rele4 = 1;
0x0638	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,183 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x063A	0xEF2000  	CLR	W0
0x063C	0x884030  	MOV	W0, _aux
L_main41:
0x063E	0x804031  	MOV	_aux, W1
0x0640	0x203840  	MOV	#900, W0
0x0642	0xE10800  	CP	W1, W0
0x0644	0x3D0009  	BRA GE	L_main42
L__main197:
;q4.c,184 :: 		buzzer = 1;
0x0646	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,185 :: 		conversao(dist_cm);
0x0648	0x80401A  	MOV	_dist_cm, W10
0x064A	0x80402B  	MOV	_dist_cm+2, W11
0x064C	0x07FE9C  	RCALL	_conversao
;q4.c,186 :: 		criatividade = 0;
0x064E	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,183 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x0650	0x200011  	MOV	#1, W1
0x0652	0x208060  	MOV	#lo_addr(_aux), W0
0x0654	0x408810  	ADD	W1, [W0], [W0]
;q4.c,187 :: 		}
0x0656	0x37FFF3  	BRA	L_main41
L_main42:
;q4.c,188 :: 		}
0x0658	0x370108  	BRA	L_main44
;q4.c,166 :: 		else if ((dist_cm > 180) && (dist_cm <= 200)){
L__main151:
L__main150:
;q4.c,189 :: 		else if ((dist_cm > 120) && (dist_cm <= 180)){
0x065A	0x200002  	MOV	#0, W2
0x065C	0x242F03  	MOV	#17136, W3
0x065E	0x804010  	MOV	_dist_cm, W0
0x0660	0x804021  	MOV	_dist_cm+2, W1
0x0662	0x07FDFA  	RCALL	__Compare_Ge_Fp
0x0664	0xE00000  	CP0	W0
0x0666	0xEF6000  	CLR.B	W0
0x0668	0x340001  	BRA LE	L__main198
0x066A	0xEC6000  	INC.B	W0
L__main198:
0x066C	0xE24000  	CP0.B	W0
0x066E	0x320032  	BRA Z	L__main153
L__main199:
0x0670	0x200002  	MOV	#0, W2
0x0672	0x243343  	MOV	#17204, W3
0x0674	0x804010  	MOV	_dist_cm, W0
0x0676	0x804021  	MOV	_dist_cm+2, W1
0x0678	0x07FDF4  	RCALL	__Compare_Le_Fp
0x067A	0xE00000  	CP0	W0
0x067C	0xEF6000  	CLR.B	W0
0x067E	0x3C0001  	BRA GT	L__main200
0x0680	0xEC6000  	INC.B	W0
L__main200:
0x0682	0xE24000  	CP0.B	W0
0x0684	0x320027  	BRA Z	L__main152
L__main201:
L__main148:
;q4.c,190 :: 		rele1 = 1;
0x0686	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,191 :: 		rele2 = 0;
0x0688	0xA922DC  	BCLR.B	LATEbits, #1
;q4.c,192 :: 		rele3 = 1;
0x068A	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,193 :: 		rele4 = 1;
0x068C	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,195 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x068E	0xEF2000  	CLR	W0
0x0690	0x884030  	MOV	W0, _aux
L_main48:
0x0692	0x804031  	MOV	_aux, W1
0x0694	0x202580  	MOV	#600, W0
0x0696	0xE10800  	CP	W1, W0
0x0698	0x3D0009  	BRA GE	L_main49
L__main202:
;q4.c,196 :: 		buzzer = 0;
0x069A	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,197 :: 		conversao(dist_cm);
0x069C	0x80401A  	MOV	_dist_cm, W10
0x069E	0x80402B  	MOV	_dist_cm+2, W11
0x06A0	0x07FE72  	RCALL	_conversao
;q4.c,198 :: 		criatividade = 0;
0x06A2	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,195 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x06A4	0x200011  	MOV	#1, W1
0x06A6	0x208060  	MOV	#lo_addr(_aux), W0
0x06A8	0x408810  	ADD	W1, [W0], [W0]
;q4.c,199 :: 		}
0x06AA	0x37FFF3  	BRA	L_main48
L_main49:
;q4.c,201 :: 		rele1 = 1;
0x06AC	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,202 :: 		rele2 = 0;
0x06AE	0xA922DC  	BCLR.B	LATEbits, #1
;q4.c,203 :: 		rele3 = 1;
0x06B0	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,204 :: 		rele4 = 1;
0x06B2	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,206 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x06B4	0xEF2000  	CLR	W0
0x06B6	0x884030  	MOV	W0, _aux
L_main51:
0x06B8	0x804031  	MOV	_aux, W1
0x06BA	0x202580  	MOV	#600, W0
0x06BC	0xE10800  	CP	W1, W0
0x06BE	0x3D0009  	BRA GE	L_main52
L__main203:
;q4.c,207 :: 		buzzer = 1;
0x06C0	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,208 :: 		conversao(dist_cm);
0x06C2	0x80401A  	MOV	_dist_cm, W10
0x06C4	0x80402B  	MOV	_dist_cm+2, W11
0x06C6	0x07FE5F  	RCALL	_conversao
;q4.c,209 :: 		criatividade = 0;
0x06C8	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,206 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x06CA	0x200011  	MOV	#1, W1
0x06CC	0x208060  	MOV	#lo_addr(_aux), W0
0x06CE	0x408810  	ADD	W1, [W0], [W0]
;q4.c,210 :: 		}
0x06D0	0x37FFF3  	BRA	L_main51
L_main52:
;q4.c,211 :: 		}
0x06D2	0x3700CB  	BRA	L_main54
;q4.c,189 :: 		else if ((dist_cm > 120) && (dist_cm <= 180)){
L__main153:
L__main152:
;q4.c,212 :: 		else if ((dist_cm > 80) && (dist_cm <= 120)){
0x06D4	0x200002  	MOV	#0, W2
0x06D6	0x242A03  	MOV	#17056, W3
0x06D8	0x804010  	MOV	_dist_cm, W0
0x06DA	0x804021  	MOV	_dist_cm+2, W1
0x06DC	0x07FDBD  	RCALL	__Compare_Ge_Fp
0x06DE	0xE00000  	CP0	W0
0x06E0	0xEF6000  	CLR.B	W0
0x06E2	0x340001  	BRA LE	L__main204
0x06E4	0xEC6000  	INC.B	W0
L__main204:
0x06E6	0xE24000  	CP0.B	W0
0x06E8	0x320032  	BRA Z	L__main155
L__main205:
0x06EA	0x200002  	MOV	#0, W2
0x06EC	0x242F03  	MOV	#17136, W3
0x06EE	0x804010  	MOV	_dist_cm, W0
0x06F0	0x804021  	MOV	_dist_cm+2, W1
0x06F2	0x07FDB7  	RCALL	__Compare_Le_Fp
0x06F4	0xE00000  	CP0	W0
0x06F6	0xEF6000  	CLR.B	W0
0x06F8	0x3C0001  	BRA GT	L__main206
0x06FA	0xEC6000  	INC.B	W0
L__main206:
0x06FC	0xE24000  	CP0.B	W0
0x06FE	0x320027  	BRA Z	L__main154
L__main207:
L__main147:
;q4.c,213 :: 		rele1 = 1;
0x0700	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,214 :: 		rele2 = 1;
0x0702	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,215 :: 		rele3 = 0;
0x0704	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,216 :: 		rele4 = 1;
0x0706	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,218 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x0708	0xEF2000  	CLR	W0
0x070A	0x884030  	MOV	W0, _aux
L_main58:
0x070C	0x804031  	MOV	_aux, W1
0x070E	0x2012C0  	MOV	#300, W0
0x0710	0xE10800  	CP	W1, W0
0x0712	0x3D0009  	BRA GE	L_main59
L__main208:
;q4.c,219 :: 		buzzer = 0;
0x0714	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,220 :: 		conversao(dist_cm);
0x0716	0x80401A  	MOV	_dist_cm, W10
0x0718	0x80402B  	MOV	_dist_cm+2, W11
0x071A	0x07FE35  	RCALL	_conversao
;q4.c,221 :: 		criatividade = 0;
0x071C	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,218 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x071E	0x200011  	MOV	#1, W1
0x0720	0x208060  	MOV	#lo_addr(_aux), W0
0x0722	0x408810  	ADD	W1, [W0], [W0]
;q4.c,222 :: 		}
0x0724	0x37FFF3  	BRA	L_main58
L_main59:
;q4.c,224 :: 		rele1 = 1;
0x0726	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,225 :: 		rele2 = 1;
0x0728	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,226 :: 		rele3 = 0;
0x072A	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,227 :: 		rele4 = 1;
0x072C	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,229 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x072E	0xEF2000  	CLR	W0
0x0730	0x884030  	MOV	W0, _aux
L_main61:
0x0732	0x804031  	MOV	_aux, W1
0x0734	0x2012C0  	MOV	#300, W0
0x0736	0xE10800  	CP	W1, W0
0x0738	0x3D0009  	BRA GE	L_main62
L__main209:
;q4.c,230 :: 		buzzer = 1;
0x073A	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,231 :: 		conversao(dist_cm);
0x073C	0x80401A  	MOV	_dist_cm, W10
0x073E	0x80402B  	MOV	_dist_cm+2, W11
0x0740	0x07FE22  	RCALL	_conversao
;q4.c,232 :: 		criatividade = 0;
0x0742	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,229 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x0744	0x200011  	MOV	#1, W1
0x0746	0x208060  	MOV	#lo_addr(_aux), W0
0x0748	0x408810  	ADD	W1, [W0], [W0]
;q4.c,233 :: 		}
0x074A	0x37FFF3  	BRA	L_main61
L_main62:
;q4.c,234 :: 		}
0x074C	0x37008E  	BRA	L_main64
;q4.c,212 :: 		else if ((dist_cm > 80) && (dist_cm <= 120)){
L__main155:
L__main154:
;q4.c,235 :: 		else if ((dist_cm > 50) && (dist_cm <= 80)){
0x074E	0x200002  	MOV	#0, W2
0x0750	0x242483  	MOV	#16968, W3
0x0752	0x804010  	MOV	_dist_cm, W0
0x0754	0x804021  	MOV	_dist_cm+2, W1
0x0756	0x07FD80  	RCALL	__Compare_Ge_Fp
0x0758	0xE00000  	CP0	W0
0x075A	0xEF6000  	CLR.B	W0
0x075C	0x340001  	BRA LE	L__main210
0x075E	0xEC6000  	INC.B	W0
L__main210:
0x0760	0xE24000  	CP0.B	W0
0x0762	0x320032  	BRA Z	L__main157
L__main211:
0x0764	0x200002  	MOV	#0, W2
0x0766	0x242A03  	MOV	#17056, W3
0x0768	0x804010  	MOV	_dist_cm, W0
0x076A	0x804021  	MOV	_dist_cm+2, W1
0x076C	0x07FD7A  	RCALL	__Compare_Le_Fp
0x076E	0xE00000  	CP0	W0
0x0770	0xEF6000  	CLR.B	W0
0x0772	0x3C0001  	BRA GT	L__main212
0x0774	0xEC6000  	INC.B	W0
L__main212:
0x0776	0xE24000  	CP0.B	W0
0x0778	0x320027  	BRA Z	L__main156
L__main213:
L__main146:
;q4.c,236 :: 		rele1 = 1;
0x077A	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,237 :: 		rele2 = 1;
0x077C	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,238 :: 		rele3 = 1;
0x077E	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,239 :: 		rele4 = 0;
0x0780	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,241 :: 		for(aux=0;aux<225;aux++) {   //atraso de 0.75 segundos
0x0782	0xEF2000  	CLR	W0
0x0784	0x884030  	MOV	W0, _aux
L_main68:
0x0786	0x200E11  	MOV	#225, W1
0x0788	0x208060  	MOV	#lo_addr(_aux), W0
0x078A	0xE10810  	CP	W1, [W0]
0x078C	0x340009  	BRA LE	L_main69
L__main214:
;q4.c,242 :: 		buzzer = 0;
0x078E	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,243 :: 		conversao(dist_cm);
0x0790	0x80401A  	MOV	_dist_cm, W10
0x0792	0x80402B  	MOV	_dist_cm+2, W11
0x0794	0x07FDF8  	RCALL	_conversao
;q4.c,244 :: 		criatividade = 0;
0x0796	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,241 :: 		for(aux=0;aux<225;aux++) {   //atraso de 0.75 segundos
0x0798	0x200011  	MOV	#1, W1
0x079A	0x208060  	MOV	#lo_addr(_aux), W0
0x079C	0x408810  	ADD	W1, [W0], [W0]
;q4.c,245 :: 		}
0x079E	0x37FFF3  	BRA	L_main68
L_main69:
;q4.c,247 :: 		rele1 = 1;
0x07A0	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,248 :: 		rele2 = 1;
0x07A2	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,249 :: 		rele3 = 1;
0x07A4	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,250 :: 		rele4 = 0;
0x07A6	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,252 :: 		for(aux=0;aux<225;aux++) {
0x07A8	0xEF2000  	CLR	W0
0x07AA	0x884030  	MOV	W0, _aux
L_main71:
0x07AC	0x200E11  	MOV	#225, W1
0x07AE	0x208060  	MOV	#lo_addr(_aux), W0
0x07B0	0xE10810  	CP	W1, [W0]
0x07B2	0x340009  	BRA LE	L_main72
L__main215:
;q4.c,253 :: 		buzzer = 1;
0x07B4	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,254 :: 		conversao(dist_cm);
0x07B6	0x80401A  	MOV	_dist_cm, W10
0x07B8	0x80402B  	MOV	_dist_cm+2, W11
0x07BA	0x07FDE5  	RCALL	_conversao
;q4.c,255 :: 		criatividade = 0;
0x07BC	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,252 :: 		for(aux=0;aux<225;aux++) {
0x07BE	0x200011  	MOV	#1, W1
0x07C0	0x208060  	MOV	#lo_addr(_aux), W0
0x07C2	0x408810  	ADD	W1, [W0], [W0]
;q4.c,256 :: 		}
0x07C4	0x37FFF3  	BRA	L_main71
L_main72:
;q4.c,257 :: 		}
0x07C6	0x370051  	BRA	L_main74
;q4.c,235 :: 		else if ((dist_cm > 50) && (dist_cm <= 80)){
L__main157:
L__main156:
;q4.c,258 :: 		else if ((dist_cm > 20) && (dist_cm <= 50)){
0x07C8	0x200002  	MOV	#0, W2
0x07CA	0x241A03  	MOV	#16800, W3
0x07CC	0x804010  	MOV	_dist_cm, W0
0x07CE	0x804021  	MOV	_dist_cm+2, W1
0x07D0	0x07FD43  	RCALL	__Compare_Ge_Fp
0x07D2	0xE00000  	CP0	W0
0x07D4	0xEF6000  	CLR.B	W0
0x07D6	0x340001  	BRA LE	L__main216
0x07D8	0xEC6000  	INC.B	W0
L__main216:
0x07DA	0xE24000  	CP0.B	W0
0x07DC	0x320032  	BRA Z	L__main159
L__main217:
0x07DE	0x200002  	MOV	#0, W2
0x07E0	0x242483  	MOV	#16968, W3
0x07E2	0x804010  	MOV	_dist_cm, W0
0x07E4	0x804021  	MOV	_dist_cm+2, W1
0x07E6	0x07FD3D  	RCALL	__Compare_Le_Fp
0x07E8	0xE00000  	CP0	W0
0x07EA	0xEF6000  	CLR.B	W0
0x07EC	0x3C0001  	BRA GT	L__main218
0x07EE	0xEC6000  	INC.B	W0
L__main218:
0x07F0	0xE24000  	CP0.B	W0
0x07F2	0x320027  	BRA Z	L__main158
L__main219:
L__main145:
;q4.c,259 :: 		rele1 = 1;
0x07F4	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,260 :: 		rele2 = 1;
0x07F6	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,261 :: 		rele3 = 0;
0x07F8	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,262 :: 		rele4 = 0;
0x07FA	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,264 :: 		for(aux=0;aux<150;aux++) {  //atraso de 0.5 segundos
0x07FC	0xEF2000  	CLR	W0
0x07FE	0x884030  	MOV	W0, _aux
L_main78:
0x0800	0x200961  	MOV	#150, W1
0x0802	0x208060  	MOV	#lo_addr(_aux), W0
0x0804	0xE10810  	CP	W1, [W0]
0x0806	0x340009  	BRA LE	L_main79
L__main220:
;q4.c,265 :: 		buzzer = 0;
0x0808	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,266 :: 		conversao(dist_cm);
0x080A	0x80401A  	MOV	_dist_cm, W10
0x080C	0x80402B  	MOV	_dist_cm+2, W11
0x080E	0x07FDBB  	RCALL	_conversao
;q4.c,267 :: 		criatividade = 0;
0x0810	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,264 :: 		for(aux=0;aux<150;aux++) {  //atraso de 0.5 segundos
0x0812	0x200011  	MOV	#1, W1
0x0814	0x208060  	MOV	#lo_addr(_aux), W0
0x0816	0x408810  	ADD	W1, [W0], [W0]
;q4.c,268 :: 		}
0x0818	0x37FFF3  	BRA	L_main78
L_main79:
;q4.c,270 :: 		rele1 = 1;
0x081A	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,271 :: 		rele2 = 1;
0x081C	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,272 :: 		rele3 = 0;
0x081E	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,273 :: 		rele4 = 0;
0x0820	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,276 :: 		for(aux=0;aux<150;aux++){
0x0822	0xEF2000  	CLR	W0
0x0824	0x884030  	MOV	W0, _aux
L_main81:
0x0826	0x200961  	MOV	#150, W1
0x0828	0x208060  	MOV	#lo_addr(_aux), W0
0x082A	0xE10810  	CP	W1, [W0]
0x082C	0x340009  	BRA LE	L_main82
L__main221:
;q4.c,277 :: 		buzzer = 1;
0x082E	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,278 :: 		conversao(dist_cm);
0x0830	0x80401A  	MOV	_dist_cm, W10
0x0832	0x80402B  	MOV	_dist_cm+2, W11
0x0834	0x07FDA8  	RCALL	_conversao
;q4.c,279 :: 		criatividade = 0;
0x0836	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,276 :: 		for(aux=0;aux<150;aux++){
0x0838	0x200011  	MOV	#1, W1
0x083A	0x208060  	MOV	#lo_addr(_aux), W0
0x083C	0x408810  	ADD	W1, [W0], [W0]
;q4.c,280 :: 		}
0x083E	0x37FFF3  	BRA	L_main81
L_main82:
;q4.c,281 :: 		}
0x0840	0x370014  	BRA	L_main84
;q4.c,258 :: 		else if ((dist_cm > 20) && (dist_cm <= 50)){
L__main159:
L__main158:
;q4.c,282 :: 		else if ((dist_cm <= 20)){
0x0842	0x200002  	MOV	#0, W2
0x0844	0x241A03  	MOV	#16800, W3
0x0846	0x804010  	MOV	_dist_cm, W0
0x0848	0x804021  	MOV	_dist_cm+2, W1
0x084A	0x07FD0B  	RCALL	__Compare_Le_Fp
0x084C	0xE00000  	CP0	W0
0x084E	0xEF6000  	CLR.B	W0
0x0850	0x3C0001  	BRA GT	L__main222
0x0852	0xEC6000  	INC.B	W0
L__main222:
0x0854	0xE24000  	CP0.B	W0
0x0856	0x320009  	BRA Z	L_main85
L__main223:
;q4.c,283 :: 		conversao(dist_cm);
0x0858	0x80401A  	MOV	_dist_cm, W10
0x085A	0x80402B  	MOV	_dist_cm+2, W11
0x085C	0x07FD94  	RCALL	_conversao
;q4.c,284 :: 		buzzer = 1; // buzzer sempre ligado
0x085E	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,285 :: 		rele1 = 0;  // rel?1 sempre ligado
0x0860	0xA902DC  	BCLR.B	LATEbits, #0
;q4.c,286 :: 		rele2 = 0;  // rel?2 sempre ligado
0x0862	0xA922DC  	BCLR.B	LATEbits, #1
;q4.c,287 :: 		rele3 = 0;  // rel?3 sempre ligado
0x0864	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,288 :: 		rele4 = 0;  // rel?4 sempre ligado
0x0866	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,289 :: 		criatividade = 0;
0x0868	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,290 :: 		}
L_main85:
L_main84:
L_main74:
L_main64:
L_main54:
L_main44:
L_main34:
;q4.c,291 :: 		}
0x086A	0x37015A  	BRA	L_main86
L_main32:
;q4.c,293 :: 		if ((dist_cm < 20)){
0x086C	0x200002  	MOV	#0, W2
0x086E	0x241A03  	MOV	#16800, W3
0x0870	0x804010  	MOV	_dist_cm, W0
0x0872	0x804021  	MOV	_dist_cm+2, W1
0x0874	0x07FCF6  	RCALL	__Compare_Le_Fp
0x0876	0xE00000  	CP0	W0
0x0878	0xEF6000  	CLR.B	W0
0x087A	0x3D0001  	BRA GE	L__main224
0x087C	0xEC6000  	INC.B	W0
L__main224:
0x087E	0xE24000  	CP0.B	W0
0x0880	0x32000A  	BRA Z	L_main87
L__main225:
;q4.c,294 :: 		buzzer = 1; // buzzer sempre ligado
0x0882	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,295 :: 		conversao(dist_cm);
0x0884	0x80401A  	MOV	_dist_cm, W10
0x0886	0x80402B  	MOV	_dist_cm+2, W11
0x0888	0x07FD7E  	RCALL	_conversao
;q4.c,296 :: 		criatividade = 1;
0x088A	0xA8A2E2  	BSET.B	LATFbits, #5
;q4.c,298 :: 		rele1 = 0;  // rel?1 sempre ligado
0x088C	0xA902DC  	BCLR.B	LATEbits, #0
;q4.c,299 :: 		rele2 = 0;  // rel?2 sempre ligado
0x088E	0xA922DC  	BCLR.B	LATEbits, #1
;q4.c,300 :: 		rele3 = 0;  // rel?3 sempre ligado
0x0890	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,301 :: 		rele4 = 0;  // rel?4 sempre ligado
0x0892	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,302 :: 		}
0x0894	0x370145  	BRA	L_main88
L_main87:
;q4.c,303 :: 		else if ((dist_cm > 20) && (dist_cm <= 50)){
0x0896	0x200002  	MOV	#0, W2
0x0898	0x241A03  	MOV	#16800, W3
0x089A	0x804010  	MOV	_dist_cm, W0
0x089C	0x804021  	MOV	_dist_cm+2, W1
0x089E	0x07FCDC  	RCALL	__Compare_Ge_Fp
0x08A0	0xE00000  	CP0	W0
0x08A2	0xEF6000  	CLR.B	W0
0x08A4	0x340001  	BRA LE	L__main226
0x08A6	0xEC6000  	INC.B	W0
L__main226:
0x08A8	0xE24000  	CP0.B	W0
0x08AA	0x320032  	BRA Z	L__main161
L__main227:
0x08AC	0x200002  	MOV	#0, W2
0x08AE	0x242483  	MOV	#16968, W3
0x08B0	0x804010  	MOV	_dist_cm, W0
0x08B2	0x804021  	MOV	_dist_cm+2, W1
0x08B4	0x07FCD6  	RCALL	__Compare_Le_Fp
0x08B6	0xE00000  	CP0	W0
0x08B8	0xEF6000  	CLR.B	W0
0x08BA	0x3C0001  	BRA GT	L__main228
0x08BC	0xEC6000  	INC.B	W0
L__main228:
0x08BE	0xE24000  	CP0.B	W0
0x08C0	0x320027  	BRA Z	L__main160
L__main229:
L__main144:
;q4.c,304 :: 		rele1 = 1;
0x08C2	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,305 :: 		rele2 = 1;
0x08C4	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,306 :: 		rele3 = 0;
0x08C6	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,307 :: 		rele4 = 0;
0x08C8	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,309 :: 		for(aux=0;aux<150;aux++) {  //atraso de 0.5 segundos
0x08CA	0xEF2000  	CLR	W0
0x08CC	0x884030  	MOV	W0, _aux
L_main92:
0x08CE	0x200961  	MOV	#150, W1
0x08D0	0x208060  	MOV	#lo_addr(_aux), W0
0x08D2	0xE10810  	CP	W1, [W0]
0x08D4	0x340009  	BRA LE	L_main93
L__main230:
;q4.c,310 :: 		buzzer = 0;
0x08D6	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,311 :: 		conversao(dist_cm);
0x08D8	0x80401A  	MOV	_dist_cm, W10
0x08DA	0x80402B  	MOV	_dist_cm+2, W11
0x08DC	0x07FD54  	RCALL	_conversao
;q4.c,312 :: 		criatividade = 0;
0x08DE	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,309 :: 		for(aux=0;aux<150;aux++) {  //atraso de 0.5 segundos
0x08E0	0x200011  	MOV	#1, W1
0x08E2	0x208060  	MOV	#lo_addr(_aux), W0
0x08E4	0x408810  	ADD	W1, [W0], [W0]
;q4.c,313 :: 		}
0x08E6	0x37FFF3  	BRA	L_main92
L_main93:
;q4.c,315 :: 		rele1 = 1;
0x08E8	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,316 :: 		rele2 = 1;
0x08EA	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,317 :: 		rele3 = 0;
0x08EC	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,318 :: 		rele4 = 0;
0x08EE	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,320 :: 		for(aux=0;aux<150;aux++) {  //atraso de 0.5 segundos
0x08F0	0xEF2000  	CLR	W0
0x08F2	0x884030  	MOV	W0, _aux
L_main95:
0x08F4	0x200961  	MOV	#150, W1
0x08F6	0x208060  	MOV	#lo_addr(_aux), W0
0x08F8	0xE10810  	CP	W1, [W0]
0x08FA	0x340009  	BRA LE	L_main96
L__main231:
;q4.c,321 :: 		buzzer = 1;
0x08FC	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,322 :: 		conversao(dist_cm);
0x08FE	0x80401A  	MOV	_dist_cm, W10
0x0900	0x80402B  	MOV	_dist_cm+2, W11
0x0902	0x07FD41  	RCALL	_conversao
;q4.c,323 :: 		criatividade = 1;
0x0904	0xA8A2E2  	BSET.B	LATFbits, #5
;q4.c,320 :: 		for(aux=0;aux<150;aux++) {  //atraso de 0.5 segundos
0x0906	0x200011  	MOV	#1, W1
0x0908	0x208060  	MOV	#lo_addr(_aux), W0
0x090A	0x408810  	ADD	W1, [W0], [W0]
;q4.c,324 :: 		}
0x090C	0x37FFF3  	BRA	L_main95
L_main96:
;q4.c,325 :: 		}
0x090E	0x370108  	BRA	L_main98
;q4.c,303 :: 		else if ((dist_cm > 20) && (dist_cm <= 50)){
L__main161:
L__main160:
;q4.c,326 :: 		else if ((dist_cm > 50) && (dist_cm <= 80)){
0x0910	0x200002  	MOV	#0, W2
0x0912	0x242483  	MOV	#16968, W3
0x0914	0x804010  	MOV	_dist_cm, W0
0x0916	0x804021  	MOV	_dist_cm+2, W1
0x0918	0x07FC9F  	RCALL	__Compare_Ge_Fp
0x091A	0xE00000  	CP0	W0
0x091C	0xEF6000  	CLR.B	W0
0x091E	0x340001  	BRA LE	L__main232
0x0920	0xEC6000  	INC.B	W0
L__main232:
0x0922	0xE24000  	CP0.B	W0
0x0924	0x320032  	BRA Z	L__main163
L__main233:
0x0926	0x200002  	MOV	#0, W2
0x0928	0x242A03  	MOV	#17056, W3
0x092A	0x804010  	MOV	_dist_cm, W0
0x092C	0x804021  	MOV	_dist_cm+2, W1
0x092E	0x07FC99  	RCALL	__Compare_Le_Fp
0x0930	0xE00000  	CP0	W0
0x0932	0xEF6000  	CLR.B	W0
0x0934	0x3C0001  	BRA GT	L__main234
0x0936	0xEC6000  	INC.B	W0
L__main234:
0x0938	0xE24000  	CP0.B	W0
0x093A	0x320027  	BRA Z	L__main162
L__main235:
L__main143:
;q4.c,327 :: 		rele1 = 1;
0x093C	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,328 :: 		rele2 = 1;
0x093E	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,329 :: 		rele3 = 1;
0x0940	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,330 :: 		rele4 = 0;
0x0942	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,332 :: 		for(aux=0;aux<225;aux++) {  //atraso de 0.75 segundos
0x0944	0xEF2000  	CLR	W0
0x0946	0x884030  	MOV	W0, _aux
L_main102:
0x0948	0x200E11  	MOV	#225, W1
0x094A	0x208060  	MOV	#lo_addr(_aux), W0
0x094C	0xE10810  	CP	W1, [W0]
0x094E	0x340009  	BRA LE	L_main103
L__main236:
;q4.c,333 :: 		buzzer = 0;
0x0950	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,334 :: 		conversao(dist_cm);
0x0952	0x80401A  	MOV	_dist_cm, W10
0x0954	0x80402B  	MOV	_dist_cm+2, W11
0x0956	0x07FD17  	RCALL	_conversao
;q4.c,335 :: 		criatividade = 0;
0x0958	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,332 :: 		for(aux=0;aux<225;aux++) {  //atraso de 0.75 segundos
0x095A	0x200011  	MOV	#1, W1
0x095C	0x208060  	MOV	#lo_addr(_aux), W0
0x095E	0x408810  	ADD	W1, [W0], [W0]
;q4.c,336 :: 		}
0x0960	0x37FFF3  	BRA	L_main102
L_main103:
;q4.c,338 :: 		rele1 = 1;
0x0962	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,339 :: 		rele2 = 1;
0x0964	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,340 :: 		rele3 = 1;
0x0966	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,341 :: 		rele4 = 0;
0x0968	0xA962DC  	BCLR.B	LATEbits, #3
;q4.c,343 :: 		for(aux=0;aux<225;aux++) {  //atraso de 0.75 segundos
0x096A	0xEF2000  	CLR	W0
0x096C	0x884030  	MOV	W0, _aux
L_main105:
0x096E	0x200E11  	MOV	#225, W1
0x0970	0x208060  	MOV	#lo_addr(_aux), W0
0x0972	0xE10810  	CP	W1, [W0]
0x0974	0x340009  	BRA LE	L_main106
L__main237:
;q4.c,344 :: 		buzzer = 1;
0x0976	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,345 :: 		conversao(dist_cm);
0x0978	0x80401A  	MOV	_dist_cm, W10
0x097A	0x80402B  	MOV	_dist_cm+2, W11
0x097C	0x07FD04  	RCALL	_conversao
;q4.c,346 :: 		criatividade = 0;
0x097E	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,343 :: 		for(aux=0;aux<225;aux++) {  //atraso de 0.75 segundos
0x0980	0x200011  	MOV	#1, W1
0x0982	0x208060  	MOV	#lo_addr(_aux), W0
0x0984	0x408810  	ADD	W1, [W0], [W0]
;q4.c,347 :: 		}
0x0986	0x37FFF3  	BRA	L_main105
L_main106:
;q4.c,348 :: 		}
0x0988	0x3700CB  	BRA	L_main108
;q4.c,326 :: 		else if ((dist_cm > 50) && (dist_cm <= 80)){
L__main163:
L__main162:
;q4.c,349 :: 		else if ((dist_cm > 80) && (dist_cm <= 120)){
0x098A	0x200002  	MOV	#0, W2
0x098C	0x242A03  	MOV	#17056, W3
0x098E	0x804010  	MOV	_dist_cm, W0
0x0990	0x804021  	MOV	_dist_cm+2, W1
0x0992	0x07FC62  	RCALL	__Compare_Ge_Fp
0x0994	0xE00000  	CP0	W0
0x0996	0xEF6000  	CLR.B	W0
0x0998	0x340001  	BRA LE	L__main238
0x099A	0xEC6000  	INC.B	W0
L__main238:
0x099C	0xE24000  	CP0.B	W0
0x099E	0x320032  	BRA Z	L__main165
L__main239:
0x09A0	0x200002  	MOV	#0, W2
0x09A2	0x242F03  	MOV	#17136, W3
0x09A4	0x804010  	MOV	_dist_cm, W0
0x09A6	0x804021  	MOV	_dist_cm+2, W1
0x09A8	0x07FC5C  	RCALL	__Compare_Le_Fp
0x09AA	0xE00000  	CP0	W0
0x09AC	0xEF6000  	CLR.B	W0
0x09AE	0x3C0001  	BRA GT	L__main240
0x09B0	0xEC6000  	INC.B	W0
L__main240:
0x09B2	0xE24000  	CP0.B	W0
0x09B4	0x320027  	BRA Z	L__main164
L__main241:
L__main142:
;q4.c,350 :: 		rele1 = 1;
0x09B6	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,351 :: 		rele2 = 1;
0x09B8	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,352 :: 		rele3 = 0;
0x09BA	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,353 :: 		rele4 = 1;
0x09BC	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,355 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x09BE	0xEF2000  	CLR	W0
0x09C0	0x884030  	MOV	W0, _aux
L_main112:
0x09C2	0x804031  	MOV	_aux, W1
0x09C4	0x2012C0  	MOV	#300, W0
0x09C6	0xE10800  	CP	W1, W0
0x09C8	0x3D0009  	BRA GE	L_main113
L__main242:
;q4.c,356 :: 		buzzer = 0;
0x09CA	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,357 :: 		conversao(dist_cm);
0x09CC	0x80401A  	MOV	_dist_cm, W10
0x09CE	0x80402B  	MOV	_dist_cm+2, W11
0x09D0	0x07FCDA  	RCALL	_conversao
;q4.c,358 :: 		criatividade = 0;
0x09D2	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,355 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x09D4	0x200011  	MOV	#1, W1
0x09D6	0x208060  	MOV	#lo_addr(_aux), W0
0x09D8	0x408810  	ADD	W1, [W0], [W0]
;q4.c,359 :: 		}
0x09DA	0x37FFF3  	BRA	L_main112
L_main113:
;q4.c,361 :: 		rele1 = 1;
0x09DC	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,362 :: 		rele2 = 1;
0x09DE	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,363 :: 		rele3 = 0;
0x09E0	0xA942DC  	BCLR.B	LATEbits, #2
;q4.c,364 :: 		rele4 = 1;
0x09E2	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,366 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x09E4	0xEF2000  	CLR	W0
0x09E6	0x884030  	MOV	W0, _aux
L_main115:
0x09E8	0x804031  	MOV	_aux, W1
0x09EA	0x2012C0  	MOV	#300, W0
0x09EC	0xE10800  	CP	W1, W0
0x09EE	0x3D0009  	BRA GE	L_main116
L__main243:
;q4.c,367 :: 		buzzer = 1;
0x09F0	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,368 :: 		conversao(dist_cm);
0x09F2	0x80401A  	MOV	_dist_cm, W10
0x09F4	0x80402B  	MOV	_dist_cm+2, W11
0x09F6	0x07FCC7  	RCALL	_conversao
;q4.c,369 :: 		criatividade = 0;
0x09F8	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,366 :: 		for(aux=0;aux<300;aux++) {  //atraso de 1 segundo
0x09FA	0x200011  	MOV	#1, W1
0x09FC	0x208060  	MOV	#lo_addr(_aux), W0
0x09FE	0x408810  	ADD	W1, [W0], [W0]
;q4.c,370 :: 		}
0x0A00	0x37FFF3  	BRA	L_main115
L_main116:
;q4.c,371 :: 		}
0x0A02	0x37008E  	BRA	L_main118
;q4.c,349 :: 		else if ((dist_cm > 80) && (dist_cm <= 120)){
L__main165:
L__main164:
;q4.c,372 :: 		else if ((dist_cm > 120) && (dist_cm <= 180)){
0x0A04	0x200002  	MOV	#0, W2
0x0A06	0x242F03  	MOV	#17136, W3
0x0A08	0x804010  	MOV	_dist_cm, W0
0x0A0A	0x804021  	MOV	_dist_cm+2, W1
0x0A0C	0x07FC25  	RCALL	__Compare_Ge_Fp
0x0A0E	0xE00000  	CP0	W0
0x0A10	0xEF6000  	CLR.B	W0
0x0A12	0x340001  	BRA LE	L__main244
0x0A14	0xEC6000  	INC.B	W0
L__main244:
0x0A16	0xE24000  	CP0.B	W0
0x0A18	0x320032  	BRA Z	L__main167
L__main245:
0x0A1A	0x200002  	MOV	#0, W2
0x0A1C	0x243343  	MOV	#17204, W3
0x0A1E	0x804010  	MOV	_dist_cm, W0
0x0A20	0x804021  	MOV	_dist_cm+2, W1
0x0A22	0x07FC1F  	RCALL	__Compare_Le_Fp
0x0A24	0xE00000  	CP0	W0
0x0A26	0xEF6000  	CLR.B	W0
0x0A28	0x3C0001  	BRA GT	L__main246
0x0A2A	0xEC6000  	INC.B	W0
L__main246:
0x0A2C	0xE24000  	CP0.B	W0
0x0A2E	0x320027  	BRA Z	L__main166
L__main247:
L__main141:
;q4.c,373 :: 		rele1 = 1;
0x0A30	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,374 :: 		rele2 = 0;
0x0A32	0xA922DC  	BCLR.B	LATEbits, #1
;q4.c,375 :: 		rele3 = 1;
0x0A34	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,376 :: 		rele4 = 1;
0x0A36	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,378 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x0A38	0xEF2000  	CLR	W0
0x0A3A	0x884030  	MOV	W0, _aux
L_main122:
0x0A3C	0x804031  	MOV	_aux, W1
0x0A3E	0x202580  	MOV	#600, W0
0x0A40	0xE10800  	CP	W1, W0
0x0A42	0x3D0009  	BRA GE	L_main123
L__main248:
;q4.c,379 :: 		buzzer = 0;
0x0A44	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,380 :: 		conversao(dist_cm);
0x0A46	0x80401A  	MOV	_dist_cm, W10
0x0A48	0x80402B  	MOV	_dist_cm+2, W11
0x0A4A	0x07FC9D  	RCALL	_conversao
;q4.c,381 :: 		criatividade = 0;
0x0A4C	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,378 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x0A4E	0x200011  	MOV	#1, W1
0x0A50	0x208060  	MOV	#lo_addr(_aux), W0
0x0A52	0x408810  	ADD	W1, [W0], [W0]
;q4.c,382 :: 		}
0x0A54	0x37FFF3  	BRA	L_main122
L_main123:
;q4.c,384 :: 		rele1 = 1;
0x0A56	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,385 :: 		rele2 = 0;
0x0A58	0xA922DC  	BCLR.B	LATEbits, #1
;q4.c,386 :: 		rele3 = 1;
0x0A5A	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,387 :: 		rele4 = 1;
0x0A5C	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,389 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x0A5E	0xEF2000  	CLR	W0
0x0A60	0x884030  	MOV	W0, _aux
L_main125:
0x0A62	0x804031  	MOV	_aux, W1
0x0A64	0x202580  	MOV	#600, W0
0x0A66	0xE10800  	CP	W1, W0
0x0A68	0x3D0009  	BRA GE	L_main126
L__main249:
;q4.c,390 :: 		buzzer = 1;
0x0A6A	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,391 :: 		conversao(dist_cm);
0x0A6C	0x80401A  	MOV	_dist_cm, W10
0x0A6E	0x80402B  	MOV	_dist_cm+2, W11
0x0A70	0x07FC8A  	RCALL	_conversao
;q4.c,392 :: 		criatividade = 0;
0x0A72	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,389 :: 		for(aux=0;aux<600;aux++) {  //atraso de 2 segundos
0x0A74	0x200011  	MOV	#1, W1
0x0A76	0x208060  	MOV	#lo_addr(_aux), W0
0x0A78	0x408810  	ADD	W1, [W0], [W0]
;q4.c,393 :: 		}
0x0A7A	0x37FFF3  	BRA	L_main125
L_main126:
;q4.c,394 :: 		}
0x0A7C	0x370051  	BRA	L_main128
;q4.c,372 :: 		else if ((dist_cm > 120) && (dist_cm <= 180)){
L__main167:
L__main166:
;q4.c,395 :: 		else if ((dist_cm > 180) && (dist_cm <= 200)){
0x0A7E	0x200002  	MOV	#0, W2
0x0A80	0x243343  	MOV	#17204, W3
0x0A82	0x804010  	MOV	_dist_cm, W0
0x0A84	0x804021  	MOV	_dist_cm+2, W1
0x0A86	0x07FBE8  	RCALL	__Compare_Ge_Fp
0x0A88	0xE00000  	CP0	W0
0x0A8A	0xEF6000  	CLR.B	W0
0x0A8C	0x340001  	BRA LE	L__main250
0x0A8E	0xEC6000  	INC.B	W0
L__main250:
0x0A90	0xE24000  	CP0.B	W0
0x0A92	0x320032  	BRA Z	L__main169
L__main251:
0x0A94	0x200002  	MOV	#0, W2
0x0A96	0x243483  	MOV	#17224, W3
0x0A98	0x804010  	MOV	_dist_cm, W0
0x0A9A	0x804021  	MOV	_dist_cm+2, W1
0x0A9C	0x07FBE2  	RCALL	__Compare_Le_Fp
0x0A9E	0xE00000  	CP0	W0
0x0AA0	0xEF6000  	CLR.B	W0
0x0AA2	0x3C0001  	BRA GT	L__main252
0x0AA4	0xEC6000  	INC.B	W0
L__main252:
0x0AA6	0xE24000  	CP0.B	W0
0x0AA8	0x320027  	BRA Z	L__main168
L__main253:
L__main140:
;q4.c,396 :: 		rele1 = 0;
0x0AAA	0xA902DC  	BCLR.B	LATEbits, #0
;q4.c,397 :: 		rele2 = 1;
0x0AAC	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,398 :: 		rele3 = 1;
0x0AAE	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,399 :: 		rele4 = 1;
0x0AB0	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,401 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x0AB2	0xEF2000  	CLR	W0
0x0AB4	0x884030  	MOV	W0, _aux
L_main132:
0x0AB6	0x804031  	MOV	_aux, W1
0x0AB8	0x203840  	MOV	#900, W0
0x0ABA	0xE10800  	CP	W1, W0
0x0ABC	0x3D0009  	BRA GE	L_main133
L__main254:
;q4.c,402 :: 		buzzer = 0;
0x0ABE	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,403 :: 		conversao(dist_cm);
0x0AC0	0x80401A  	MOV	_dist_cm, W10
0x0AC2	0x80402B  	MOV	_dist_cm+2, W11
0x0AC4	0x07FC60  	RCALL	_conversao
;q4.c,404 :: 		criatividade = 0;
0x0AC6	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,401 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x0AC8	0x200011  	MOV	#1, W1
0x0ACA	0x208060  	MOV	#lo_addr(_aux), W0
0x0ACC	0x408810  	ADD	W1, [W0], [W0]
;q4.c,405 :: 		}
0x0ACE	0x37FFF3  	BRA	L_main132
L_main133:
;q4.c,407 :: 		rele1 = 0;
0x0AD0	0xA902DC  	BCLR.B	LATEbits, #0
;q4.c,408 :: 		rele2 = 1;
0x0AD2	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,409 :: 		rele3 = 1;
0x0AD4	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,410 :: 		rele4 = 1;
0x0AD6	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,412 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x0AD8	0xEF2000  	CLR	W0
0x0ADA	0x884030  	MOV	W0, _aux
L_main135:
0x0ADC	0x804031  	MOV	_aux, W1
0x0ADE	0x203840  	MOV	#900, W0
0x0AE0	0xE10800  	CP	W1, W0
0x0AE2	0x3D0009  	BRA GE	L_main136
L__main255:
;q4.c,413 :: 		buzzer = 1;
0x0AE4	0xA862D6  	BSET.B	LATDbits, #3
;q4.c,414 :: 		conversao(dist_cm);
0x0AE6	0x80401A  	MOV	_dist_cm, W10
0x0AE8	0x80402B  	MOV	_dist_cm+2, W11
0x0AEA	0x07FC4D  	RCALL	_conversao
;q4.c,415 :: 		criatividade = 0;
0x0AEC	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,412 :: 		for(aux=0;aux<900;aux++) {  //atraso de 3 segundos
0x0AEE	0x200011  	MOV	#1, W1
0x0AF0	0x208060  	MOV	#lo_addr(_aux), W0
0x0AF2	0x408810  	ADD	W1, [W0], [W0]
;q4.c,416 :: 		}
0x0AF4	0x37FFF3  	BRA	L_main135
L_main136:
;q4.c,417 :: 		}
0x0AF6	0x370014  	BRA	L_main138
;q4.c,395 :: 		else if ((dist_cm > 180) && (dist_cm <= 200)){
L__main169:
L__main168:
;q4.c,418 :: 		else if ((dist_cm > 200)){
0x0AF8	0x200002  	MOV	#0, W2
0x0AFA	0x243483  	MOV	#17224, W3
0x0AFC	0x804010  	MOV	_dist_cm, W0
0x0AFE	0x804021  	MOV	_dist_cm+2, W1
0x0B00	0x07FBAB  	RCALL	__Compare_Ge_Fp
0x0B02	0xE00000  	CP0	W0
0x0B04	0xEF6000  	CLR.B	W0
0x0B06	0x340001  	BRA LE	L__main256
0x0B08	0xEC6000  	INC.B	W0
L__main256:
0x0B0A	0xE24000  	CP0.B	W0
0x0B0C	0x320009  	BRA Z	L_main139
L__main257:
;q4.c,419 :: 		buzzer = 0; // buzzer sempre desligado
0x0B0E	0xA962D6  	BCLR.B	LATDbits, #3
;q4.c,420 :: 		conversao(dist_cm);
0x0B10	0x80401A  	MOV	_dist_cm, W10
0x0B12	0x80402B  	MOV	_dist_cm+2, W11
0x0B14	0x07FC38  	RCALL	_conversao
;q4.c,421 :: 		rele1 = 1;  // rel?1 desligado
0x0B16	0xA802DC  	BSET.B	LATEbits, #0
;q4.c,422 :: 		rele2 = 1;  // rel?2 desligado
0x0B18	0xA822DC  	BSET.B	LATEbits, #1
;q4.c,423 :: 		rele3 = 1;  // rel?3 desligado
0x0B1A	0xA842DC  	BSET.B	LATEbits, #2
;q4.c,424 :: 		rele4 = 1;  // rel?4 desligado
0x0B1C	0xA862DC  	BSET.B	LATEbits, #3
;q4.c,425 :: 		criatividade = 0;
0x0B1E	0xA9A2E2  	BCLR.B	LATFbits, #5
;q4.c,426 :: 		}
L_main139:
L_main138:
L_main128:
L_main118:
L_main108:
L_main98:
L_main88:
;q4.c,427 :: 		}
L_main86:
;q4.c,428 :: 		}
0x0B20	0x37FD37  	BRA	L_main28
;q4.c,429 :: 		} // fim void
L_end_main:
0x0B22	0x7805CF  	POP	W11
0x0B24	0x78054F  	POP	W10
L__main_end_loop:
0x0B26	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_conversao:
0x0386	0xFA0002  	LNK	#2
;q4.c,78 :: 		int conversao(float distancia){
;q4.c,80 :: 		dist_disp = distancia;
0x0388	0xBE000A  	MOV.D	W10, W0
0x038A	0x07FEF1  	RCALL	__Float2Longint
0x038C	0x980700  	MOV	W0, [W14+0]
;q4.c,82 :: 		unidade1 = (dist_disp/1)%10;
0x038E	0x2000A2  	MOV	#10, W2
0x0390	0x090011  	REPEAT	#17
0x0392	0xD80002  	DIV.S	W0, W2
0x0394	0x780001  	MOV	W1, W0
; unidade1 start address is: 6 (W3)
0x0396	0x780180  	MOV	W0, W3
;q4.c,83 :: 		dezena1 = (dist_disp/10)%10;
0x0398	0x2000A2  	MOV	#10, W2
0x039A	0x90000E  	MOV	[W14+0], W0
0x039C	0x090011  	REPEAT	#17
0x039E	0xD80002  	DIV.S	W0, W2
0x03A0	0x2000A2  	MOV	#10, W2
0x03A2	0x090011  	REPEAT	#17
0x03A4	0xD80002  	DIV.S	W0, W2
0x03A6	0x780001  	MOV	W1, W0
; dezena1 start address is: 8 (W4)
0x03A8	0x780200  	MOV	W0, W4
;q4.c,84 :: 		centena1 = (dist_disp/100)%10;
0x03AA	0x200642  	MOV	#100, W2
0x03AC	0x90000E  	MOV	[W14+0], W0
0x03AE	0x090011  	REPEAT	#17
0x03B0	0xD80002  	DIV.S	W0, W2
0x03B2	0x2000A2  	MOV	#10, W2
0x03B4	0x090011  	REPEAT	#17
0x03B6	0xD80002  	DIV.S	W0, W2
0x03B8	0x780001  	MOV	W1, W0
; centena1 start address is: 2 (W1)
0x03BA	0x780080  	MOV	W0, W1
;q4.c,86 :: 		for(Ia=0; Ia<3; Ia++) {  // multiplexa??o para exibi??o dos valores nos displays
; Ia start address is: 0 (W0)
0x03BC	0xEF2000  	CLR	W0
; dezena1 end address is: 8 (W4)
; Ia end address is: 0 (W0)
0x03BE	0x780104  	MOV	W4, W2
0x03C0	0x780200  	MOV	W0, W4
L_conversao14:
; Ia start address is: 8 (W4)
; dezena1 start address is: 4 (W2)
; centena1 start address is: 2 (W1)
; centena1 end address is: 2 (W1)
; dezena1 start address is: 4 (W2)
; dezena1 end address is: 4 (W2)
; unidade1 start address is: 6 (W3)
; unidade1 end address is: 6 (W3)
0x03C2	0xE12063  	CP	W4, #3
0x03C4	0x3D0039  	BRA GE	L_conversao15
L__conversao184:
; centena1 end address is: 2 (W1)
; dezena1 end address is: 4 (W2)
; unidade1 end address is: 6 (W3)
;q4.c,87 :: 		switch (Ia){
; unidade1 start address is: 6 (W3)
; dezena1 start address is: 4 (W2)
; centena1 start address is: 2 (W1)
0x03C6	0x370030  	BRA	L_conversao17
;q4.c,88 :: 		case(0): mux1 = 0;
L_conversao19:
0x03C8	0xA902E2  	BCLR.B	LATFbits, #0
;q4.c,89 :: 		mux2 = 0;
0x03CA	0xA922E2  	BCLR.B	LATFbits, #1
;q4.c,90 :: 		mux3 = 1;
0x03CC	0xA882E2  	BSET.B	LATFbits, #4
;q4.c,91 :: 		display = dis_play(unidade1);
0x03CE	0xBE9F8A  	PUSH.D	W10
0x03D0	0x780503  	MOV	W3, W10
0x03D2	0x07FE96  	RCALL	_dis_play
0x03D4	0xBE054F  	POP.D	W10
0x03D6	0xB7A2CA  	MOV	WREG, LATB
;q4.c,92 :: 		delay_ms(1);
0x03D8	0x214D57  	MOV	#5333, W7
L_conversao20:
0x03DA	0xED200E  	DEC	W7
0x03DC	0x3AFFFE  	BRA NZ	L_conversao20
0x03DE	0x000000  	NOP
;q4.c,93 :: 		mux1 = 0;
0x03E0	0xA902E2  	BCLR.B	LATFbits, #0
;q4.c,94 :: 		mux2 = 0;
0x03E2	0xA922E2  	BCLR.B	LATFbits, #1
;q4.c,95 :: 		mux3 = 0;
0x03E4	0xA982E2  	BCLR.B	LATFbits, #4
;q4.c,96 :: 		break;
0x03E6	0x370026  	BRA	L_conversao18
;q4.c,97 :: 		case(1): mux1 = 0;
L_conversao22:
0x03E8	0xA902E2  	BCLR.B	LATFbits, #0
;q4.c,98 :: 		mux2 = 1;
0x03EA	0xA822E2  	BSET.B	LATFbits, #1
;q4.c,99 :: 		mux3 = 0;
0x03EC	0xA982E2  	BCLR.B	LATFbits, #4
;q4.c,100 :: 		display = dis_play(dezena1);
0x03EE	0xBE9F8A  	PUSH.D	W10
0x03F0	0x780502  	MOV	W2, W10
0x03F2	0x07FE86  	RCALL	_dis_play
0x03F4	0xBE054F  	POP.D	W10
0x03F6	0xB7A2CA  	MOV	WREG, LATB
;q4.c,101 :: 		delay_ms(1);
0x03F8	0x214D57  	MOV	#5333, W7
L_conversao23:
0x03FA	0xED200E  	DEC	W7
0x03FC	0x3AFFFE  	BRA NZ	L_conversao23
0x03FE	0x000000  	NOP
;q4.c,102 :: 		mux1 = 0;
0x0400	0xA902E2  	BCLR.B	LATFbits, #0
;q4.c,103 :: 		mux2 = 0;
0x0402	0xA922E2  	BCLR.B	LATFbits, #1
;q4.c,104 :: 		mux3 = 0;
0x0404	0xA982E2  	BCLR.B	LATFbits, #4
;q4.c,105 :: 		break;
0x0406	0x370016  	BRA	L_conversao18
;q4.c,106 :: 		case(2): mux1 = 1;
L_conversao25:
0x0408	0xA802E2  	BSET.B	LATFbits, #0
;q4.c,107 :: 		mux2 = 0;
0x040A	0xA922E2  	BCLR.B	LATFbits, #1
;q4.c,108 :: 		mux3 = 0;
0x040C	0xA982E2  	BCLR.B	LATFbits, #4
;q4.c,109 :: 		display = dis_play(centena1);
0x040E	0xBE9F8A  	PUSH.D	W10
0x0410	0x780501  	MOV	W1, W10
0x0412	0x07FE76  	RCALL	_dis_play
0x0414	0xBE054F  	POP.D	W10
0x0416	0xB7A2CA  	MOV	WREG, LATB
;q4.c,110 :: 		delay_ms(1);
0x0418	0x214D57  	MOV	#5333, W7
L_conversao26:
0x041A	0xED200E  	DEC	W7
0x041C	0x3AFFFE  	BRA NZ	L_conversao26
0x041E	0x000000  	NOP
;q4.c,111 :: 		mux1 = 0;
0x0420	0xA902E2  	BCLR.B	LATFbits, #0
;q4.c,112 :: 		mux2 = 0;
0x0422	0xA922E2  	BCLR.B	LATFbits, #1
;q4.c,113 :: 		mux3 = 0;
0x0424	0xA982E2  	BCLR.B	LATFbits, #4
;q4.c,114 :: 		break;
0x0426	0x370006  	BRA	L_conversao18
;q4.c,115 :: 		}
L_conversao17:
0x0428	0xE12060  	CP	W4, #0
0x042A	0x32FFCE  	BRA Z	L_conversao19
L__conversao185:
0x042C	0xE12061  	CP	W4, #1
0x042E	0x32FFDC  	BRA Z	L_conversao22
L__conversao186:
0x0430	0xE12062  	CP	W4, #2
0x0432	0x32FFEA  	BRA Z	L_conversao25
L__conversao187:
L_conversao18:
;q4.c,86 :: 		for(Ia=0; Ia<3; Ia++) {  // multiplexa??o para exibi??o dos valores nos displays
0x0434	0xEC2008  	INC	W4
;q4.c,116 :: 		}
; centena1 end address is: 2 (W1)
; dezena1 end address is: 4 (W2)
; unidade1 end address is: 6 (W3)
; Ia end address is: 8 (W4)
0x0436	0x37FFC5  	BRA	L_conversao14
L_conversao15:
;q4.c,117 :: 		}
L_end_conversao:
0x0438	0xFA8000  	ULNK
0x043A	0x060000  	RETURN
; end of _conversao
_dis_play:
0x0100	0xFA0002  	LNK	#2
;q4.c,51 :: 		int dis_play(int valor){
;q4.c,53 :: 		switch(valor){
0x0102	0x37001E  	BRA	L_dis_play2
;q4.c,54 :: 		case 0: resp = 192;
L_dis_play4:
0x0104	0x200C00  	MOV	#192, W0
0x0106	0x980700  	MOV	W0, [W14+0]
;q4.c,55 :: 		break;
0x0108	0x37002F  	BRA	L_dis_play3
;q4.c,56 :: 		case 1: resp = 249;
L_dis_play5:
0x010A	0x200F90  	MOV	#249, W0
0x010C	0x980700  	MOV	W0, [W14+0]
;q4.c,57 :: 		break;
0x010E	0x37002C  	BRA	L_dis_play3
;q4.c,58 :: 		case 2: resp = 164;
L_dis_play6:
0x0110	0x200A40  	MOV	#164, W0
0x0112	0x980700  	MOV	W0, [W14+0]
;q4.c,59 :: 		break;
0x0114	0x370029  	BRA	L_dis_play3
;q4.c,60 :: 		case 3: resp = 176;
L_dis_play7:
0x0116	0x200B00  	MOV	#176, W0
0x0118	0x980700  	MOV	W0, [W14+0]
;q4.c,61 :: 		break;
0x011A	0x370026  	BRA	L_dis_play3
;q4.c,62 :: 		case 4: resp = 153;
L_dis_play8:
0x011C	0x200990  	MOV	#153, W0
0x011E	0x980700  	MOV	W0, [W14+0]
;q4.c,63 :: 		break;
0x0120	0x370023  	BRA	L_dis_play3
;q4.c,64 :: 		case 5: resp = 146;
L_dis_play9:
0x0122	0x200920  	MOV	#146, W0
0x0124	0x980700  	MOV	W0, [W14+0]
;q4.c,65 :: 		break;
0x0126	0x370020  	BRA	L_dis_play3
;q4.c,66 :: 		case 6: resp = 130;
L_dis_play10:
0x0128	0x200820  	MOV	#130, W0
0x012A	0x980700  	MOV	W0, [W14+0]
;q4.c,67 :: 		break;
0x012C	0x37001D  	BRA	L_dis_play3
;q4.c,68 :: 		case 7: resp = 248;
L_dis_play11:
0x012E	0x200F80  	MOV	#248, W0
0x0130	0x980700  	MOV	W0, [W14+0]
;q4.c,69 :: 		break;
0x0132	0x37001A  	BRA	L_dis_play3
;q4.c,70 :: 		case 8: resp = 128;
L_dis_play12:
0x0134	0x200800  	MOV	#128, W0
0x0136	0x980700  	MOV	W0, [W14+0]
;q4.c,71 :: 		break;
0x0138	0x370017  	BRA	L_dis_play3
;q4.c,72 :: 		case 9: resp = 152;
L_dis_play13:
0x013A	0x200980  	MOV	#152, W0
0x013C	0x980700  	MOV	W0, [W14+0]
;q4.c,73 :: 		break;
0x013E	0x370014  	BRA	L_dis_play3
;q4.c,74 :: 		}
L_dis_play2:
0x0140	0xE15060  	CP	W10, #0
0x0142	0x32FFE0  	BRA Z	L_dis_play4
L__dis_play173:
0x0144	0xE15061  	CP	W10, #1
0x0146	0x32FFE1  	BRA Z	L_dis_play5
L__dis_play174:
0x0148	0xE15062  	CP	W10, #2
0x014A	0x32FFE2  	BRA Z	L_dis_play6
L__dis_play175:
0x014C	0xE15063  	CP	W10, #3
0x014E	0x32FFE3  	BRA Z	L_dis_play7
L__dis_play176:
0x0150	0xE15064  	CP	W10, #4
0x0152	0x32FFE4  	BRA Z	L_dis_play8
L__dis_play177:
0x0154	0xE15065  	CP	W10, #5
0x0156	0x32FFE5  	BRA Z	L_dis_play9
L__dis_play178:
0x0158	0xE15066  	CP	W10, #6
0x015A	0x32FFE6  	BRA Z	L_dis_play10
L__dis_play179:
0x015C	0xE15067  	CP	W10, #7
0x015E	0x32FFE7  	BRA Z	L_dis_play11
L__dis_play180:
0x0160	0xE15068  	CP	W10, #8
0x0162	0x32FFE8  	BRA Z	L_dis_play12
L__dis_play181:
0x0164	0xE15069  	CP	W10, #9
0x0166	0x32FFE9  	BRA Z	L_dis_play13
L__dis_play182:
L_dis_play3:
;q4.c,75 :: 		return resp;
0x0168	0x90000E  	MOV	[W14+0], W0
;q4.c,76 :: 		}
L_end_dis_play:
0x016A	0xFA8000  	ULNK
0x016C	0x060000  	RETURN
; end of _dis_play
__Float2Longint:
0x016E	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0170	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0172	0x0000000401E2  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x0176	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.c,488 :: 		
0x0178	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x017A	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.c,490 :: 		
0x017C	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.c,491 :: 		
0x017E	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.c,492 :: 		
0x0180	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x0182	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x0184	0xE12868  	CP	W5, #8
;__Lib_MathDouble.c,495 :: 		
0x0186	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x0188	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,497 :: 		
0x018A	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,498 :: 		
0x018C	0xE20006  	CP0	W3
;__Lib_MathDouble.c,499 :: 		
0x018E	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x0190	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.c,501 :: 		
0x0192	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x0194	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,504 :: 		
0x0196	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,505 :: 		
0x0198	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,506 :: 		
0x019A	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x019C	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x019E	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.c,510 :: 		
0x01A0	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x01A2	0xEB0080  	CLR	W1
;__Lib_MathDouble.c,512 :: 		
0x01A4	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x01A6	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.c,515 :: 		
0x01A8	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.c,516 :: 		
0x01AA	0xE80285  	INC	W5, W5
;__Lib_MathDouble.c,517 :: 		
0x01AC	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x01AE	0xE20006  	CP0	W3
;__Lib_MathDouble.c,520 :: 		
0x01B0	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x01B2	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,522 :: 		
0x01B4	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x01B6	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x01B8	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,527 :: 		
0x01BA	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,528 :: 		
0x01BC	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,529 :: 		
0x01BE	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x01C0	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,531 :: 		
0x01C2	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x01C4	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,534 :: 		
0x01C6	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x01C8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,537 :: 		
0x01CA	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x01CC	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x01CE	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x01D0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,543 :: 		
0x01D2	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x01D4	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x01D6	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x01D8	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,549 :: 		
0x01DA	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,550 :: 		
0x01DC	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x01DE	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,552 :: 		
0x01E0	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x01E2	0xFA8000  	ULNK
0x01E4	0x060000  	RETURN
; end of __Float2Longint
__Long2Float:
0x043C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x043E	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0440	0x0000000404EE  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x0444	0xE20004  	CP0	W2
;__Lib_MathDouble.c,111 :: 		
0x0446	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0448	0xEB0500  	CLR	W10
;__Lib_MathDouble.c,115 :: 		
0x044A	0xE20002  	CP0	W1
;__Lib_MathDouble.c,116 :: 		
0x044C	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x044E	0xE20000  	CP0	W0
;__Lib_MathDouble.c,118 :: 		
0x0450	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x0452	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x0454	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.c,123 :: 		
0x0456	0xE20002  	CP0	W1
;__Lib_MathDouble.c,124 :: 		
0x0458	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x045A	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x045C	0xE20000  	CP0	W0
;__Lib_MathDouble.c,127 :: 		
0x045E	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x0460	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x0462	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.c,131 :: 		
0x0464	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.c,132 :: 		
0x0466	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x0468	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.c,134 :: 		
0x046A	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x046C	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,138 :: 		
0x046E	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.c,139 :: 		
0x0470	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.c,140 :: 		
0x0472	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.c,141 :: 		
0x0474	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x0476	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.c,143 :: 		
0x0478	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x047A	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.c,146 :: 		
0x047C	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x047E	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x0480	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,150 :: 		
0x0482	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,151 :: 		
0x0484	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,152 :: 		
0x0486	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,153 :: 		
0x0488	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,154 :: 		
0x048A	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.c,155 :: 		
0x048C	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x048E	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x0490	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.c,159 :: 		
0x0492	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.c,160 :: 		
0x0494	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,161 :: 		
0x0496	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.c,162 :: 		
0x0498	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x049A	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x049C	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.c,166 :: 		
0x049E	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x04A0	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x04A2	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,171 :: 		
0x04A4	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,172 :: 		
0x04A6	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x04A8	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,174 :: 		
0x04AA	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,175 :: 		
0x04AC	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,176 :: 		
0x04AE	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x04B0	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,179 :: 		
0x04B2	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,180 :: 		
0x04B4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,181 :: 		
0x04B6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,182 :: 		
0x04B8	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,183 :: 		
0x04BA	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x04BC	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x04BE	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,187 :: 		
0x04C0	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,188 :: 		
0x04C2	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,189 :: 		
0x04C4	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x04C6	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,191 :: 		
0x04C8	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,192 :: 		
0x04CA	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,193 :: 		
0x04CC	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x04CE	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,195 :: 		
0x04D0	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,196 :: 		
0x04D2	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x04D4	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,198 :: 		
0x04D6	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x04D8	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,201 :: 		
0x04DA	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,202 :: 		
0x04DC	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x04DE	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,204 :: 		
0x04E0	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,205 :: 		
0x04E2	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,206 :: 		
0x04E4	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,207 :: 		
0x04E6	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x04E8	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x04EA	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,212 :: 		
0x04EC	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x04EE	0xFA8000  	ULNK
0x04F0	0x060000  	RETURN
; end of __Long2Float
__Mul_FP:
0x026C	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x026E	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x0270	0x000000040382  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x0274	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.c,863 :: 		
0x0276	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.c,864 :: 		
0x0278	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.c,865 :: 		
0x027A	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x027C	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x027E	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.c,868 :: 		
0x0280	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,869 :: 		
0x0282	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x0284	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,871 :: 		
0x0286	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x0288	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,873 :: 		
0x028A	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x028C	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,875 :: 		
0x028E	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x0290	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.c,877 :: 		
0x0292	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.c,878 :: 		
0x0294	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.c,879 :: 		
0x0296	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.c,880 :: 		
0x0298	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.c,881 :: 		
0x029A	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.c,882 :: 		
0x029C	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.c,883 :: 		
0x029E	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.c,884 :: 		
0x02A0	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.c,885 :: 		
0x02A2	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.c,886 :: 		
0x02A4	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x02A6	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,888 :: 		
0x02A8	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.c,889 :: 		
0x02AA	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.c,890 :: 		
0x02AC	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x02AE	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.c,893 :: 		
0x02B0	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.c,894 :: 		
0x02B2	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x02B4	0x200013  	MOV	#1, W3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x02B6	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.c,898 :: 		
0x02B8	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.c,899 :: 		
0x02BA	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.c,900 :: 		
0x02BC	0xB20012  	AND	#1, W2
;__Lib_MathDouble.c,901 :: 		
0x02BE	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.c,902 :: 		
0x02C0	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.c,903 :: 		
0x02C2	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x02C4	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.c,906 :: 		
0x02C6	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.c,907 :: 		
0x02C8	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.c,908 :: 		
0x02CA	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x02CC	0xE12061  	CP	W4, #1
;__Lib_MathDouble.c,911 :: 		
0x02CE	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x02D0	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x02D2	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,916 :: 		
0x02D4	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x02D6	0xE15061  	CP	W10, #1
;__Lib_MathDouble.c,919 :: 		
0x02D8	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x02DA	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x02DC	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,923 :: 		
0x02DE	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x02E0	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,925 :: 		
0x02E2	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,926 :: 		
0x02E4	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,927 :: 		
0x02E6	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x02E8	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,929 :: 		
0x02EA	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x02EC	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,932 :: 		
0x02EE	0xE15064  	CP	W10, #4
;__Lib_MathDouble.c,933 :: 		
0x02F0	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x02F2	0xE12064  	CP	W4, #4
;__Lib_MathDouble.c,935 :: 		
0x02F4	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x02F6	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.c,937 :: 		
0x02F8	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x02FA	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x02FC	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x02FE	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.c,944 :: 		
0x0300	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.c,945 :: 		
0x0302	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.c,946 :: 		
0x0304	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x0306	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,949 :: 		
0x0308	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.c,950 :: 		
0x030A	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x030C	0x200081  	MOV	#8, W1
;__Lib_MathDouble.c,953 :: 		
0x030E	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.c,954 :: 		
0x0310	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x0312	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.c,956 :: 		
0x0314	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.c,957 :: 		
0x0316	0xE10001  	CP	W0, W1
;__Lib_MathDouble.c,958 :: 		
0x0318	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x031A	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.c,961 :: 		
0x031C	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.c,962 :: 		
0x031E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,963 :: 		
0x0320	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,964 :: 		
0x0322	0xE80000  	INC	W0, W0
;__Lib_MathDouble.c,965 :: 		
0x0324	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x0326	0x200071  	MOV	#7, W1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x0328	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.c,969 :: 		
0x032A	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.c,970 :: 		
0x032C	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.c,971 :: 		
0x032E	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x0330	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.c,973 :: 		
0x0332	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.c,974 :: 		
0x0334	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.c,975 :: 		
0x0336	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x0338	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.c,977 :: 		
0x033A	0xE10868  	CP	W1, #8
;__Lib_MathDouble.c,978 :: 		
0x033C	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x033E	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.c,980 :: 		
0x0340	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x0342	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.c,983 :: 		
0x0344	0xE15802  	CP	W11, W2
;__Lib_MathDouble.c,984 :: 		
0x0346	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x0348	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.c,986 :: 		
0x034A	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.c,987 :: 		
0x034C	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.c,988 :: 		
0x034E	0x880008  	MOV	W8, W0
;__Lib_MathDouble.c,989 :: 		
0x0350	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x0352	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x0354	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.c,994 :: 		
0x0356	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x0358	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,997 :: 		
0x035A	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,998 :: 		
0x035C	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,999 :: 		
0x035E	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x0360	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1001 :: 		
0x0362	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x0364	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1004 :: 		
0x0366	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x0368	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1007 :: 		
0x036A	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x036C	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x036E	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x0370	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1013 :: 		
0x0372	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x0374	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x0376	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x0378	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1019 :: 		
0x037A	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1020 :: 		
0x037C	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x037E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1022 :: 		
0x0380	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x0382	0xFA8000  	ULNK
0x0384	0x060000  	RETURN
; end of __Mul_FP
__Compare_Ge_Fp:
0x0258	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1354 :: 		
;__Lib_MathDouble.c,1355 :: 		
0x025A	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.c,1356 :: 		
0x025C	0x07FFC4  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1357 :: 		
L_end__Compare_Ge_Fp:
0x025E	0xFA8000  	ULNK
0x0260	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Compare_Fp:
0x01E6	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1272 :: 		
;__Lib_MathDouble.c,1274 :: 		
0x01E8	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.c,1275 :: 		
0x01EA	0x000000040254  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.c,1277 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.c,1278 :: 		
0x01EE	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.c,1279 :: 		
0x01F0	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.c,1280 :: 		
0x01F2	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.c,1281 :: 		
0x01F4	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.c,1282 :: 		
0x01F6	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.c,1283 :: 		
0x01F8	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.c,1284 :: 		
0x01FA	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.c,1285 :: 		
0x01FC	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.c,1286 :: 		
0x01FE	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.c,1287 :: 		
0x0200	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.c,1288 :: 		
0x0202	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.c,1289 :: 		
0x0204	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1290 :: 		
0x0206	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.c,1291 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.c,1292 :: 		
0x0208	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.c,1293 :: 		
0x020A	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.c,1294 :: 		
0x020C	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.c,1295 :: 		
0x020E	0x200010  	MOV	#1, W0
;__Lib_MathDouble.c,1296 :: 		
0x0210	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.c,1297 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.c,1298 :: 		
0x0212	0x200000  	MOV	#0, W0
;__Lib_MathDouble.c,1299 :: 		
CompareFp_adjust:
;__Lib_MathDouble.c,1300 :: 		
0x0214	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.c,1301 :: 		
0x0216	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.c,1302 :: 		
CompareFp_exit:
;__Lib_MathDouble.c,1303 :: 		
0x0218	0x060000  	RETURN
;__Lib_MathDouble.c,1304 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.c,1305 :: 		
0x021A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.c,1306 :: 		
0x021C	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1307 :: 		
0x021E	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.c,1308 :: 		
0x0220	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.c,1309 :: 		
0x0222	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.c,1310 :: 		
0x0224	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.c,1311 :: 		
0x0226	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.c,1312 :: 		
0x0228	0x060000  	RETURN
;__Lib_MathDouble.c,1313 :: 		
CompareFp__funpack:
;__Lib_MathDouble.c,1314 :: 		
0x022A	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.c,1315 :: 		
0x022C	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.c,1316 :: 		
0x022E	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.c,1317 :: 		
0x0230	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.c,1318 :: 		
0x0232	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.c,1319 :: 		
0x0234	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.c,1320 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.c,1321 :: 		
0x0236	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1322 :: 		
0x0238	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1323 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.c,1324 :: 		
0x023A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1325 :: 		
0x023C	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.c,1326 :: 		
0x023E	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.c,1327 :: 		
CompareFp_infinite:
;__Lib_MathDouble.c,1328 :: 		
0x0240	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.c,1329 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.c,1330 :: 		
0x0242	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.c,1331 :: 		
0x0244	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.c,1332 :: 		
0x0246	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.c,1333 :: 		
CompareFp_normalize:
;__Lib_MathDouble.c,1334 :: 		
0x0248	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.c,1335 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.c,1336 :: 		
0x024A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.c,1337 :: 		
0x024C	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.c,1338 :: 		
0x024E	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.c,1339 :: 		
0x0250	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.c,1340 :: 		
0x0252	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.c,1343 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.c,1345 :: 		
L_end__Compare_Fp:
0x0254	0xFA8000  	ULNK
0x0256	0x060000  	RETURN
; end of __Compare_Fp
__Compare_Le_Fp:
0x0262	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,1348 :: 		
;__Lib_MathDouble.c,1349 :: 		
0x0264	0x200014  	MOV	#1, W4
;__Lib_MathDouble.c,1350 :: 		
0x0266	0x07FFBF  	RCALL	__Compare_Fp
;__Lib_MathDouble.c,1351 :: 		
L_end__Compare_Le_Fp:
0x0268	0xFA8000  	ULNK
0x026A	0x060000  	RETURN
; end of __Compare_Le_Fp
0x0B28	0x20800A  	MOV	#2048, W10
0x0B2A	0x20000B  	MOV	#0, W11
0x0B2C	0x090004  	REPEAT	#4
0x0B2E	0x781D0B  	MOV	W11, [W10++]
0x0B30	0x060000  	RETURN
_GTMOint:
0x051E	0xF80034  	PUSH	PSVPAG
0x0520	0xF80036  	PUSH	RCOUNT
0x0522	0x781F80  	PUSH	W0
0x0524	0x200020  	MOV	#2, W0
0x0526	0x09000C  	REPEAT	#12
0x0528	0x781FB0  	PUSH	[W0++]
;q4.c,39 :: 		void GTMOint() iv IVT_ADDR_T1INTERRUPT ics ICS_AUTO {
;q4.c,40 :: 		IFS0bits.T1IF = 0;  // zera a flag do timer ap?s ela ser ativada
0x052A	0xA96084  	BCLR.B	IFS0bits, #3
;q4.c,41 :: 		distancia = TMR1;   // Dist?ncia em cm
0x052C	0xBF8100  	MOV	TMR1, WREG
0x052E	0x884040  	MOV	W0, _distancia
;q4.c,42 :: 		TMR1 = 0;           // TMR1 ? zerado depois da contagem
0x0530	0xEF2100  	CLR	TMR1
;q4.c,43 :: 		}
L_end_GTMOint:
0x0532	0x2001A0  	MOV	#26, W0
0x0534	0x09000C  	REPEAT	#12
0x0536	0x78104F  	POP	[W0--]
0x0538	0x78004F  	POP	W0
0x053A	0xF90036  	POP	RCOUNT
0x053C	0xF90034  	POP	PSVPAG
0x053E	0x064000  	RETFIE
; end of _GTMOint
_criativ:
0x04F2	0xF80034  	PUSH	PSVPAG
0x04F4	0xF80036  	PUSH	RCOUNT
0x04F6	0x781F80  	PUSH	W0
0x04F8	0x200020  	MOV	#2, W0
0x04FA	0x09000C  	REPEAT	#12
0x04FC	0x781FB0  	PUSH	[W0++]
;q4.c,45 :: 		void criativ() iv IVT_ADDR_INT0INTERRUPT ics ICS_AUTO {
;q4.c,46 :: 		delay_ms(50);        // debouncing do botao
0x04FE	0x200058  	MOV	#5, W8
0x0500	0x211AB7  	MOV	#4523, W7
L_criativ0:
0x0502	0xED200E  	DEC	W7
0x0504	0x3AFFFE  	BRA NZ	L_criativ0
0x0506	0xED2010  	DEC	W8
0x0508	0x3AFFFC  	BRA NZ	L_criativ0
;q4.c,47 :: 		flag = ~flag;        // sempre que o botao for acionado ele inverte o estado anterior
0x050A	0x208000  	MOV	#lo_addr(_flag), W0
0x050C	0xEA8810  	COM	[W0], [W0]
;q4.c,48 :: 		IFS0bits.INT0IF = 0; // interrup??o ? zerada e fica esperando ser acionada outra vez
0x050E	0xA90084  	BCLR.B	IFS0bits, #0
;q4.c,49 :: 		}
L_end_criativ:
0x0510	0x2001A0  	MOV	#26, W0
0x0512	0x09000C  	REPEAT	#12
0x0514	0x78104F  	POP	[W0--]
0x0516	0x78004F  	POP	W0
0x0518	0xF90036  	POP	RCOUNT
0x051A	0xF90034  	POP	PSVPAG
0x051C	0x064000  	RETFIE
; end of _criativ
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [110]    _dis_play
0x016E     [120]    __Float2Longint
0x01E6     [114]    __Compare_Fp
0x0258      [10]    __Compare_Ge_Fp
0x0262      [10]    __Compare_Le_Fp
0x026C     [282]    __Mul_FP
0x0386     [182]    _conversao
0x043C     [182]    __Long2Float
0x04F2      [44]    _criativ
0x051E      [34]    _GTMOint
0x0540    [1512]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0110       [2]    T2CON
0x0800       [2]    _flag
0x0802       [4]    _dist_cm
0x0102       [2]    PR1
0x010C       [2]    PR2
0x0104       [2]    T1CON
0x0806       [2]    _aux
0x0084       [2]    IFS0bits
0x0100       [2]    TMR1
0x0808       [2]    _distancia
0x02D6       [1]    LATDbits
0x02DC       [2]    LATEbits
0x008C       [2]    IEC0bits
0x02C6       [2]    TRISB
0x02CC       [2]    TRISCbits
0x02D2       [2]    TRISD
0x02E2       [1]    LATFbits
0x02CA       [2]    LATB
0x02A8       [2]    ADPCFG
0x02D0       [2]    LATC
0x02D6       [2]    LATD
0x02E2       [2]    LATF
0x02D8       [2]    TRISEbits
0x02DE       [2]    TRISF
0x0084       [2]    IFS0
0x0084       [2]    IFS0
0x0014       [2]    FARG_dis_play_valor
0x0100       [2]    TMR1
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x010C       [2]    PR2
0x0110       [2]    T2CON
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02CA       [2]    LATB
0x02D0       [2]    LATC
0x02D2       [2]    TRISD
0x02D6       [2]    LATD
0x02DE       [2]    TRISF
0x02E2       [2]    LATF
0x0014       [4]    FARG_conversao_distancia
