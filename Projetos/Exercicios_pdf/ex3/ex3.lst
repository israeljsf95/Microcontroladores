;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25/10/2019 08:36:46
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040100  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0100	0x20800F  	MOV	#2048, W15
0x0102	0x20FFF0  	MOV	#4095, W0
0x0104	0xB7A020  	MOV	WREG, SPLIM
0x0106	0x200000  	MOV	#0, W0
0x0108	0xB7A034  	MOV	WREG, PSVPAG
0x010A	0x200040  	MOV	#4, W0
0x010C	0xB72044  	IOR	CORCON
0x010E	0xFA0004  	LNK	#4
;ex3.c,1 :: 		void main() {
;ex3.c,2 :: 		ADPCFG=0xFFFF;
0x0110	0x2FFFF0  	MOV	#65535, W0
0x0112	0xB7A2A8  	MOV	WREG, ADPCFG
;ex3.c,3 :: 		TRISB=0;
0x0114	0xEF22C6  	CLR	TRISB
;ex3.c,4 :: 		TRISD=255;
0x0116	0x200FF0  	MOV	#255, W0
0x0118	0xB7A2D2  	MOV	WREG, TRISD
;ex3.c,5 :: 		while(1){
L_main0:
;ex3.c,6 :: 		if (PORTDbits.RD1==1){
0x011A	0xAE22D4  	BTSS.B	PORTDbits, #1
0x011C	0x370014  	BRA	L_main2
;ex3.c,8 :: 		for(i=256;i>=1;i=i/2){
0x011E	0x201000  	MOV	#256, W0
0x0120	0x980700  	MOV	W0, [W14+0]
L_main3:
0x0122	0x90000E  	MOV	[W14+0], W0
0x0124	0xE10061  	CP	W0, #1
0x0126	0x35000E  	BRA LT	L_main4
L__main17:
;ex3.c,9 :: 		LATB=i;
0x0128	0x90000E  	MOV	[W14+0], W0
0x012A	0xB7A2CA  	MOV	WREG, LATB
;ex3.c,10 :: 		Delay_ms(500);
0x012C	0x200298  	MOV	#41, W8
0x012E	0x2B0B77  	MOV	#45239, W7
L_main6:
0x0130	0xED200E  	DEC	W7
0x0132	0x3AFFFE  	BRA NZ	L_main6
0x0134	0xED2010  	DEC	W8
0x0136	0x3AFFFC  	BRA NZ	L_main6
;ex3.c,8 :: 		for(i=256;i>=1;i=i/2){
0x0138	0x90000E  	MOV	[W14+0], W0
0x013A	0x200022  	MOV	#2, W2
0x013C	0x090011  	REPEAT	#17
0x013E	0xD80002  	DIV.S	W0, W2
0x0140	0x980700  	MOV	W0, [W14+0]
;ex3.c,11 :: 		}
0x0142	0x37FFEF  	BRA	L_main3
L_main4:
;ex3.c,12 :: 		}else{
0x0144	0x370012  	BRA	L_main8
L_main2:
;ex3.c,14 :: 		for(i=1;i<256;i=i*2){
0x0146	0x200010  	MOV	#1, W0
0x0148	0x980710  	MOV	W0, [W14+2]
L_main9:
0x014A	0x90009E  	MOV	[W14+2], W1
0x014C	0x201000  	MOV	#256, W0
0x014E	0xE10800  	CP	W1, W0
0x0150	0x3D000C  	BRA GE	L_main10
L__main18:
;ex3.c,15 :: 		LATB=i;
0x0152	0x90001E  	MOV	[W14+2], W0
0x0154	0xB7A2CA  	MOV	WREG, LATB
;ex3.c,16 :: 		Delay_ms(500);
0x0156	0x200298  	MOV	#41, W8
0x0158	0x2B0B77  	MOV	#45239, W7
L_main12:
0x015A	0xED200E  	DEC	W7
0x015C	0x3AFFFE  	BRA NZ	L_main12
0x015E	0xED2010  	DEC	W8
0x0160	0x3AFFFC  	BRA NZ	L_main12
;ex3.c,14 :: 		for(i=1;i<256;i=i*2){
0x0162	0x90001E  	MOV	[W14+2], W0
0x0164	0xDD0041  	SL	W0, #1, W0
0x0166	0x980710  	MOV	W0, [W14+2]
;ex3.c,17 :: 		}
0x0168	0x37FFF0  	BRA	L_main9
L_main10:
;ex3.c,18 :: 		}
L_main8:
;ex3.c,19 :: 		LATB=0;
0x016A	0xEF22CA  	CLR	LATB
;ex3.c,20 :: 		Delay_ms(500);
0x016C	0x200298  	MOV	#41, W8
0x016E	0x2B0B77  	MOV	#45239, W7
L_main14:
0x0170	0xED200E  	DEC	W7
0x0172	0x3AFFFE  	BRA NZ	L_main14
0x0174	0xED2010  	DEC	W8
0x0176	0x3AFFFC  	BRA NZ	L_main14
;ex3.c,21 :: 		}
0x0178	0x37FFD0  	BRA	L_main0
;ex3.c,22 :: 		}
L_end_main:
0x017A	0xFA8000  	ULNK
L__main_end_loop:
0x017C	0x37FFFF  	BRA	L__main_end_loop
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [126]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x02D4       [1]    PORTDbits
0x02CA       [2]    LATB
0x02D2       [2]    TRISD
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02CA       [2]    LATB
0x02D2       [2]    TRISD
