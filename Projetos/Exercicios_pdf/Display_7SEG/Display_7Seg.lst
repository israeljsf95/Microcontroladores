;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/10/2019 08:08:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040100  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0100	0x20816F  	MOV	#2070, W15
0x0102	0x20FFF0  	MOV	#4095, W0
0x0104	0xB7A020  	MOV	WREG, SPLIM
0x0106	0x200000  	MOV	#0, W0
0x0108	0xB7A034  	MOV	WREG, PSVPAG
0x010A	0x200040  	MOV	#4, W0
0x010C	0xB72044  	IOR	CORCON
0x010E	0x000000020164  	CALL	356
;Display_7Seg.c,6 :: 		void main() {
;Display_7Seg.c,8 :: 		ADPCFG = 0xFFFF;
0x0112	0x2FFFF0  	MOV	#65535, W0
0x0114	0xB7A2A8  	MOV	WREG, ADPCFG
;Display_7Seg.c,9 :: 		TRISB = 0;
0x0116	0xEF22C6  	CLR	TRISB
;Display_7Seg.c,10 :: 		TRISD = 0;
0x0118	0xEF22D2  	CLR	TRISD
;Display_7Seg.c,11 :: 		while(1) {
L_main0:
;Display_7Seg.c,12 :: 		PortD = 0x1;
0x011A	0x200010  	MOV	#1, W0
0x011C	0xB7A2D4  	MOV	WREG, PORTD
;Display_7Seg.c,13 :: 		for(i=0;i!=10;i++){
0x011E	0xEF2000  	CLR	W0
0x0120	0x8840A0  	MOV	W0, _i
L_main2:
0x0122	0x8040A0  	MOV	_i, W0
0x0124	0xE1006A  	CP	W0, #10
0x0126	0x320011  	BRA Z	L_main3
L__main8:
;Display_7Seg.c,14 :: 		delay_ms(1000);
0x0128	0x200528  	MOV	#82, W8
0x012A	0x2616F7  	MOV	#24943, W7
L_main5:
0x012C	0xED200E  	DEC	W7
0x012E	0x3AFFFE  	BRA NZ	L_main5
0x0130	0xED2010  	DEC	W8
0x0132	0x3AFFFC  	BRA NZ	L_main5
0x0134	0x000000  	NOP
;Display_7Seg.c,15 :: 		PortB = num[i];
0x0136	0x8040A0  	MOV	_i, W0
0x0138	0xDD00C1  	SL	W0, #1, W1
0x013A	0x208000  	MOV	#lo_addr(_num), W0
0x013C	0x400001  	ADD	W0, W1, W0
0x013E	0x780010  	MOV	[W0], W0
0x0140	0xB7A2C8  	MOV	WREG, PORTB
;Display_7Seg.c,13 :: 		for(i=0;i!=10;i++){
0x0142	0x200011  	MOV	#1, W1
0x0144	0x208140  	MOV	#lo_addr(_i), W0
0x0146	0x408810  	ADD	W1, [W0], [W0]
;Display_7Seg.c,18 :: 		}
0x0148	0x37FFEC  	BRA	L_main2
L_main3:
;Display_7Seg.c,19 :: 		}
0x014A	0x37FFE7  	BRA	L_main0
;Display_7Seg.c,21 :: 		}
L_end_main:
L__main_end_loop:
0x014C	0x37FFFF  	BRA	L__main_end_loop
; end of _main
0x0164	0x208001  	MOV	#lo_addr(_num), W1
0x0166	0x2814E0  	MOV	#33102, W0
0x0168	0x09000A  	REPEAT	#10
0x016A	0x7818B0  	MOV	[W0++], [W1++]
0x016C	0x060000  	RETURN
;Display_7Seg.c,0 :: ?ICS_num [20]
0x014E	0x003F ;?ICS_num+0
0x0150	0x0006 ;?ICS_num+2
0x0152	0x005B ;?ICS_num+4
0x0154	0x004F ;?ICS_num+6
0x0156	0x0066 ;?ICS_num+8
0x0158	0x006D ;?ICS_num+10
0x015A	0x007D ;?ICS_num+12
0x015C	0x0007 ;?ICS_num+14
0x015E	0x007F ;?ICS_num+16
0x0160	0x006F ;?ICS_num+18
; end of ?ICS_num
;Display_7Seg.c,0 :: ?ICS_i [2]
0x0162	0x0000 ;?ICS_i+0
; end of ?ICS_i
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [78]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x02C8       [2]    PORTB
0x02D4       [2]    PORTD
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02D2       [2]    TRISD
0x0800      [20]    _num
0x0814       [2]    _i
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02C8       [2]    PORTB
0x02D2       [2]    TRISD
0x02D4       [2]    PORTD
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x014E      [20]    ?ICS_num
0x0162       [2]    ?ICS_i
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_end_main
  _main
  L__main8
  L__main_end_loop
