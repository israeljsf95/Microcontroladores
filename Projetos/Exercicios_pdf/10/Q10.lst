;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/11/2019 21:00:31
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040100  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0x0100	0x2081EF  	MOV	#2078, W15
0x0102	0x20FFF0  	MOV	#4095, W0
0x0104	0xB7A020  	MOV	WREG, SPLIM
0x0106	0x200000  	MOV	#0, W0
0x0108	0xB7A034  	MOV	WREG, PSVPAG
0x010A	0x200040  	MOV	#4, W0
0x010C	0xB72044  	IOR	CORCON
0x010E	0x0000000201F6  	CALL	502
0x0112	0x000000020200  	CALL	512
;Q10.c,10 :: 		void main() {
;Q10.c,11 :: 		ADPCFG=0xFFFF;
0x0116	0x2FFFF0  	MOV	#65535, W0
0x0118	0xB7A2A8  	MOV	WREG, ADPCFG
;Q10.c,12 :: 		TRISD = 0;
0x011A	0xEF22D2  	CLR	TRISD
;Q10.c,13 :: 		LATD = 0;
0x011C	0xEF22D6  	CLR	LATD
;Q10.c,14 :: 		TRISB = 0;
0x011E	0xEF22C6  	CLR	TRISB
;Q10.c,15 :: 		LATB = 0;
0x0120	0xEF22CA  	CLR	LATB
;Q10.c,17 :: 		do{
L_main0:
;Q10.c,19 :: 		for(i=0; i <= 5; i++){
0x0122	0xEF2000  	CLR	W0
0x0124	0x884020  	MOV	W0, _i
L_main3:
0x0126	0x804020  	MOV	_i, W0
0x0128	0xE10065  	CP	W0, #5
0x012A	0x3E0034  	BRA GTU	L_main4
L__main19:
;Q10.c,21 :: 		LATDbits.LATD0 = 0;
0x012C	0xA902D6  	BCLR.B	LATDbits, #0
;Q10.c,22 :: 		LATB = num[contu];
0x012E	0x804030  	MOV	_contu, W0
0x0130	0xDD00C1  	SL	W0, #1, W1
0x0132	0x208080  	MOV	#lo_addr(_num), W0
0x0134	0x400001  	ADD	W0, W1, W0
0x0136	0x780010  	MOV	[W0], W0
0x0138	0xB7A2CA  	MOV	WREG, LATB
;Q10.c,23 :: 		Delay_us(1000);
0x013A	0x214D57  	MOV	#5333, W7
L_main6:
0x013C	0xED200E  	DEC	W7
0x013E	0x3AFFFE  	BRA NZ	L_main6
0x0140	0x000000  	NOP
;Q10.c,24 :: 		LATDbits.LATD0 = 1;
0x0142	0xA802D6  	BSET.B	LATDbits, #0
;Q10.c,26 :: 		LATDbits.LATD1 = 0;
0x0144	0xA922D6  	BCLR.B	LATDbits, #1
;Q10.c,27 :: 		LATB = num[contd];
0x0146	0x804010  	MOV	_contd, W0
0x0148	0xDD00C1  	SL	W0, #1, W1
0x014A	0x208080  	MOV	#lo_addr(_num), W0
0x014C	0x400001  	ADD	W0, W1, W0
0x014E	0x780010  	MOV	[W0], W0
0x0150	0xB7A2CA  	MOV	WREG, LATB
;Q10.c,28 :: 		Delay_us(1000);
0x0152	0x214D57  	MOV	#5333, W7
L_main8:
0x0154	0xED200E  	DEC	W7
0x0156	0x3AFFFE  	BRA NZ	L_main8
0x0158	0x000000  	NOP
;Q10.c,29 :: 		LATDbits.LATD1 = 1;
0x015A	0xA822D6  	BSET.B	LATDbits, #1
;Q10.c,31 :: 		LATDbits.LATD2 = 0;
0x015C	0xA942D6  	BCLR.B	LATDbits, #2
;Q10.c,32 :: 		LATB = num[contc];
0x015E	0x804000  	MOV	_contc, W0
0x0160	0xDD00C1  	SL	W0, #1, W1
0x0162	0x208080  	MOV	#lo_addr(_num), W0
0x0164	0x400001  	ADD	W0, W1, W0
0x0166	0x780010  	MOV	[W0], W0
0x0168	0xB7A2CA  	MOV	WREG, LATB
;Q10.c,33 :: 		Delay_us(1000);
0x016A	0x214D57  	MOV	#5333, W7
L_main10:
0x016C	0xED200E  	DEC	W7
0x016E	0x3AFFFE  	BRA NZ	L_main10
0x0170	0x000000  	NOP
;Q10.c,34 :: 		LATDbits.LATD2 = 1;
0x0172	0xA842D6  	BSET.B	LATDbits, #2
;Q10.c,36 :: 		LATDbits.LATD3 = 0;
0x0174	0xA962D6  	BCLR.B	LATDbits, #3
;Q10.c,37 :: 		LATB = num[contm];
0x0176	0x8040E0  	MOV	_contm, W0
0x0178	0xDD00C1  	SL	W0, #1, W1
0x017A	0x208080  	MOV	#lo_addr(_num), W0
0x017C	0x400001  	ADD	W0, W1, W0
0x017E	0x780010  	MOV	[W0], W0
0x0180	0xB7A2CA  	MOV	WREG, LATB
;Q10.c,38 :: 		Delay_us(1000);
0x0182	0x214D57  	MOV	#5333, W7
L_main12:
0x0184	0xED200E  	DEC	W7
0x0186	0x3AFFFE  	BRA NZ	L_main12
0x0188	0x000000  	NOP
;Q10.c,39 :: 		LATDbits.LATD3 = 1;
0x018A	0xA862D6  	BSET.B	LATDbits, #3
;Q10.c,19 :: 		for(i=0; i <= 5; i++){
0x018C	0x200011  	MOV	#1, W1
0x018E	0x208040  	MOV	#lo_addr(_i), W0
0x0190	0x408810  	ADD	W1, [W0], [W0]
;Q10.c,40 :: 		}
0x0192	0x37FFC9  	BRA	L_main3
L_main4:
;Q10.c,41 :: 		contu++;
0x0194	0x200011  	MOV	#1, W1
0x0196	0x208060  	MOV	#lo_addr(_contu), W0
0x0198	0x408810  	ADD	W1, [W0], [W0]
;Q10.c,42 :: 		if (contu==10){
0x019A	0x804030  	MOV	_contu, W0
0x019C	0xE1006A  	CP	W0, #10
0x019E	0x3A0005  	BRA NZ	L_main14
L__main20:
;Q10.c,43 :: 		contu=0;
0x01A0	0xEF2000  	CLR	W0
0x01A2	0x884030  	MOV	W0, _contu
;Q10.c,44 :: 		contd++;
0x01A4	0x200011  	MOV	#1, W1
0x01A6	0x208020  	MOV	#lo_addr(_contd), W0
0x01A8	0x408810  	ADD	W1, [W0], [W0]
;Q10.c,45 :: 		}
L_main14:
;Q10.c,46 :: 		if (contd==10){
0x01AA	0x804010  	MOV	_contd, W0
0x01AC	0xE1006A  	CP	W0, #10
0x01AE	0x3A0005  	BRA NZ	L_main15
L__main21:
;Q10.c,47 :: 		contd=0;
0x01B0	0xEF2000  	CLR	W0
0x01B2	0x884010  	MOV	W0, _contd
;Q10.c,48 :: 		contc++;
0x01B4	0x200011  	MOV	#1, W1
0x01B6	0x208000  	MOV	#lo_addr(_contc), W0
0x01B8	0x408810  	ADD	W1, [W0], [W0]
;Q10.c,49 :: 		}
L_main15:
;Q10.c,50 :: 		if (contc==10){
0x01BA	0x804000  	MOV	_contc, W0
0x01BC	0xE1006A  	CP	W0, #10
0x01BE	0x3A0005  	BRA NZ	L_main16
L__main22:
;Q10.c,51 :: 		contc=0;
0x01C0	0xEF2000  	CLR	W0
0x01C2	0x884000  	MOV	W0, _contc
;Q10.c,52 :: 		contm++;
0x01C4	0x200011  	MOV	#1, W1
0x01C6	0x2081C0  	MOV	#lo_addr(_contm), W0
0x01C8	0x408810  	ADD	W1, [W0], [W0]
;Q10.c,53 :: 		}
L_main16:
;Q10.c,54 :: 		if (contm==10){
0x01CA	0x8040E0  	MOV	_contm, W0
0x01CC	0xE1006A  	CP	W0, #10
0x01CE	0x3A0002  	BRA NZ	L_main17
L__main23:
;Q10.c,55 :: 		contm=0;
0x01D0	0xEF2000  	CLR	W0
0x01D2	0x8840E0  	MOV	W0, _contm
;Q10.c,56 :: 		}
L_main17:
;Q10.c,57 :: 		}while(1);
0x01D4	0x37FFA6  	BRA	L_main0
;Q10.c,58 :: 		}
L_end_main:
L__main_end_loop:
0x01D6	0x37FFFF  	BRA	L__main_end_loop
; end of _main
0x01F6	0x20800A  	MOV	#2048, W10
0x01F8	0x20000B  	MOV	#0, W11
0x01FA	0x09000E  	REPEAT	#14
0x01FC	0x781D0B  	MOV	W11, [W10++]
0x01FE	0x060000  	RETURN
0x0200	0x208001  	MOV	#lo_addr(_contc), W1
0x0202	0x281D80  	MOV	#33240, W0
0x0204	0x09000E  	REPEAT	#14
0x0206	0x7818B0  	MOV	[W0++], [W1++]
0x0208	0x060000  	RETURN
;Q10.c,0 :: ?ICS_contc [2]
0x01D8	0x0000 ;?ICS_contc+0
; end of ?ICS_contc
;Q10.c,0 :: ?ICS_contd [2]
0x01DA	0x0000 ;?ICS_contd+0
; end of ?ICS_contd
;Q10.c,0 :: ?ICS_i [2]
0x01DC	0x0000 ;?ICS_i+0
; end of ?ICS_i
;Q10.c,0 :: ?ICS_contu [2]
0x01DE	0x0000 ;?ICS_contu+0
; end of ?ICS_contu
;Q10.c,0 :: ?ICS_num [20]
0x01E0	0x0040 ;?ICS_num+0
0x01E2	0x0079 ;?ICS_num+2
0x01E4	0x0024 ;?ICS_num+4
0x01E6	0x0030 ;?ICS_num+6
0x01E8	0x0019 ;?ICS_num+8
0x01EA	0x0012 ;?ICS_num+10
0x01EC	0x0002 ;?ICS_num+12
0x01EE	0x0078 ;?ICS_num+14
0x01F0	0x0000 ;?ICS_num+16
0x01F2	0x0010 ;?ICS_num+18
; end of ?ICS_num
;Q10.c,0 :: ?ICS_contm [2]
0x01F4	0x0000 ;?ICS_contm+0
; end of ?ICS_contm
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100     [216]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x02D6       [1]    LATDbits
0x02D6       [2]    LATD
0x02D2       [2]    TRISD
0x02A8       [2]    ADPCFG
0x02CA       [2]    LATB
0x02C6       [2]    TRISB
0x0800       [2]    _contc
0x0802       [2]    _contd
0x0804       [2]    _i
0x0806       [2]    _contu
0x0808      [20]    _num
0x081C       [2]    _contm
0x02A8       [2]    ADPCFG
0x02C6       [2]    TRISB
0x02CA       [2]    LATB
0x02D2       [2]    TRISD
0x02D6       [2]    LATD
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01D8       [2]    ?ICS_contc
0x01DA       [2]    ?ICS_contd
0x01DC       [2]    ?ICS_i
0x01DE       [2]    ?ICS_contu
0x01E0      [20]    ?ICS_num
0x01F4       [2]    ?ICS_contm
